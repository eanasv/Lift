{"version":3,"sources":["components/Header.tsx","util/ClearReduxStore.js","components/Texts/InformationText.tsx","components/topMenu/TopMenu.tsx","components/Footer/Footer.tsx","components/ContainerCard.tsx","components/CartNumber.tsx","pages/CenterFooterButton.tsx","pages/Containers/Container.tsx"],"names":["Header","HeaderParam","useState","search","check","close","home","info","actionType","setActionType","userDetails","Store","getState","CheckUserStatus","user","checked","setChecked","checkedLabel","setCheckedLabel","backIconProps","name","slot","zoom","useEffect","updateActionType","action","history","useHistory","back","e","customBack","backClick","goBack","myValue","homeButtonClicked","dispatch","type","LoginUserTypes","locationProps","push","selectUserType","a","data","detail","value","url","EndPointURL","agentCode","agentType","endPointHeader","userName","userType","loginWithAgent","response","result","dataItems","success","reduxActions","accessToken","activeCompanyCode","selectedAgent","style","agentHeader","height","className","paddingBottom","checkedProps","hidden","showChecked","fill","onClick","Icon","iconProps","onIonChange","addContainerToCart","checkAndUncheckAll","label","searchClick","icon","minWidth","infoClick","informationCircle","checkClick","closeSharp","agents","interface","disabled","showAgent","length","backgroundColor","interfaceOptions","cssClass","map","item","index","key","agentName","src","InformationText","message","TopMenu","props","agentCodeoptions","setValue","topMenuProps","size","clickedOnTopMenu","fontSize","paddingLeft","paddingRight","transform","rotate","id","selectedText","val","console","log","selected","cancel-text","placeholder","list","opt","Footer","href","ContainerCard","containerItem","containerClick","class","container_number","weight","pickupLocation","consigneeCode","storagePaidTill","holdAuthority","connect","state","numberOfContainers","Cart","updateCartNumber","payLoad","number","setnumber","showPopover","event","undefined","popoverState","setShowPopover","count","containerList","container","isOpen","onDidDismiss","numberOfSelectedContainers","VariableValues","iconType","clickEvent","cartNumber","updateContainersInCart","addDeclarationToCart","currentDecl","setcurrentDecl","setShowChecked","currentSelection","topMenuItems","chevronDownOutline","updateContainerInCart","forEach","selectedNumber","boeNumber"],"mappings":"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","file":"static/js/12.5db1f990.chunk.js","sourcesContent":["import {\r\n  IonButton,\r\n  IonCheckbox,\r\n  IonHeader,\r\n  IonIcon,\r\n  IonImg,\r\n  IonLabel,\r\n  IonSelect,\r\n  IonSelectOption,\r\n  IonText,\r\n  IonToolbar,\r\n} from \"@ionic/react\";\r\nimport { closeSharp, informationCircle, search } from \"ionicons/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ClearReduxStore from \"../util/ClearReduxStore\";\r\nimport \"./Header.scss\";\r\nimport Icon from \"./Icon\";\r\nimport Store from \"../redux/Store\";\r\nimport * as EndPointURL from \"../util/EndPointURL\";\r\nimport * as reduxActions from \"../redux/actions/AllActions\";\r\nimport { loginWithAgent } from \"../services/EndPointApi\";\r\n\r\ninterface HeaderParam {\r\n  label?: string;\r\n  action?: string;\r\n  showAgent?: boolean;\r\n  agentHeader?: boolean;\r\n  customBack?: boolean;\r\n  searchClick?(e: any): void;\r\n  infoClick?(e: any): void;\r\n  checkClick?(e: any): void;\r\n  backClick?(e: any): void;\r\n  locationProps?: any;\r\n  checkedProps?: any;\r\n}\r\nconst Header: React.FC<HeaderParam> = (HeaderParam) => {\r\n  const [actionType, setActionType] = useState({\r\n    search: true,\r\n    check: true,\r\n    close: true,\r\n    home: true,\r\n    info: false,\r\n  });\r\n\r\n  var userDetails = Store.getState().CheckUserStatus.user;\r\n\r\n  const [checked, setChecked] = useState(false);\r\n  const [checkedLabel, setCheckedLabel] = useState(\"Select All\");\r\n  const backIconProps = {\r\n    name: \"back-arrow\",\r\n    slot: \"icon-only\",\r\n    zoom: \"\",\r\n  };\r\n  const homeIconProps = {\r\n    name: \"home-new\",\r\n    slot: \"icon-only\",\r\n    zoom: \"\",\r\n  };\r\n  const checkIconProps = {\r\n    name: \"Check\",\r\n    slot: \"icon-only\",\r\n    zoom: \"\",\r\n  };\r\n\r\n  function checkAndUncheckAll(checked) {\r\n    setChecked(checked);\r\n    if (checked) {\r\n      setCheckedLabel(\"Unselect All\");\r\n      HeaderParam.checkedProps.addContainerToCart(\"\", \"\", \"checked\");\r\n    } else {\r\n      HeaderParam.checkedProps.addContainerToCart(\"\", \"\", \"unchecked\");\r\n      setCheckedLabel(\"Select All\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateActionType(HeaderParam.action ? HeaderParam.action : \"none\");\r\n  }, []);\r\n\r\n  let history = useHistory();\r\n  const back = (e: any) => {\r\n    if (HeaderParam.customBack) {\r\n      HeaderParam.backClick(e);\r\n    } else {\r\n      history.goBack();\r\n    }\r\n  };\r\n\r\n  const updateActionType = (myValue: string) => {\r\n    if (myValue) {\r\n      if (myValue === \"search\") {\r\n        setActionType({\r\n          search: false,\r\n          check: true,\r\n          close: true,\r\n          home: true,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"check\") {\r\n        setActionType({\r\n          search: true,\r\n          check: false,\r\n          close: true,\r\n          home: true,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"close\") {\r\n        setActionType({\r\n          search: true,\r\n          check: true,\r\n          close: false,\r\n          home: true,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"home\") {\r\n        setActionType({\r\n          search: true,\r\n          check: true,\r\n          close: true,\r\n          home: false,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"info\") {\r\n        setActionType({\r\n          search: true,\r\n          check: true,\r\n          close: true,\r\n          home: true,\r\n          info: false,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  function homeButtonClicked() {\r\n    ClearReduxStore();\r\n    HeaderParam.locationProps.history.push(\"/tabs/landing\");\r\n  }\r\n\r\n  const selectUserType = async (e: any) => {\r\n    let data = e.detail.value;\r\n    let url =\r\n      EndPointURL.loginAgent +\r\n      \"?agentCode=\" +\r\n      data.agentCode +\r\n      \"&agentType=\" +\r\n      data.agentType;\r\n\r\n    var endPointHeader = {\r\n      userName: userDetails.userName,\r\n      userType: \"IMPORTER_APP\",\r\n    };\r\n\r\n    var response = await loginWithAgent(url, endPointHeader);\r\n    var result = response.data.data.dataItems[0];\r\n    if (await response.success) {\r\n      var accessToken = await reduxActions.AddAccessToKen(result.accessToken);\r\n      if (accessToken) Store.dispatch(accessToken);\r\n\r\n      var agentType = await reduxActions.AddAgentType(\r\n        result.user.activeCompanyCode\r\n      );\r\n      if (agentType) Store.dispatch(agentType);\r\n\r\n      var selectedAgent = await reduxActions.AddSelectedAgent(data);\r\n\r\n      if (selectedAgent) Store.dispatch(selectedAgent);\r\n\r\n      var test = Store.getState().CheckUserStatus;\r\n    }\r\n  };\r\n\r\n  const agentCodeoptions = {\r\n    cssClass: \"agent-interface\",\r\n  };\r\n\r\n  return (\r\n    <IonHeader\r\n      style={HeaderParam.agentHeader ? { height: \"102px\" } : { height: \"10%\" }}\r\n    >\r\n      <IonToolbar className=\"header\">\r\n        <div\r\n          className=\"mainContainer\"\r\n          style={!HeaderParam.agentHeader ? { paddingBottom: 0 } : {}}\r\n        >\r\n          {HeaderParam.checkedProps ? (\r\n            <div\r\n              className=\"selectAllBg\"\r\n              hidden={!HeaderParam.checkedProps.showChecked}\r\n            >\r\n              <div>\r\n                <IonButton\r\n                  fill=\"clear\"\r\n                  onClick={(e) => {\r\n                    back(e);\r\n                  }}\r\n                >\r\n                  <Icon iconProps={backIconProps} />\r\n                </IonButton>\r\n              </div>\r\n              <div className=\"checkBoxContainer\">\r\n                <IonCheckbox\r\n                  className=\"checkBox\"\r\n                  checked={checked}\r\n                  onIonChange={(e) => checkAndUncheckAll(e.detail.checked)}\r\n                />\r\n              </div>\r\n              <div className=\"checkBoxLabelCol\">\r\n                <IonLabel className=\"checkBoxLabel\">{checkedLabel}</IonLabel>{\" \"}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <div className=\"backArrow\">\r\n            {HeaderParam.label != \"Home\" && actionType.close ? (\r\n              <IonButton\r\n                fill=\"clear\"\r\n                onClick={(e) => {\r\n                  back(e);\r\n                }}\r\n              >\r\n                <Icon iconProps={backIconProps} />\r\n              </IonButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n          <div className=\"header-label\">\r\n            {\" \"}\r\n            <IonText>{HeaderParam.label}</IonText>\r\n          </div>\r\n          <div className=\"header-right\">\r\n            <IonButton\r\n              hidden={actionType.search}\r\n              fill=\"clear\"\r\n              onClick={HeaderParam.searchClick}\r\n            >\r\n              <IonIcon\r\n                slot=\"icon-only\"\r\n                icon={search}\r\n                style={{ minWidth: \"30px\" }}\r\n              />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.info}\r\n              fill=\"clear\"\r\n              onClick={HeaderParam.infoClick}\r\n            >\r\n              <IonIcon\r\n                slot=\"icon-only\"\r\n                icon={informationCircle}\r\n                style={{ minWidth: \"30px\" }}\r\n              />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.check}\r\n              fill=\"clear\"\r\n              onClick={HeaderParam.checkClick}\r\n            >\r\n              {/* <IonIcon slot=\"icon-only\" src=\"\" style={{minWidth:'30px'}}/> */}\r\n              <Icon iconProps={checkIconProps} />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.home}\r\n              fill=\"clear\"\r\n              onClick={(e) => homeButtonClicked()}\r\n            >\r\n              <Icon iconProps={homeIconProps} />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.close}\r\n              fill=\"clear\"\r\n              onClick={(e) => {\r\n                back(e);\r\n              }}\r\n            >\r\n              <IonIcon slot=\"icon-only\" icon={closeSharp} />\r\n            </IonButton>\r\n            <IonButton hidden={HeaderParam.action !== \"\"} fill=\"clear\">\r\n              <IonIcon />\r\n            </IonButton>\r\n          </div>\r\n        </div>\r\n        {userDetails.agents && HeaderParam.agentHeader && (\r\n          <IonToolbar className=\"agent-code-header\">\r\n            <IonSelect\r\n              value={userDetails.selectedAgent}\r\n              interface=\"popover\"\r\n              onIonChange={(e) => selectUserType(e)}\r\n              disabled={\r\n                !HeaderParam.showAgent || userDetails.agents.length == 1\r\n              }\r\n              style={\r\n                !HeaderParam.showAgent ? { backgroundColor: \"#DDF1FF\" } : {}\r\n              }\r\n              interfaceOptions={agentCodeoptions}\r\n            >\r\n              {userDetails.agents.map((item, index) => {\r\n                return (\r\n                  <IonSelectOption\r\n                    value={item}\r\n                    key={index}\r\n                    className=\"select-agent-opt\"\r\n                  >\r\n                    {item.agentCode + \"-\" + item.agentName}\r\n                  </IonSelectOption>\r\n                );\r\n              })}\r\n            </IonSelect>\r\n            <IonIcon\r\n              src=\"assets/icon/arrow-down.svg\"\r\n              className=\"arrow-down-icon\"\r\n              hidden={!HeaderParam.showAgent || userDetails.agents.length == 1}\r\n            />\r\n          </IonToolbar>\r\n        )}\r\n        {/* </IonImg> */}\r\n      </IonToolbar>\r\n    </IonHeader>\r\n  );\r\n};\r\nexport default Header;\r\n","import Store from \"../redux/Store\";\nimport * as LoginUserTypes from \"../redux/actionTypes/AllActionTypes\";\n\nexport default function ClearReduxStore() {\n  Store.dispatch({ type: LoginUserTypes.BOOK_TRUCK_CLEAR });\n  Store.dispatch({ type: LoginUserTypes.REMOVE_ALL_CONTAINERS });\n  Store.dispatch({ type: LoginUserTypes.REMOVE_ALL_TRUCK });\n}\n","import React from \"react\";\r\nimport \"./InformationText.scss\";\r\n\r\ninterface informationTextProps {\r\n  message;\r\n}\r\nconst InformationText: React.FC<informationTextProps> = ({ message }) => {\r\n  return <div className=\"container-count\">Displaying {message}</div>;\r\n};\r\nexport default InformationText;\r\n","import {\r\n  IonButton,\r\n  IonIcon,\r\n  IonRow,\r\n  IonSelect,\r\n  IonSelectOption,\r\n} from \"@ionic/react\";\r\nimport React, { useState } from \"react\";\r\nimport \"./TopMenu.scss\";\r\n\r\nexport default function TopMenu(props) {\r\n  const agentCodeoptions = {\r\n    cssClass: \"agent-interface-class\",\r\n  };\r\n  const [value, setValue] = useState<any>({});\r\n\r\n  return (\r\n    <IonRow className=\"horizontal-scroll\">\r\n      <div className=\"filter-buttons\">\r\n        {props.topMenuProps.map((item, index) => (\r\n          <div key={index}>\r\n            {item.type == \"button\" && (\r\n              <IonButton\r\n                className=\"circ-button\"\r\n                size=\"small\"\r\n                onClick={() => item.clickedOnTopMenu()}\r\n              >\r\n                {item.icon && <IonIcon icon={item.icon} slot={item.slot} />}\r\n                {item.src && (\r\n                  <IonIcon\r\n                    slot={item.slot}\r\n                    src={\"/assets/icon/\" + item.src + \".svg\"}\r\n                    style={{\r\n                      fontSize: item.size,\r\n                      paddingLeft: \"5px\",\r\n                      paddingRight: \"5px\",\r\n                      transform:item.rotate\r\n                    }}\r\n                  />\r\n                )}\r\n                {item.name && item.name}\r\n              </IonButton>\r\n            )}\r\n            {item.type == \"dropDown\" && (\r\n              <div id=\"drop-down-css\">\r\n                <fieldset>\r\n                  <IonSelect\r\n                    value={value}\r\n                    selectedText={value.label}\r\n                    interface=\"popover\"\r\n                    onIonChange={(e) => {\r\n                      let val = e.detail.value;\r\n                      setValue(val);\r\n                      console.log(item.selected);\r\n                      item.clickedOnTopMenu(val);\r\n                    }}\r\n                    cancel-text\r\n                    placeholder={item.name}\r\n                    interfaceOptions={agentCodeoptions}\r\n                    className=\"circ-button\"\r\n                  >\r\n                    {item.list.map((opt, index) => {\r\n                      return (\r\n                        <IonSelectOption\r\n                          value={opt}\r\n                          key={index}\r\n                          className=\"select-opt\"\r\n                        >\r\n                          {opt.label}\r\n                        </IonSelectOption>\r\n                      );\r\n                    })}\r\n                  </IonSelect>\r\n                </fieldset>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </IonRow>\r\n  );\r\n}\r\n","import { IonButton, IonIcon, IonLabel, IonTabButton } from \"@ionic/react\";\r\nimport React from \"react\";\r\nimport \"./Footer.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function Footer() {\r\n  let history = useHistory();\r\n  return (\r\n    <div className=\"footer-container\">\r\n      {/* <div className=\"footer-button\">\r\n        <IonIcon src=\"assets/icon/home-new.svg\" className=\"footer-button\" />\r\n      </div>\r\n      <div className=\"footer-button\">\r\n        <IonIcon src=\"assets/icon/home-new.svg\" className=\"footer-button\" />\r\n      </div>\r\n      <div className=\"footer-button\">\r\n        <IonIcon src=\"assets/icon/home-new.svg\" className=\"footer-button\" />\r\n      </div>\r\n      <div className=\"footer-button\">\r\n        <IonIcon src=\"assets/icon/home-new.svg\" className=\"footer-button\" />\r\n      </div>\r\n      <div className=\"footer-button\">\r\n        <IonIcon src=\"assets/icon/home-new.svg\" className=\"footer-button\" />\r\n      </div>\r\n      <IonButton className=\"footer-button\" fill=\"clear\">\r\n        <IonIcon src=\"assets/icon/home-new.svg\" className=\"footer-button\" />\r\n      </IonButton> */}\r\n      <IonTabButton className=\"footer-button\" href=\"/tabs/landing\">\r\n        <IonIcon src=\"assets/icon/home-new.svg\" className=\"footer-button\" />\r\n        <IonLabel>Home</IonLabel>\r\n      </IonTabButton>\r\n      <IonTabButton className=\"footer-button\" href=\"/tabs/addresses\">\r\n        <IonIcon src=\"assets/icon/address.svg\" className=\"footer-button\" />\r\n        <IonLabel>Addresses</IonLabel>\r\n      </IonTabButton>\r\n      <IonTabButton className=\"footer-button\"></IonTabButton>\r\n      <IonTabButton className=\"footer-button\" href=\"/tabs/status\">\r\n        <IonIcon src=\"assets/icon/status.svg\" className=\"footer-button\" />\r\n        <IonLabel>Status</IonLabel>\r\n      </IonTabButton>{\" \"}\r\n      <IonTabButton className=\"footer-button\" href=\"/tabs/profile\">\r\n        <IonIcon\r\n          src=\"assets/icon/profile.svg\"\r\n          className=\"footer-button button\"\r\n        />\r\n        <IonLabel>Profile</IonLabel>\r\n      </IonTabButton>\r\n    </div>\r\n  );\r\n}\r\n","import { IonCard, IonCardContent, IonLabel } from \"@ionic/react\";\r\nimport React from \"react\";\r\nimport Icon from \"./Icon\";\r\nimport \"./ContainerCard.scss\";\r\ninterface stateProps {\r\n  containerItem;\r\n  containerClick?: (item, index) => void;\r\n  index?;\r\n}\r\ninterface ownProps {}\r\ntype containerCardProps = stateProps & ownProps;\r\n\r\nconst ContainerCard: React.FC<containerCardProps> = ({\r\n  containerItem,\r\n  containerClick,\r\n  index,\r\n}) => {\r\n  var contanerIconProps = {\r\n    name: \"container\",\r\n    slot: \"\",\r\n    class: \"zoom12\",\r\n    zoom: 2.8,\r\n  };\r\n\r\n  var locationIcon = {\r\n    name: \"locationblue-icon\",\r\n    slot: \"\",\r\n    class: \"zoom12\",\r\n    zoom: 1.8,\r\n  };\r\n  return (\r\n    <IonCard\r\n      className={\r\n        containerItem.selected\r\n          ? \"outer-card boxShadow \"\r\n          : \"outer-card lightShadow\"\r\n      }\r\n      onClick={() => containerClick(containerItem, index)}\r\n    >\r\n      <IonCardContent>\r\n        <div className=\"container-card\">\r\n          <div className=\"twoItems borderBottom\">\r\n            <div className=\"eachItemLeft\">\r\n              <div className=\"container-icon\">\r\n                <Icon iconProps={contanerIconProps} />\r\n              </div>\r\n              <div className=\"decl-info\">\r\n                <span className=\"decl-number\">\r\n                  <div className=\"container-num\">\r\n                    {containerItem.container_number}\r\n                  </div>\r\n                </span>\r\n              </div>\r\n              <div className=\"decl-info\">\r\n                <span className=\"decl-number\">\r\n                  <div className=\"container-num\">{containerItem.weight}</div>\r\n                </span>\r\n              </div>\r\n              <div className=\"location-info\">\r\n                <div className=\"location-icon\">\r\n                  <span className=\"decl-number\">\r\n                    <Icon iconProps={locationIcon} />\r\n                  </span>\r\n                </div>\r\n                {/* </div>\r\n              <div className=\"decl-info\"> */}\r\n                <div className=\"decl-info\">\r\n                  <span className=\"location-label\">\r\n                    <div className=\"container-num\">\r\n                      {containerItem.pickupLocation}\r\n                    </div>\r\n                  </span>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"twoItems marginTop\">\r\n            <div className=\"eachItemLeft\">\r\n              <div className=\"decl-info\">\r\n                <span className=\"decl-number\">\r\n                  {\" \"}\r\n                  <IonLabel class=\"gray-text\">Container weight</IonLabel>\r\n                </span>\r\n                <span className=\"decl-comments\">\r\n                  {containerItem.consigneeCode}\r\n                  {/* {item.consigneeDetails} */}\r\n                </span>\r\n              </div>\r\n              <div className=\"decl-info\">\r\n                <span className=\"decl-number\">\r\n                  {\" \"}\r\n                  <IonLabel class=\"gray-text\">Storage Validity</IonLabel>\r\n                </span>\r\n                <span className=\"decl-comments\">\r\n                  {containerItem.storagePaidTill}\r\n                  {/* {item.consigneeDetails} */}\r\n                </span>\r\n              </div>\r\n              <div className=\"decl-info\">\r\n                <span className=\"decl-number\">\r\n                  {\" \"}\r\n                  <IonLabel class=\"gray-text\">Hold Authority</IonLabel>\r\n                </span>\r\n                <span className=\"decl-comments\">\r\n                  {containerItem.holdAuthority}\r\n                  {/* {item.consigneeDetails} */}\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </IonCardContent>\r\n    </IonCard>\r\n  );\r\n};\r\nexport default ContainerCard;\r\n","import { IonBadge, IonPopover } from \"@ionic/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Store from \"../redux/Store\";\r\nimport \"./CartNumber.scss\";\r\nimport * as reduxActions from \"../redux/actionTypes/AllActionTypes\";\r\n\r\ninterface stateProps {}\r\n\r\ninterface ownProps {\r\n  numberOfContainers;\r\n  updateCartNumber;\r\n}\r\n\r\ntype cartNumberProps = stateProps & ownProps;\r\nconst CartNumber: React.FC<cartNumberProps> = ({\r\n  numberOfContainers,\r\n  updateCartNumber,\r\n}) => {\r\n  const [number, setnumber] = useState(0);\r\n  const [popoverState, setShowPopover] = useState({\r\n    showPopover: false,\r\n    event: undefined,\r\n  });\r\n  useEffect(() => {\r\n    countContainerNumberSelected(0);\r\n  }, [numberOfContainers]);\r\n  function countContainerNumberSelected(count) {\r\n    setnumber(count);\r\n    numberOfContainers.map((item, index) => {\r\n      item.containerList.map((container) => {\r\n        if (container.selected) {\r\n          count++;\r\n          setnumber(count);\r\n          updateCartNumber(count);\r\n          //setShowPopover({ showPopover: true, event: \"\" });\r\n        } else {\r\n          setnumber(count);\r\n          updateCartNumber(count);\r\n        }\r\n      });\r\n    });\r\n    //setTimeout(() => {\r\n    //setShowPopover({ showPopover: true, event: \"\" });\r\n    // }, 1000);\r\n  }\r\n  return (\r\n    <div>\r\n      <IonPopover\r\n        cssClass=\"my-custom-class\"\r\n        event={popoverState.event}\r\n        isOpen={popoverState.showPopover}\r\n        onDidDismiss={() =>\r\n          setShowPopover({ showPopover: false, event: undefined })\r\n        }\r\n      >\r\n        <p>{number} containers added</p>\r\n      </IonPopover>\r\n      <IonBadge className=\"blueBg\"> {number}</IonBadge>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    numberOfContainers: state.Cart,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n    updateCartNumber: (item: any) => {\r\n      Store.dispatch({\r\n        type: reduxActions.UPDATE_VARIABLE,\r\n        payLoad: item,\r\n      });\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartNumber);\r\n","import { IonIcon } from \"@ionic/react\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport CartNumber from \"../components/CartNumber\";\r\nimport \"./CenterFooterButton.scss\";\r\n\r\ninterface CenterFooterButtonProps {\r\n  iconType;\r\n  clickEvent?: () => void;\r\n  numberOfSelectedContainers;\r\n}\r\n\r\nconst CenterFooterButton: React.FC<CenterFooterButtonProps> = ({\r\n  iconType,\r\n  clickEvent,\r\n  numberOfSelectedContainers,\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"menu-button-div\"\r\n      onClick={() => {\r\n        if (numberOfSelectedContainers.cartNumber > 0) clickEvent();\r\n      }}\r\n    >\r\n      <div className=\"menu-button\">\r\n        {iconType === \"menu\" ? (\r\n          <>\r\n            <hr />\r\n            <hr />\r\n            <hr />\r\n          </>\r\n        ) : (\r\n          iconType === \"cart\" && (\r\n            <>\r\n              <IonIcon\r\n                src=\"assets/icon/container-crane.svg\"\r\n                className=\"button\"\r\n              />\r\n              <CartNumber />\r\n            </>\r\n          )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    numberOfSelectedContainers: state.VariableValues,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps)(CenterFooterButton);\r\n","import {\r\n  IonCard,\r\n  IonCardContent,\r\n  IonContent,\r\n  IonItem,\r\n  IonLabel,\r\n  IonPage,\r\n} from \"@ionic/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport ContainerCard from \"../../components/ContainerCard\";\r\nimport Footer from \"../../components/Footer/Footer\";\r\nimport Header from \"../../components/Header\";\r\nimport Icon from \"../../components/Icon\";\r\n//import TopMenu from \"../../components/TopMenu\";\r\nimport TopMenu from \"../../components/topMenu/TopMenu\";\r\nimport Store from \"../../redux/Store\";\r\nimport CenterFooterButton from \"../CenterFooterButton\";\r\nimport \"./Container.scss\";\r\nimport * as reduxActions from \"../../redux/actionTypes/AllActionTypes\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport InformationText from \"../../components/Texts/InformationText\";\r\nimport { chevronDownOutline } from \"ionicons/icons\";\r\n\r\ninterface stateProps {\r\n  props;\r\n}\r\n\r\ninterface ownProps {\r\n  containerList;\r\n  updateContainersInCart: (item) => void;\r\n}\r\nvar count = 0;\r\ntype containerProps = stateProps & ownProps;\r\nconst Container: React.FC<containerProps> = ({\r\n  containerList,\r\n  props,\r\n  updateContainersInCart,\r\n}) => {\r\n  const [currentDecl, setcurrentDecl] = useState<any>();\r\n\r\n  const [showChecked, setShowChecked] = useState(false);\r\n  let history = useHistory();\r\n\r\n  useEffect(() => {\r\n    containerList.map((item, index) => {\r\n      if (item.currentSelection) {\r\n        setcurrentDecl(item);\r\n      }\r\n    });\r\n  }, []);\r\n  useEffect(() => {}, [containerList]);\r\n  var topMenuItems = [\r\n    {\r\n      name: \"\",\r\n      src: \"filter\",\r\n      zoom: 1.3,\r\n      type: \"button\",\r\n      slot: \"start\",\r\n      clickedOnTopMenu: () => console.log(\"clicked1\"),\r\n    },\r\n\r\n    {\r\n      name: \"Storage Validity\",\r\n      src: \"filter-down-arrow\",\r\n      type: \"button\",\r\n      slot: \"start\",\r\n      size: \"0.7rem\",\r\n      clickedOnTopMenu: () => console.log(\"clicked4\"),\r\n    },\r\n    {\r\n      name: \"Pickup Location\",\r\n      src: \"filter-down-arrow\",\r\n      icon: chevronDownOutline,\r\n      slot: \"end\",\r\n      type: \"dropDown\",\r\n      list: [\r\n        { label: \"T1\", value: \"T1\" },\r\n        { label: \"T2\", value: \"T2\" },\r\n        { label: \"T3\", value: \"T3\" },\r\n        { label: \"Jebal Ali Area\", value: \"JEA\" },\r\n      ],\r\n      clickedOnTopMenu: () => console.log(\"clicked5\"),\r\n    },\r\n  ];\r\n\r\n  function updateContainerInCart(containerItem, index, checked?) {\r\n    var selectedNumber;\r\n    if (checked) {\r\n      if (checked === \"checked\") {\r\n        currentDecl.containerList.forEach((item: any, index: number) => {\r\n          currentDecl.containerList[index].selected = true;\r\n        });\r\n      } else {\r\n        currentDecl.containerList.forEach((item: any, index: number) => {\r\n          currentDecl.containerList[index].selected = false;\r\n        });\r\n      }\r\n    } else {\r\n      containerItem.selected = !containerItem.selected;\r\n      if (containerItem.selected) {\r\n        setShowChecked(true);\r\n        containerList[index].selectedNumber = containerList[index]\r\n          .selectedNumber\r\n          ? containerList[index].selectedNumber\r\n          : 0;\r\n        containerList[index].selectedNumber =\r\n          containerList[index].selectedNumber + 1;\r\n      } else {\r\n        //setShowChecked(false)\r\n        containerList[index].selectedNumber =\r\n          containerList[index].selectedNumber - 1;\r\n      }\r\n      containerList.map((item, index) => {\r\n        count = item.selectedNumber;\r\n        if (count === 0) setShowChecked(false);\r\n      });\r\n    }\r\n    updateContainersInCart(containerItem);\r\n  }\r\n\r\n  function goToContainerCart() {\r\n    history.push(\"/containerCart\");\r\n  }\r\n  const checkedProps: any = {\r\n    showChecked: showChecked,\r\n    addContainerToCart: updateContainerInCart,\r\n  };\r\n  return (\r\n    <IonPage className=\"container\">\r\n      <Header\r\n        label={currentDecl?.containerList[0]?.boeNumber}\r\n        action=\"search\"\r\n        locationProps={props}\r\n        checkedProps={checkedProps}\r\n        showAgent={true}\r\n        agentHeader={true}\r\n        // searchClick={this.onSearchClick}\r\n      />\r\n\r\n      <IonContent className=\"container-Content\">\r\n        <TopMenu topMenuProps={topMenuItems} />\r\n        {currentDecl?.containerList?.length > 0 && (\r\n          <InformationText\r\n            message={`${currentDecl?.containerList?.length} containers`}\r\n          />\r\n        )}\r\n        <div className=\"container-list\">\r\n          {currentDecl?.containerList?.map((item, index) => {\r\n            return (\r\n              <ContainerCard\r\n                containerItem={item}\r\n                key={index}\r\n                containerClick={updateContainerInCart}\r\n                index={currentDecl?.containerList.index}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        <CenterFooterButton iconType=\"cart\" clickEvent={goToContainerCart} />\r\n      </IonContent>\r\n      <Footer />\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    containerList: state.Cart,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n    updateContainersInCart: (item: any) => {\r\n      Store.dispatch({\r\n        type: reduxActions.UPDATE_CONTAINER_IN_CART,\r\n        payLoad: item,\r\n      });\r\n    },\r\n    addDeclarationToCart: (item: any) => {\r\n      Store.dispatch({\r\n        type: reduxActions.ADD_TO_CART,\r\n        payLoad: item,\r\n      });\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Container);\r\n"],"sourceRoot":""}