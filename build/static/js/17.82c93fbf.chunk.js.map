{"version":3,"sources":["components/Header.tsx","util/ClearReduxStore.js","util/Utilities.ts","components/txtinput/TxtInput.tsx","components/dropdownInput/DrpdownInput.tsx","util/Config.js","pages/MapView.js","pages/address/addAddress/AddNewAddress.tsx"],"names":["Header","HeaderParam","useState","search","check","close","home","info","actionType","setActionType","userDetails","Store","getState","CheckUserStatus","user","checked","setChecked","checkedLabel","setCheckedLabel","backIconProps","name","slot","zoom","useEffect","updateActionType","action","history","useHistory","back","e","customBack","backClick","goBack","myValue","homeButtonClicked","dispatch","type","LoginUserTypes","locationProps","push","selectUserType","a","data","detail","value","url","EndPointURL","agentCode","agentType","endPointHeader","userName","userType","loginWithAgent","response","result","dataItems","success","reduxActions","accessToken","activeCompanyCode","selectedAgent","style","agentHeader","height","className","paddingBottom","checkedProps","hidden","showChecked","fill","onClick","Icon","iconProps","onIonChange","addContainerToCart","checkAndUncheckAll","label","searchClick","icon","minWidth","infoClick","informationCircle","checkClick","closeSharp","agents","interface","disabled","showAgent","length","backgroundColor","interfaceOptions","cssClass","map","item","index","key","agentName","src","isEmpty","trim","isValid","dataType","delimiter","replaceAll","RegExp","REGEX_MAP","test","getPatternValue","pattern","cleaned","finalstr","ctr","i","validateEmail","mail","validatePhone","number","validateMobile","addTimeToDateTime","date","timeToAdd","d2","Date","setMinutes","getMinutes","convertToMillSeconds","interval","h","m","timeParts","split","TxtInput","onChange","required","errors","datatype","description","placeholder","onBlur","readonly","contactForm","max","validation","setvalidation","width","padding","spellCheck","autocapitalize","onKeyDown","preventDefault","validate","val","target","clearInput","autocomplete","onIonBlur","maxlength","color","DrpdownInput","listValues","selectedName","valueD","setValueD","cancel-text","class","consigneeName","dropAddress","email","mapConfig","zoomLevel","apiKey","streetViewControl","libraries","gestureHandling","mapTypeControl","fullscreenControl","clickableIcons","JNCenter","lat","lng","JAFZA_NORTH_BOUNDS","north","east","south","west","JSCenter","JAFZA_SOUTH_BOUNDS","JAFZA_SOUTH_POLYGON","JAFZA_NORTH_POLYGON","DUBAI_LOGISTICS_POLYGON","DLCenter","DUBAI_LOGISTICS_BOUNDS","containerStyle","divStyle","fontFamily","fontSize","maxWidth","React","memo","props","isLoaded","useJsApiLoader","id","googleMapsApiKey","setMap","center","setCenter","showingInfoWindow","state","setState","address","setAddress","searchBox","setSearchBox","place","setPlace","bounds","mapViewProps","zone","paths","latLng","str","selectedAdd","includes","arr","fst","splice","join","rest","onMarkerClick","console","log","options","restriction","latLngBounds","strictBounds","centerChanged","handleError","jafza","window","google","maps","Polygon","geometry","poly","containsLocation","getAddressFromMap","mapContainerStyle","isContainerEdit","args","Geocode","fromLatLng","then","results","formatted_address","add","loc","location","error","ref","onBoundsChanged","position","onCloseClick","textAlign","onLoad","onPlaceChanged","getPlace","restrictions","country","fillColor","strokeColor","strokeOpacity","strokeWeight","clickable","draggable","editable","geodesic","zIndex","AddNewAddress","allZones","setAllZones","errorMessage","setErrorMessage","consigneeContactName","consigneeContactNumber","selectedDropZoneLabel","dropZone","addressNickname","addressLine1","phoneNumber","createMode","errorName","errorMobile","errorDropAddr","errorDropZone","errorNickName","errorAddrLine","errorPhone","mapError","setError","addOrUpdate","newAddress","httpPostCallWithoutHeaderAndWithBody","saveAddress","updateContainerContact","updateAddress","contact","httpGetCallWithoutHeader","booking","containers","c","container_number","ctnNumber","cont","request","dpwTransactionId","requestDetailsNumber","status","JSON","stringify","parse","closeOutline","nameTest","Utils"],"mappings":"0RAmUeA,IA/RuB,SAACC,GACrC,MAAoCC,mBAAS,CAC3CC,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,MAAM,EACNC,MAAM,IALR,mBAAOC,EAAP,KAAmBC,EAAnB,KAQIC,EAAcC,IAAMC,WAAWC,gBAAgBC,KAEnD,EAA8BZ,oBAAS,GAAvC,mBAAOa,EAAP,KAAgBC,EAAhB,KACA,EAAwCd,mBAAS,cAAjD,mBAAOe,EAAP,KAAqBC,EAArB,KACMC,EAAgB,CACpBC,KAAM,aACNC,KAAM,YACNC,KAAM,IAwBRC,qBAAU,WACRC,EAAiBvB,EAAYwB,OAASxB,EAAYwB,OAAS,UAC1D,IAEH,IAAIC,EAAUC,cACRC,EAAO,SAACC,GACR5B,EAAY6B,WACd7B,EAAY8B,UAAUF,GAEtBH,EAAQM,UAINR,EAAmB,SAACS,GACpBA,IACc,WAAZA,EACFxB,EAAc,CACZN,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,MAAM,EACNC,MAAM,IAEa,UAAZ0B,EACTxB,EAAc,CACZN,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,MAAM,EACNC,MAAM,IAEa,UAAZ0B,EACTxB,EAAc,CACZN,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,MAAM,EACNC,MAAM,IAEa,SAAZ0B,EACTxB,EAAc,CACZN,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,MAAM,EACNC,MAAM,IAEa,SAAZ0B,GACTxB,EAAc,CACZN,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,MAAM,EACNC,MAAM,MAMd,SAAS2B,ICnITvB,IAAMwB,SAAS,CAAEC,KAAMC,MACvB1B,IAAMwB,SAAS,CAAEC,KAAMC,MACvB1B,IAAMwB,SAAS,CAAEC,KAAMC,MDmIrBpC,EAAYqC,cAAcZ,QAAQa,KAAK,iBAGzC,IAAMC,EAAc,uCAAG,WAAOX,GAAP,6BAAAY,EAAA,6DACjBC,EAAOb,EAAEc,OAAOC,MAChBC,EACFC,aACA,cACAJ,EAAKK,UACL,cACAL,EAAKM,UAEHC,EAAiB,CACnBC,SAAUxC,EAAYwC,SACtBC,SAAU,gBAXS,SAcAC,YAAeP,EAAKI,GAdpB,cAcjBI,EAdiB,OAejBC,EAASD,EAASX,KAAKA,KAAKa,UAAU,GAfrB,SAgBXF,EAASG,QAhBE,oDAiBKC,IAA4BH,EAAOI,aAjBxC,eAiBfA,EAjBe,SAkBF/C,IAAMwB,SAASuB,GAlBb,UAoBGD,IACpBH,EAAOxC,KAAK6C,mBArBK,eAoBfX,EApBe,SAuBJrC,IAAMwB,SAASa,GAvBX,UAyBOS,IAA8Bf,GAzBrC,SAyBfkB,EAzBe,SA2BAjD,IAAMwB,SAASyB,GAEvBjD,IAAMC,WAAWC,gBA7BT,4CAAH,sDAqCpB,OACE,kBAAC,IAAD,CACEgD,MAAO5D,EAAY6D,YAAc,CAAEC,OAAQ,SAAY,CAAEA,OAAQ,QAEjE,kBAAC,IAAD,CAAYC,UAAU,UACpB,yBACEA,UAAU,gBACVH,MAAQ5D,EAAY6D,YAAqC,GAAvB,CAAEG,cAAe,IAElDhE,EAAYiE,aACX,yBACEF,UAAU,cACVG,QAASlE,EAAYiE,aAAaE,aAElC,6BACE,kBAAC,IAAD,CACEC,KAAK,QACLC,QAAS,SAACzC,GACRD,EAAKC,KAGP,kBAAC0C,EAAA,EAAD,CAAMC,UAAWrD,MAGrB,yBAAK6C,UAAU,qBACb,kBAAC,IAAD,CACEA,UAAU,WACVjD,QAASA,EACT0D,YAAa,SAAC5C,GAAD,OA5I7B,SAA4Bd,GAC1BC,EAAWD,GACPA,GACFG,EAAgB,gBAChBjB,EAAYiE,aAAaQ,mBAAmB,GAAI,GAAI,aAEpDzE,EAAYiE,aAAaQ,mBAAmB,GAAI,GAAI,aACpDxD,EAAgB,eAqIgByD,CAAmB9C,EAAEc,OAAO5B,aAGpD,yBAAKiD,UAAU,oBACb,kBAAC,IAAD,CAAUA,UAAU,iBAAiB/C,GAAyB,MAIlE,qCAEF,yBAAK+C,UAAU,aACS,QAArB/D,EAAY2E,OAAmBpE,EAAWH,MACzC,kBAAC,IAAD,CACEgE,KAAK,QACLC,QAAS,SAACzC,GACRD,EAAKC,KAGP,kBAAC0C,EAAA,EAAD,CAAMC,UAAWrD,KAGnB,sCAGJ,yBAAK6C,UAAU,gBACZ,IACD,kBAAC,IAAD,KAAU/D,EAAY2E,QAExB,yBAAKZ,UAAU,gBACb,kBAAC,IAAD,CACEG,OAAQ3D,EAAWL,OACnBkE,KAAK,QACLC,QAASrE,EAAY4E,aAErB,kBAAC,IAAD,CACExD,KAAK,YACLyD,KAAM3E,IACN0D,MAAO,CAAEkB,SAAU,WAGvB,kBAAC,IAAD,CACEZ,OAAQ3D,EAAWD,KACnB8D,KAAK,QACLC,QAASrE,EAAY+E,WAErB,kBAAC,IAAD,CACE3D,KAAK,YACLyD,KAAMG,IACNpB,MAAO,CAAEkB,SAAU,WAGvB,kBAAC,IAAD,CACEZ,OAAQ3D,EAAWJ,MACnBiE,KAAK,QACLC,QAASrE,EAAYiF,YAGrB,kBAACX,EAAA,EAAD,CAAMC,UA3MK,CACrBpD,KAAM,QACNC,KAAM,YACNC,KAAM,OA0ME,kBAAC,IAAD,CACE6C,OAAQ3D,EAAWF,KACnB+D,KAAK,QACLC,QAAS,SAACzC,GAAD,OAAOK,MAEhB,kBAACqC,EAAA,EAAD,CAAMC,UAvNI,CACpBpD,KAAM,WACNC,KAAM,YACNC,KAAM,OAsNE,kBAAC,IAAD,CACE6C,OAAQ3D,EAAWH,MACnBgE,KAAK,QACLC,QAAS,SAACzC,GACRD,EAAKC,KAGP,kBAAC,IAAD,CAASR,KAAK,YAAYyD,KAAMK,OAElC,kBAAC,IAAD,CAAWhB,OAA+B,KAAvBlE,EAAYwB,OAAe4C,KAAK,SACjD,kBAAC,IAAD,SAIL3D,EAAY0E,QAAUnF,EAAY6D,aACjC,kBAAC,IAAD,CAAYE,UAAU,qBACpB,kBAAC,IAAD,CACEpB,MAAOlC,EAAYkD,cACnByB,UAAU,UACVZ,YAAa,SAAC5C,GAAD,OAAOW,EAAeX,IACnCyD,UACGrF,EAAYsF,WAA0C,GAA7B7E,EAAY0E,OAAOI,OAE/C3B,MACG5D,EAAYsF,UAA6C,GAAjC,CAAEE,gBAAiB,WAE9CC,iBA5Ha,CACvBC,SAAU,oBA6HCjF,EAAY0E,OAAOQ,KAAI,SAACC,EAAMC,GAC7B,OACE,kBAAC,IAAD,CACElD,MAAOiD,EACPE,IAAKD,EACL9B,UAAU,oBAET6B,EAAK9C,UAAY,IAAM8C,EAAKG,eAKrC,kBAAC,IAAD,CACEC,IAAI,6BACJjC,UAAU,kBACVG,QAASlE,EAAYsF,WAA0C,GAA7B7E,EAAY0E,OAAOI,c,iCE1TnE,4RAKaU,EAAU,SAACxD,GAGtB,OAFU,OAAPA,IACHA,EAAK,IACkB,KAAhBA,EAAKyD,QAGDC,EAAU,SAACC,EAAe3D,EAAW4D,GAIhD,OAHIA,IACF5D,EAAOA,EAAK6D,WAAWD,EAAW,KAE7B,IAAIE,OAAOC,IAAUJ,IAAWK,KAAKhE,IAGjCiE,EAAkB,SAACjE,EAAWkE,EAAcN,GACvD,IAAK5D,IAASkE,IAAYN,EACxB,OAAO5D,EAMT,IAJA,IAAImE,EAAUnE,EAAK6D,WAAW,IAAK,IAAIA,WAAWD,EAAW,IACzDQ,EAAW,GACXC,EAAM,EAEDC,EAAI,EAAGA,EAAIJ,EAAQpB,QAAUuB,EAAMF,EAAQrB,OAAQwB,IACtDJ,EAAQI,IAAMV,GAChBQ,GAAsBD,EAAQE,GAC9BA,GAAY,GAEZD,GAAsBR,EAG1B,OAAOQ,GAgBIG,EAAc,SAACC,GAC1B,OAAO,IAAIV,OAAO,4CAA4CE,KAAKQ,IAGxDC,EAAc,SAACC,GAG1B,OAFc,IAAIZ,OAAO,YACHE,KAAKU,IAIhBC,EAAe,SAACD,GAG3B,OAFc,IAAIZ,OAAO,YACHE,KAAKU,IAItB,SAASE,EAAkBC,EAAWC,GAC3C,IAAIC,EAAK,IAAIC,KAAKH,GAClB,OAAO,IAAIG,KAAKD,EAAGE,WAAWJ,EAAKK,aAAeJ,IAe7C,IAAMK,EAAuB,SAACC,GACnC,IAlFoBC,EAAGC,EAkFnBC,EAAYH,EAASI,MAAM,KAG/B,OArFoBH,EAmFME,EAAU,GAnFbD,EAmFiBC,EAAU,GAnFY,KAAxB,GAAJF,EAAS,GAAS,GAAJC,EAmFM,K,2IC4CzCG,IAvG2B,SAAC,GAiBpC,IAhBLvD,EAgBI,EAhBJA,MACAxD,EAeI,EAfJA,KACAgB,EAcI,EAdJA,KACAQ,EAaI,EAbJA,MACAwF,EAYI,EAZJA,SACAC,EAWI,EAXJA,SACAC,EAUI,EAVJA,OACA1B,EASI,EATJA,QACA2B,EAQI,EARJA,SACAC,EAOI,EAPJA,YACAC,EAMI,EANJA,YACA3D,EAKI,EALJA,KACA4D,EAII,EAJJA,OACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,YACAC,EACI,EADJA,IAEA,EAAoC3I,oBAAS,GAA7C,mBAAO4I,EAAP,KAAmBC,EAAnB,KAuBA,OACE,yBACE/E,UAAU,qBACVH,MAAO+E,EAAc,CAAEI,MAAO,QAASC,QAAS,KAAQ,IAExD,kCACE,gCAASrE,GACC,QAATxC,EACC,kBAAC,IAAD,CAAU4B,UAAU,yBAApB,OAEA,qCAEF,kBAAC,IAAD,CACE5C,KAAMA,EACNgB,KAAMA,EACNQ,MAAOA,EACPsG,YAAY,EACZC,eAAe,MAEfC,UAzCS,SAACvH,GAChB,OAAIA,EAAEkE,IAAIP,OAAS,IACnBuD,GAAe3C,YAAQmC,EAAU1G,EAAEkE,MAC9BK,YAAQmC,EAAU1G,EAAEkE,UAAzB,GACElE,EAAEwH,kBACK,KAqCH5E,YAjCY,SAAC5C,GACnB,IACIyH,EADAC,EAAM1H,EAAE2H,OAAO5G,MAEff,EAAE2H,OAAO5C,UACX2C,EAAM5C,YAAgB4C,EAAK1H,EAAE2H,OAAO5C,QAAS,MAEzB,UAAlB/E,EAAE2H,OAAOpH,OACXkH,EAAWrC,YAAcsC,GACzBR,GAAeO,IAEZX,GAAUP,EAASvG,EAAG0H,EAAKD,IAwB1BG,YAAY,EACZpB,SAAUA,EACVqB,aAAa,MACb9C,QAASA,EACT6B,YAAaA,EACbzE,UAAU,YACV2F,UAAW,SAAC9H,GACN6G,GAAQA,EAAO7G,IAIrB+H,UAAWf,EACXF,SAAUA,IAAsB,GAE/B7D,GACC,kBAAC,IAAD,CAAMN,UAAWM,MAMvB,yBAAKd,UAAU,IACZsE,GACC,kBAAC,IAAD,CAASuB,MAAM,SAAS7F,UAAU,sBAChC,kBAAC,IAAD,CAAUA,UAAU,wCACjBsE,KAKRQ,GAAcN,GACb,kBAAC,IAAD,CAASqB,MAAM,SAAS7F,UAAU,sBAChC,kBAAC,IAAD,CAAUA,UAAU,wCACjBwE,O,2GCJEsB,IAvFmC,SAAC,GAY5C,IAXLlF,EAWI,EAXJA,MACAxD,EAUI,EAVJA,KACAwB,EASI,EATJA,MACAwF,EAQI,EARJA,SACAE,EAOI,EAPJA,OACAE,EAMI,EANJA,YACAC,EAKI,EALJA,YACAsB,EAII,EAJJA,WAEAC,GAEI,EAHJ1E,SAGI,EAFJ0E,cACA5H,EACI,EADJA,KAGA,EAA4BlC,mBAAS,IAArC,mBAAO+J,EAAP,KAAeC,EAAf,KACIxI,EAAUC,cACdJ,qBAAU,WACR2I,EAAU,CAAEtF,MAAOoF,EAAcpH,MAAOA,MACvC,IAgBH,OACE,yBAAKoB,UAAU,sBACb,kCACE,gCAASY,GACT,kBAAC,IAAD,CAEExD,KAAMA,EACNqH,YAAaA,EACb7F,MAAOA,GAASqH,EAChBxF,YAvBY,SAAC5C,GACnB,IAAI0H,EAAM1H,EAAE2H,OAAO5G,MACnBsH,EAAUX,GACE,eAARA,EACF7H,EAAQa,KAAK,eAEb6F,EAASvG,EAAG0H,IAkBRY,eAAA,EACA9E,UAAU,UACVrB,UAAU,gBACV0B,iBAjBQ,CACdC,SAAU,wBAkBM,YAATvD,GACC,kBAAC,IAAD,CAAiBQ,MAAM,aAAawH,MAAM,iBAA1C,kBAGE,yBAAKnE,IAAI,0BAff,OAkBG8D,QAlBH,IAkBGA,OAlBH,EAkBGA,EAAYnE,KAAI,SAACC,EAAMC,GAAP,MACN,YAAT1D,EACE,kBAAC,IAAD,CAAiB2D,IAAKD,EAAOlD,MAAOiD,GACjCA,EAAKwE,cADR,IACwBxE,EAAKyE,YAC1BzE,EAAK0E,OAGR,kBAAC,IAAD,CAAiBxE,IAAKD,EAAOlD,MAAOiD,EAAKjD,OACtCiD,EAAKjB,YAOhB,yBAAKZ,UAAU,IACZsE,GACC,kBAAC,IAAD,CAASuB,MAAM,SAAS7F,UAAU,sBAChC,kBAAC,IAAD,CAAUA,UAAU,qBAAqBsE,KAK/C,kBAAC,IAAD,CAASuB,MAAM,SAAS7F,UAAU,sBAChC,kBAAC,IAAD,CAAUA,UAAU,qBAAqBwE,O,iOC1GpCgC,EAAY,CACvBC,UAAW,GACXC,OAAQ,0CACRC,mBAAmB,EACnBC,UAAW,CAAC,SAAU,YACtBC,gBAAiB,OACjBC,gBAAgB,EAChBC,mBAAmB,EACnBC,gBAAgB,EAChBC,SAAU,CACRC,IAAK,mBACLC,IAAK,mBAGPC,mBAAoB,CAClBC,MAAO,kBACPC,KAAM,kBACNC,MAAO,mBACPC,KAAM,kBAERC,SAAU,CACRP,IAAK,mBACLC,IAAK,mBAEPO,mBAAoB,CAClBL,MAAO,mBACPC,KAAM,mBACNC,MAAO,mBACPC,KAAM,mBAERG,oBAAqB,CACnB,CAAET,IAAK,mBAAoBC,IAAK,kBAChC,CAAED,IAAK,kBAAmBC,IAAK,mBAC/B,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,mBAAoBC,IAAK,oBAChC,CAAED,IAAK,iBAAkBC,IAAK,mBAC9B,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,kBAAmBC,IAAK,mBAC/B,CAAED,IAAK,mBAAoBC,IAAK,qBAElCS,oBAAqB,CACnB,CAAEV,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,kBAAmBC,IAAK,mBAC/B,CAAED,IAAK,mBAAoBC,IAAK,oBAChC,CAAED,IAAK,kBAAmBC,IAAK,mBAC/B,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,iBAAkBC,IAAK,oBAC9B,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,kBAAmBC,IAAK,mBAC/B,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,mBAAoBC,IAAK,oBAChC,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,kBAAmBC,IAAK,oBAC/B,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,kBAAmBC,IAAK,mBAC/B,CAAED,IAAK,kBAAmBC,IAAK,mBAC/B,CAAED,IAAK,kBAAmBC,IAAK,mBAC/B,CAAED,IAAK,mBAAoBC,IAAK,oBAChC,CAAED,IAAK,kBAAmBC,IAAK,mBAC/B,CAAED,IAAK,mBAAoBC,IAAK,kBAChC,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,kBAAmBC,IAAK,oBAC/B,CAAED,IAAK,kBAAmBC,IAAK,mBAC/B,CAAED,IAAK,kBAAmBC,IAAK,mBAC/B,CAAED,IAAK,kBAAmBC,IAAK,mBAC/B,CAAED,IAAK,kBAAmBC,IAAK,oBAC/B,CAAED,IAAK,kBAAmBC,IAAK,mBAC/B,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,mBAAoBC,IAAK,oBAChC,CAAED,IAAK,kBAAmBC,IAAK,mBAC/B,CAAED,IAAK,kBAAmBC,IAAK,mBAC/B,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,kBAAmBC,IAAK,oBAC/B,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,iBAAkBC,IAAK,mBAC9B,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,kBAAmBC,IAAK,mBAC/B,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,kBAAmBC,IAAK,mBAC/B,CAAED,IAAK,kBAAmBC,IAAK,oBAC/B,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,kBAAmBC,IAAK,mBAC/B,CAAED,IAAK,kBAAmBC,IAAK,oBAC/B,CAAED,IAAK,kBAAmBC,IAAK,mBAC/B,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,mBAAoBC,IAAK,oBAChC,CAAED,IAAK,kBAAmBC,IAAK,mBAC/B,CAAED,IAAK,kBAAmBC,IAAK,mBAC/B,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,kBAAmBC,IAAK,mBAC/B,CAAED,IAAK,kBAAmBC,IAAK,mBAC/B,CAAED,IAAK,kBAAmBC,IAAK,oBAC/B,CAAED,IAAK,mBAAoBC,IAAK,oBAElCU,wBAAyB,CACvB,CAAEX,IAAK,kBAAmBC,IAAK,oBAC/B,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,kBAAmBC,IAAK,mBAC/B,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,mBAAoBC,IAAK,oBAChC,CAAED,IAAK,mBAAoBC,IAAK,mBAChC,CAAED,IAAK,mBAAoBC,IAAK,kBAChC,CAAED,IAAK,mBAAoBC,IAAK,oBAChC,CAAED,IAAK,mBAAoBC,IAAK,oBAElCW,SAAU,CACRZ,IAAK,kBACLC,IAAK,mBAEPY,uBAAwB,CACtBV,MAAO,kBACPC,KAAM,kBACNC,MAAO,mBACPC,KAAM,mB,kBC/GJQ,G,OAAiB,CACrBhD,MAAO,OACPjF,OAAQ,SAGJkI,EAAW,CACfpC,MAAO,UACPqC,WAAY,QACZC,SAAU,GACVC,SAAU,SA+MGC,UAAMC,MA5MrB,SAAiBC,GACf,IAAQC,EAAaC,YAAe,CAClCC,GAAI,oBACJC,iBAAkBnC,EAAUE,OAC5BE,UAAWJ,EAAUI,YAHf4B,SAKR,EAAsBtM,mBAAS,MAA/B,mBAAO0F,EAAP,KAAYgH,EAAZ,KACA,EAA4B1M,mBAASsK,EAAUS,UAA/C,mBAAO4B,EAAP,KAAeC,EAAf,KACA,EAA0B5M,mBAAS,CAAE6M,mBAAmB,IAAxD,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8B/M,mBAASqM,EAAMW,SAA7C,mBAAOA,EAAP,KAAgBC,EAAhB,KACA,EAAkCjN,qBAAlC,mBAAOkN,EAAP,KAAkBC,EAAlB,KACA,EAA0BnN,qBAA1B,mBAAOoN,EAAP,KAAcC,EAAd,KACMC,EACwB,WAA5BjB,EAAMkB,aAAaC,KACflD,EAAUY,mBACkB,WAA5BmB,EAAMkB,aAAaC,KACnBlD,EAAUkB,mBACVlB,EAAUuB,uBAEV4B,EACwB,WAA5BpB,EAAMkB,aAAaC,KACflD,EAAUoB,oBACkB,WAA5BW,EAAMkB,aAAaC,KACnBlD,EAAUmB,oBACVnB,EAAUqB,wBAEhBtK,qBAAU,WACJgL,EAAMkB,aAAaG,OAAQd,EAAUP,EAAMkB,aAAaG,QACxB,UAA3BrB,EAAMkB,aAAaC,KAAkBZ,EAAUtC,EAAUiB,UAC9B,UAA3Bc,EAAMkB,aAAaC,KAAkBZ,EAAUtC,EAAUS,WACzDsB,EAAMkB,aAAaC,KAAkBZ,EAAUtC,EAAUsB,WAElE,IAAI+B,EAAMtB,EAAMkB,aAAaK,YAC7B,UAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAKE,SAAS,KAAM,CACrB,IAAIC,EAAG,OAAGH,QAAH,IAAGA,OAAH,EAAGA,EAAK3F,MAAM,KACjB+F,EAAG,OAAGD,QAAH,IAAGA,OAAH,EAAGA,EAAKE,OAAO,EAAE,GAAGC,KAAK,IAC5BC,EAAI,OAAGJ,QAAH,IAAGA,OAAH,EAAGA,EAAKG,KAAK,KACrBhB,EAAWiB,GACXb,EAASU,QAETd,EAAWU,GACXN,EAAS,MAGV,CAAChB,EAAMkB,eAEV,IA4BMY,EAAgB,SAACxM,GACrByM,QAAQC,IAAI,SAAU1M,GACtBoL,EAAS,CACPF,mBAAoBC,EAAMD,qBAIxByB,EAAU,CACdC,YAAa,CACXC,aAAclB,EACdmB,cAAc,GAEhBhE,kBAAmBH,EAAUG,kBAC7BG,eAAgBN,EAAUM,eAC1BC,kBAAmBP,EAAUO,kBAC7BC,eAAgBR,EAAUQ,eAC1B1J,KAAMkJ,EAAUC,WA4BZmE,EAAgB,SAAChB,GACrBrB,EAAMkB,aAAaoB,YAAY,IAC/B,IAAMC,EAAQ,IAAIC,OAAOC,OAAOC,KAAKC,QAAQ,CAC3CvB,MAAOA,IAET,GAAIoB,OAAOC,OAAOC,KAAKE,SAASC,KAAKC,iBAAiBzB,EAAQkB,GAC5D,OAAO,EAEP3B,EAAW,IACXI,EAAS,IACThB,EAAMkB,aAAa6B,kBAAkB,IACrC/C,EAAMkB,aAAaoB,YAAY,yCAInC,OAAOrC,EACL,kBAAC,IAAD,CACEE,GAAG,WACH6C,kBAAmBvD,EACnBa,OAAQA,EACRvL,KAAM,GACNgD,QACGiI,EAAMkB,aAAa+B,gBAAkC,GA9FrC,WAAc,IAAD,uBAATC,EAAS,yBAATA,EAAS,gBAC9Bb,EAAca,EAAK,GAAG7B,UACxBd,EAAU,CACR5B,IAAKuE,EAAK,GAAG7B,OAAO1C,MACpBC,IAAKsE,EAAK,GAAG7B,OAAOzC,QAEtBmD,QAAQC,IAAI,iBAAkBkB,GAC9BlC,IACAe,QAAQC,IAAI,SAAU3I,GACtB8J,IAAQC,WACNF,EAAK,GAAG7B,OAAO1C,MACfuE,EAAK,GAAG7B,OAAOzC,MACfX,EAAUE,QACVkF,MACA,SAACvM,GACCiL,QAAQC,IAAI,MAAOlL,GACnB,IAAM6J,EAAU7J,EAASwM,QAAQ,GAAGC,kBACpCxB,QAAQC,IAAI,wBAA0BrB,GACtCC,EAAWD,GACXX,EAAMkB,aAAa6B,kBAAkB,CAACS,IAAK7C,EAAS8C,IAAK3M,EAASwM,QAAQ,GAAGV,SAASc,cAExF,SAACC,GACC5B,QAAQ4B,MAAMA,QA0ElBC,IAAK,SAACA,GACJvD,EAAOuD,IAET3B,QAASA,EACT4B,gBAAiB,SAACvO,GAAD,OAAOyM,QAAQC,IAAI,SAAU1M,KAE9C,kBAAC,IAAD,CAAQwO,SAAUxD,EAAQvI,QAAS+J,GAChCrB,EAAMD,mBACL,kBAAC,IAAD,CAAYsD,SAAUxD,EAAQyD,aAAcjC,GAC1C,yBAAKxK,MAAOoI,GACV,yBAAKpI,MAAO,CAAE0M,UAAW,WACvB,2BACE,2BAAIjD,KAGR,yBAAKzJ,MAAO,CAAE0M,UAAW,WACtBrD,IAE+B,WAA5BX,EAAMkB,aAAaC,KACnB,mBAC4B,WAA5BnB,EAAMkB,aAAaC,KACnB,mBACA,6BAMZnB,EAAMkB,aAAa+B,iBAAmB,6BACtC,kBAAC,IAAD,CACEgB,OA/EO,SAAC9G,GACd4E,QAAQC,IAAI,iBAAkB7E,GAC9B2D,EAAa3D,IA8EP+G,eA3Ee,WACrB,GAAkB,OAAdrD,GAEF,GADAkB,QAAQC,IAAI,eAAgBnB,EAAUsD,YAClC9B,EAAcxB,EAAUsD,WAAWvB,SAASc,UAAW,CACzDnD,EAAU,CACR5B,IAAKkC,EAAUsD,WAAWvB,SAASc,SAAS/E,MAC5CC,IAAKiC,EAAUsD,WAAWvB,SAASc,SAAS9E,QAE9C,IAAM+B,EAAUE,EAAUsD,WAAWZ,kBAC/BxC,EAAQF,EAAUsD,WAAWtP,KACnC+L,EAAWD,GACXK,EAASD,GACTgB,QAAQC,IAAIjB,EAAQ,KAAOJ,GAC3BX,EAAMkB,aAAa6B,kBAAkB,CAACS,IAAKzC,EAAQ,KAAOJ,EAAS8C,IAAK5C,EAAUsD,WAAWvB,SAASc,iBAGxG3B,QAAQC,IAAI,oCA4DRf,OAAQA,EACRmD,aAAc,CAAEC,QAAS,OAEzB,2BACExO,KAAK,OACL4B,UAAU,sBACVyE,YAAY,2BAIlB,kBAAC,IAAD,CACEkF,MAAOA,EACPa,QAAS,CACPqC,UAAW,cACXC,YAAa,eACbC,cAAe,EACfC,aAAc,EACdC,WAAW,EACXC,WAAW,EACXC,UAAU,EACVC,UAAU,EACVC,OAAQ,MAKd,wC,oEC9MW,SAASC,EAAc/E,GAAa,IAAD,gBAC1C7K,EAAUC,cACd,EAAgCzB,mBAAS,IAAzC,mBAAOqR,EAAP,KAAiBC,EAAjB,KACA,EAAwCtR,mBAAS,IAAjD,mBAAOuR,EAAP,KAAqBC,EAArB,KACA,EAA8BxR,mBAAc,CACxCyR,qBAAsB,GACtBC,uBAAwB,GACxBtH,YAAa,GACbuH,sBAAuB,cACvBC,SAAU,SACVC,gBAAiB,GACjBC,aAAc,GACdC,YAAa,GACbC,YAAY,EACZtE,OAAO,KAVX,mBAAOV,EAAP,KAAgBC,EAAhB,KAYA,EAA0BjN,mBAAS,CAC/BiS,UAAW,GACXC,YAAa,GACbC,cAAe,GACfC,cAAe,GACfC,cAAe,GACfC,cAAe,GACfC,WAAY,GACZC,SAAU,KARd,mBAAOxC,EAAP,KAAcyC,EAAd,KA0IA,SAASC,IACL,IAAItJ,GAAW,EACf,IAAK,IAAIvD,KAAOmH,EAEU,KAAjBA,EAAQnH,IACY,OAAjBmH,EAAQnH,IACS,SAAjBmH,EAAQnH,IACL,YAAPA,GAEW,gBAAPA,IACAuD,GAAW,EACA,wBAAPvD,IACAmK,EAAMiC,UAAY,yBAEX,eAAPpM,GAA+B,UAAPA,IACxBmK,EAAMmC,cAAgB,yBAEf,YAAPtM,IACAmK,EAAMoC,cAAgB,sBAEf,mBAAPvM,IACAmK,EAAMqC,cAAgB,sBAEf,0BAAPxM,IACAmK,EAAMkC,YAAc,0BAEb,eAAPrM,IACAmK,EAAMuC,WAAW,yBAErBE,EAAS,eAAIzC,IACbwB,EAAgB,+BAKxBpI,IACI4D,EAAQgF,WAyDpB,WACI,IAAIW,EAAa3F,EACF4F,YACXhQ,aAAwB+P,GAEnBjD,MAAK,SAACtM,GACX,GAAIA,EAAOE,QAAS,CAChB,IAAI0J,EAAUzJ,IAAwBoP,GAClC3F,GAASvM,IAAMwB,SAAS+K,GAC5BX,EAAM7K,QAAQM,aAjEd+Q,GAEAxG,EAAM7K,QAAQuO,SAASjD,MAAMwC,gBAAkBwD,IAwC3D,WACI,IAAIH,EAAa3F,EACF4F,YACXhQ,gBAA2B+P,GAEtBjD,MAAK,SAACtM,GACX,GAAIA,EAAOE,QAAS,CAChB,IAAI0J,EAAUzJ,IAA2BoP,GACrC3F,GAASvM,IAAMwB,SAAS+K,GAC5BX,EAAM7K,QAAQM,aAjD4DiR,IAtKtF1R,qBAAU,WAAO,IAAD,EACRwO,EAE6C,GADjDzB,QAAQC,IAAI,QAAQhC,EAAM7K,QAAQuO,SAASjD,OAC3C,UAAGT,EAAM7K,QAAQuO,SAASjD,aAA1B,aAAG,EAA8BwC,kBAC7BO,EAAG,UAAGxD,EAAM7K,QAAQuO,SAASjD,aAA1B,aAAG,EAA8BkG,QACpC/F,EAAW4C,IAEXxD,EAAM7K,QAAQuO,SAASjD,MACrBG,EAAWZ,EAAM7K,QAAQuO,SAASjD,OAClCG,EAAWD,GAGFiG,YACXrQ,WAEK8M,MAAK,SAACtM,GACPA,EAAOE,SAYPgO,EAAYlO,EAAOZ,KAAKA,KAAKa,gBAGtC,IA4IH,IAAMyP,EAAsB,uCAAG,0CAAAvQ,EAAA,6DACvBC,EAAO6J,EAAM7K,QAAQuO,SAASjD,OAC9BoG,QAAQC,WAAWzN,KAAI,SAAA0N,GACpBA,EAAEC,kBAAoBrG,EAAQsG,YAC7BF,EAAE3B,qBAAuBzE,EAAQyE,qBACjC2B,EAAEtB,aAAe9E,EAAQ8E,aACzBsB,EAAErB,YAAc/E,EAAQ+E,YACxBqB,EAAE1B,uBAAyB1E,EAAQ0E,2BAGvC6B,EAAO/Q,EAAK0Q,QAAQC,WACxB/E,QAAQC,IAAI,OAAQkF,GACZC,EAAU,CACZ9B,uBAAyB1E,EAAQ0E,uBACjCK,YAAc/E,EAAQ+E,YACtBD,aAAc9E,EAAQ8E,aACtBL,qBAAsBzE,EAAQyE,qBAC9B4B,iBAAkBrG,EAAQsG,UAC1BG,iBAAkBzG,EAAQyG,iBAC1BC,qBAAsB1G,EAAQ0G,sBAnBT,SAqBFd,YAAqChQ,yBAAqC4Q,GArBxE,cAqBnBrQ,EArBmB,iBAsBbA,EAASG,QAtBI,oCAuBnB8K,QAAQC,IAAI,cAAc7L,EAAK0Q,SACzBA,EAAU,CACZA,QAAO,UAAE1Q,EAAK0Q,eAAP,aAAE,EAAcA,QACvBC,WAAYI,EACZtQ,SAAQ,UAAET,EAAK0Q,eAAP,aAAE,EAAcjQ,SACxB0Q,OAAM,UAAEnR,EAAK0Q,eAAP,aAAE,EAAcS,QAExBvF,QAAQC,IAAI,UAAW6E,GACvB1R,EAAQa,KAAK,oBAAqB6Q,GA/BjB,4CAAH,qDA4E5B,IAAM3F,EAAe,CACjB6B,kBAdJ,SAAuBzN,GACnByM,QAAQC,IAAI,MAAMuF,KAAKC,UAAUlS,EAAEmO,MACnC7C,EAAW,2BACJD,GADG,IAEN5C,YAAYzI,EAAEkO,IACdnC,OAAQkG,KAAKC,UAAUlS,EAAEmO,QAE7B2C,EAAS,2BACFzC,GADC,IAEJmC,cAAc,OAMlB3E,KAAMR,EAAQ4E,SACdlE,OAAQV,EAAQU,OAASkG,KAAKE,MAAM9G,EAAQU,QAAUV,EAAQU,OAC9DE,YAAaZ,EAAQ5C,YACrBkF,gBAAe,UAAEjD,EAAM7K,QAAQuO,SAASjD,aAAzB,aAAE,EAA8BwC,gBAC/CX,YAAa,SAAChN,GACV8Q,EAAS,2BACFzC,GADC,IAEJwC,SAAS7Q,OAKrB,OACI,kBAAC,IAAD,KACI,kBAAC7B,EAAA,EAAD,CACI4E,MAAOsI,EAAQgF,WAAa,cAAgB,eAC5CzQ,OAAO,QACPyD,WAAY,WACR0N,OAGR,kBAAC,IAAD,CAAS5O,UAAU,WACf,kBAAC,EAAD,CAASyJ,aAAcA,KAE3B,kBAAC,IAAD,CAAUzJ,UAAU,WAAWG,OAA0B,IAAlB+L,EAAMwC,UACxCxC,EAAMwC,SACP,kBAAC,IAAD,CACI5N,KAAMmP,IACN5S,KAAK,YACL2C,UAAU,eACVM,QAAS,WACLqO,EAAS,2BACFzC,GADC,IAEJwC,SAAS,UAKzB,kBAAC,IAAD,CAAU1O,UAAU,WAAWG,OAAwB,IAAhBsN,GAClCA,GAEL,kBAAC,IAAD,CAASzN,UAAU,cACP,kBAAC,IAAD,CACI5C,KAAM,WACNwB,MAAOsK,EAAQ4E,SACflN,MAAM,OACN0D,OAAQ4H,EAAMoC,cACdlQ,KAAK,OACLiG,UAAU,EACVD,SAzQxB,SAAiBvG,EAAQe,GACrB0L,QAAQC,IAAI1M,EAAE2H,OAAOpI,KAAMS,EAAE2H,OAAO5G,OACpC0L,QAAQC,IAAI1M,EAAE2H,OAAOpI,KAAMwB,GAC3B+P,EAAS,2BACFzC,GADC,IAEJoC,cAAc,MAElBhE,QAAQC,IAAI,MAAMrB,GAClBC,EAAW,2BACJD,GADG,IAEN4E,SAAQ,OAAClP,QAAD,IAACA,OAAD,EAACA,EAAOA,MAChBiP,sBAAqB,OAACjP,QAAD,IAACA,OAAD,EAACA,EAAOgC,MAC7B0F,YAAY,GACZsD,OAAO,OA6PSrF,SAAS,OACTE,YAAY,OACZsB,WAAYwH,EACZvH,aAAckD,EAAQ2E,sBACtBvM,SAAQ,UAAEiH,EAAM7K,QAAQuO,SAASjD,aAAzB,aAAE,EAA8BwC,kBAE5C,kBAACrH,EAAA,EAAD,CACI/G,KAAM,cACNwB,MAAOsK,EAAQ5C,YACf1F,MAAM,eACN0D,OAAQ4H,EAAMmC,cACdjQ,KAAK,OACLiG,UAAU,EACVM,UAAU,EACVJ,SAAS,OACTE,YAAY,oBAEhB,kBAACN,EAAA,EAAD,CACI/G,KAAM,eACNwB,MAAOsK,EAAQ8E,aACfpN,MAAM,kBACN0D,OAAQ4H,EAAMsC,cACdpQ,KAAK,OACLiG,UAAU,EACVM,SAAQ,UAAE4D,EAAM7K,QAAQuO,SAASjD,aAAzB,aAAE,EAA8BwC,gBACxCpH,SA3NxB,SAAwBvG,EAAQe,GAC5BuK,EAAW,2BACJD,GADG,IAEN8E,aAAapP,KAEjB+P,EAAS,2BACFzC,GADC,IAEJsC,cAAc,OAqNEjK,SAAS,OACTE,YAAY,sBAEf,UAAC8D,EAAM7K,QAAQuO,SAASjD,aAAxB,aAAC,EAA8BwC,kBAAmB,kBAACrH,EAAA,EAAD,CAC/C/G,KAAM,WACNwB,MAAOsK,EAAQ6E,gBACfnN,MAAM,YACN0D,OAAQ4H,EAAMqC,cACdnQ,KAAK,OACLiG,UAAU,EACVD,SA3NxB,SAA+BvG,EAAQe,GACnCuK,EAAW,2BACJD,GADG,IAEN6E,gBAAgBnP,KAEpB+P,EAAS,2BACFzC,GADC,IAEJqC,cAAc,OAqNEhK,SAAS,OACTE,YAAY,cAEhB,kBAACN,EAAA,EAAD,CACI/G,KAAM,cACNwB,MAAOsK,EAAQyE,qBACf/M,MAAM,iBACN0D,OAAQ4H,EAAMiC,UACd/P,KAAK,OACLiG,UAAU,EACVD,SAlRxB,SAA2BvG,EAAQe,GAC/BuK,EAAW,2BACJD,GADG,IAENyE,qBAAqB/O,KAEzB+P,EAAS,2BACFzC,GADC,IAEJiC,UAAU,OA4QM5J,SAAS,OACTE,YAAY,mBAEhB,kBAACN,EAAA,EAAD,CACI/G,KAAM,cACNwB,OAAO,UAAAsK,EAAQ+E,mBAAR,eAAqB/J,MAAM,OAAO,IAAlC,OACDgF,QADC,IACDA,GADC,UACDA,EAAS+E,mBADR,aACD,EAAsB/J,MAAM,OAAO,GACnCgF,EAAQ+E,YACdrN,MAAM,eACN0D,OAAQ4H,EAAMuC,WACdrQ,KAAK,MACLiG,UAAU,EACVD,SArTxB,SAA2BvG,EAAQe,GAC/BuK,EAAW,2BACJD,GADG,IAEN+E,YAAarP,EAAQ,MAAgB,EAARA,EAAY,MAE7C,IAAIsR,EAAWC,IAAoBvR,GAC/BA,IAOI+P,EANCuB,EAMQ,2BACFhE,GADC,IAEJuC,WAAW,KAPN,2BACFvC,GADC,IAEJuC,WAAW,iCAQnBf,EAAgB,MAoSAnJ,SAAS,OACTE,YAAY,eACZI,IAAK,IAET,kBAACV,EAAA,EAAD,CACI/G,KAAM,eACNwB,OAAc,OAAPsK,QAAO,IAAPA,GAAA,UAAAA,EAAS0E,8BAAT,eAAiC1J,MAAM,OAAO,IAA9C,OACDgF,QADC,IACDA,GADC,UACDA,EAAS0E,8BADR,aACD,EAAiC1J,MAAM,OAAO,GAC9CgF,EAAQ0E,uBACdhN,MAAM,gBACN0D,OAAQ4H,EAAMkC,YACdhQ,KAAK,MACLiG,UAAU,EACVD,SAlSxB,SAA4BvG,EAAQe,GAChCuK,EAAW,2BACJD,GADG,IAEN0E,uBAAwBhP,EAAQ,MAAgB,EAARA,EAAY,MAExD,IAAIsR,EAAWC,IAAqBvR,GAChCA,IAOI+P,EANCuB,EAMQ,2BACFhE,GADC,IAEJkC,YAAY,KAPP,2BACFlC,GADC,IAEJkC,YAAY,iCAQpBV,EAAgB,MAiRAnJ,SAAS,OACTE,YAAY,gBACZI,IAAK","file":"static/js/17.82c93fbf.chunk.js","sourcesContent":["import {\r\n  IonButton,\r\n  IonCheckbox,\r\n  IonHeader,\r\n  IonIcon,\r\n  IonImg,\r\n  IonLabel,\r\n  IonSelect,\r\n  IonSelectOption,\r\n  IonText,\r\n  IonToolbar,\r\n} from \"@ionic/react\";\r\nimport { closeSharp, informationCircle, search } from \"ionicons/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ClearReduxStore from \"../util/ClearReduxStore\";\r\nimport \"./Header.scss\";\r\nimport Icon from \"./Icon\";\r\nimport Store from \"../redux/Store\";\r\nimport * as EndPointURL from \"../util/EndPointURL\";\r\nimport * as reduxActions from \"../redux/actions/AllActions\";\r\nimport { loginWithAgent } from \"../services/EndPointApi\";\r\n\r\ninterface HeaderParam {\r\n  label?: string;\r\n  action?: string;\r\n  showAgent?: boolean;\r\n  agentHeader?: boolean;\r\n  customBack?: boolean;\r\n  searchClick?(e: any): void;\r\n  infoClick?(e: any): void;\r\n  checkClick?(e: any): void;\r\n  backClick?(e: any): void;\r\n  locationProps?: any;\r\n  checkedProps?: any;\r\n}\r\nconst Header: React.FC<HeaderParam> = (HeaderParam) => {\r\n  const [actionType, setActionType] = useState({\r\n    search: true,\r\n    check: true,\r\n    close: true,\r\n    home: true,\r\n    info: false,\r\n  });\r\n\r\n  var userDetails = Store.getState().CheckUserStatus.user;\r\n\r\n  const [checked, setChecked] = useState(false);\r\n  const [checkedLabel, setCheckedLabel] = useState(\"Select All\");\r\n  const backIconProps = {\r\n    name: \"back-arrow\",\r\n    slot: \"icon-only\",\r\n    zoom: \"\",\r\n  };\r\n  const homeIconProps = {\r\n    name: \"home-new\",\r\n    slot: \"icon-only\",\r\n    zoom: \"\",\r\n  };\r\n  const checkIconProps = {\r\n    name: \"Check\",\r\n    slot: \"icon-only\",\r\n    zoom: \"\",\r\n  };\r\n\r\n  function checkAndUncheckAll(checked) {\r\n    setChecked(checked);\r\n    if (checked) {\r\n      setCheckedLabel(\"Unselect All\");\r\n      HeaderParam.checkedProps.addContainerToCart(\"\", \"\", \"checked\");\r\n    } else {\r\n      HeaderParam.checkedProps.addContainerToCart(\"\", \"\", \"unchecked\");\r\n      setCheckedLabel(\"Select All\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateActionType(HeaderParam.action ? HeaderParam.action : \"none\");\r\n  }, []);\r\n\r\n  let history = useHistory();\r\n  const back = (e: any) => {\r\n    if (HeaderParam.customBack) {\r\n      HeaderParam.backClick(e);\r\n    } else {\r\n      history.goBack();\r\n    }\r\n  };\r\n\r\n  const updateActionType = (myValue: string) => {\r\n    if (myValue) {\r\n      if (myValue === \"search\") {\r\n        setActionType({\r\n          search: false,\r\n          check: true,\r\n          close: true,\r\n          home: true,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"check\") {\r\n        setActionType({\r\n          search: true,\r\n          check: false,\r\n          close: true,\r\n          home: true,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"close\") {\r\n        setActionType({\r\n          search: true,\r\n          check: true,\r\n          close: false,\r\n          home: true,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"home\") {\r\n        setActionType({\r\n          search: true,\r\n          check: true,\r\n          close: true,\r\n          home: false,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"info\") {\r\n        setActionType({\r\n          search: true,\r\n          check: true,\r\n          close: true,\r\n          home: true,\r\n          info: false,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  function homeButtonClicked() {\r\n    ClearReduxStore();\r\n    HeaderParam.locationProps.history.push(\"/tabs/landing\");\r\n  }\r\n\r\n  const selectUserType = async (e: any) => {\r\n    let data = e.detail.value;\r\n    let url =\r\n      EndPointURL.loginAgent +\r\n      \"?agentCode=\" +\r\n      data.agentCode +\r\n      \"&agentType=\" +\r\n      data.agentType;\r\n\r\n    var endPointHeader = {\r\n      userName: userDetails.userName,\r\n      userType: \"IMPORTER_APP\",\r\n    };\r\n\r\n    var response = await loginWithAgent(url, endPointHeader);\r\n    var result = response.data.data.dataItems[0];\r\n    if (await response.success) {\r\n      var accessToken = await reduxActions.AddAccessToKen(result.accessToken);\r\n      if (accessToken) Store.dispatch(accessToken);\r\n\r\n      var agentType = await reduxActions.AddAgentType(\r\n        result.user.activeCompanyCode\r\n      );\r\n      if (agentType) Store.dispatch(agentType);\r\n\r\n      var selectedAgent = await reduxActions.AddSelectedAgent(data);\r\n\r\n      if (selectedAgent) Store.dispatch(selectedAgent);\r\n\r\n      var test = Store.getState().CheckUserStatus;\r\n    }\r\n  };\r\n\r\n  const agentCodeoptions = {\r\n    cssClass: \"agent-interface\",\r\n  };\r\n\r\n  return (\r\n    <IonHeader\r\n      style={HeaderParam.agentHeader ? { height: \"102px\" } : { height: \"10%\" }}\r\n    >\r\n      <IonToolbar className=\"header\">\r\n        <div\r\n          className=\"mainContainer\"\r\n          style={!HeaderParam.agentHeader ? { paddingBottom: 0 } : {}}\r\n        >\r\n          {HeaderParam.checkedProps ? (\r\n            <div\r\n              className=\"selectAllBg\"\r\n              hidden={!HeaderParam.checkedProps.showChecked}\r\n            >\r\n              <div>\r\n                <IonButton\r\n                  fill=\"clear\"\r\n                  onClick={(e) => {\r\n                    back(e);\r\n                  }}\r\n                >\r\n                  <Icon iconProps={backIconProps} />\r\n                </IonButton>\r\n              </div>\r\n              <div className=\"checkBoxContainer\">\r\n                <IonCheckbox\r\n                  className=\"checkBox\"\r\n                  checked={checked}\r\n                  onIonChange={(e) => checkAndUncheckAll(e.detail.checked)}\r\n                />\r\n              </div>\r\n              <div className=\"checkBoxLabelCol\">\r\n                <IonLabel className=\"checkBoxLabel\">{checkedLabel}</IonLabel>{\" \"}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <div className=\"backArrow\">\r\n            {HeaderParam.label != \"Home\" && actionType.close ? (\r\n              <IonButton\r\n                fill=\"clear\"\r\n                onClick={(e) => {\r\n                  back(e);\r\n                }}\r\n              >\r\n                <Icon iconProps={backIconProps} />\r\n              </IonButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n          <div className=\"header-label\">\r\n            {\" \"}\r\n            <IonText>{HeaderParam.label}</IonText>\r\n          </div>\r\n          <div className=\"header-right\">\r\n            <IonButton\r\n              hidden={actionType.search}\r\n              fill=\"clear\"\r\n              onClick={HeaderParam.searchClick}\r\n            >\r\n              <IonIcon\r\n                slot=\"icon-only\"\r\n                icon={search}\r\n                style={{ minWidth: \"30px\" }}\r\n              />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.info}\r\n              fill=\"clear\"\r\n              onClick={HeaderParam.infoClick}\r\n            >\r\n              <IonIcon\r\n                slot=\"icon-only\"\r\n                icon={informationCircle}\r\n                style={{ minWidth: \"30px\" }}\r\n              />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.check}\r\n              fill=\"clear\"\r\n              onClick={HeaderParam.checkClick}\r\n            >\r\n              {/* <IonIcon slot=\"icon-only\" src=\"\" style={{minWidth:'30px'}}/> */}\r\n              <Icon iconProps={checkIconProps} />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.home}\r\n              fill=\"clear\"\r\n              onClick={(e) => homeButtonClicked()}\r\n            >\r\n              <Icon iconProps={homeIconProps} />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.close}\r\n              fill=\"clear\"\r\n              onClick={(e) => {\r\n                back(e);\r\n              }}\r\n            >\r\n              <IonIcon slot=\"icon-only\" icon={closeSharp} />\r\n            </IonButton>\r\n            <IonButton hidden={HeaderParam.action !== \"\"} fill=\"clear\">\r\n              <IonIcon />\r\n            </IonButton>\r\n          </div>\r\n        </div>\r\n        {userDetails.agents && HeaderParam.agentHeader && (\r\n          <IonToolbar className=\"agent-code-header\">\r\n            <IonSelect\r\n              value={userDetails.selectedAgent}\r\n              interface=\"popover\"\r\n              onIonChange={(e) => selectUserType(e)}\r\n              disabled={\r\n                !HeaderParam.showAgent || userDetails.agents.length == 1\r\n              }\r\n              style={\r\n                !HeaderParam.showAgent ? { backgroundColor: \"#DDF1FF\" } : {}\r\n              }\r\n              interfaceOptions={agentCodeoptions}\r\n            >\r\n              {userDetails.agents.map((item, index) => {\r\n                return (\r\n                  <IonSelectOption\r\n                    value={item}\r\n                    key={index}\r\n                    className=\"select-agent-opt\"\r\n                  >\r\n                    {item.agentCode + \"-\" + item.agentName}\r\n                  </IonSelectOption>\r\n                );\r\n              })}\r\n            </IonSelect>\r\n            <IonIcon\r\n              src=\"assets/icon/arrow-down.svg\"\r\n              className=\"arrow-down-icon\"\r\n              hidden={!HeaderParam.showAgent || userDetails.agents.length == 1}\r\n            />\r\n          </IonToolbar>\r\n        )}\r\n        {/* </IonImg> */}\r\n      </IonToolbar>\r\n    </IonHeader>\r\n  );\r\n};\r\nexport default Header;\r\n","import Store from \"../redux/Store\";\nimport * as LoginUserTypes from \"../redux/actionTypes/AllActionTypes\";\n\nexport default function ClearReduxStore() {\n  Store.dispatch({ type: LoginUserTypes.BOOK_TRUCK_CLEAR });\n  Store.dispatch({ type: LoginUserTypes.REMOVE_ALL_CONTAINERS });\n  Store.dispatch({ type: LoginUserTypes.REMOVE_ALL_TRUCK });\n}\n","import { REGEX_MAP } from \"./Constants\";\r\nimport moment from \"moment\";\r\nconst milliseconds = (h, m, s) => ((h * 60 * 60 + m * 60 + s) * 1000);\r\n\r\nvar disabledHr;\r\nexport const isEmpty = (data: any) => {\r\n  if(data===null){\r\n  data=\"\"}\r\n  return data.trim() === \"\";\r\n};\r\n\r\nexport const isValid = (dataType: any, data: any, delimiter?: string) => {\r\n  if (delimiter) {\r\n    data = data.replaceAll(delimiter, \"\");\r\n  }\r\n  return new RegExp(REGEX_MAP[dataType]).test(data);\r\n};\r\n\r\nexport const getPatternValue = (data: any, pattern: any, delimiter: any) => {\r\n  if (!data || !pattern || !delimiter) {\r\n    return data;\r\n  }\r\n  var cleaned = data.replaceAll(\" \", \"\").replaceAll(delimiter, \"\");\r\n  let finalstr = \"\";\r\n  let ctr = 0;\r\n\r\n  for (let i = 0; i < pattern.length && ctr < cleaned.length; i++) {\r\n    if (pattern[i] != delimiter) {\r\n      finalstr = finalstr + cleaned[ctr];\r\n      ctr = ctr + 1;\r\n    } else {\r\n      finalstr = finalstr + delimiter;\r\n    }\r\n  }\r\n  return finalstr;\r\n};\r\n\r\nexport const stringToColour = function(str) {\r\n  var hash = 0;\r\n  for (var i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n  var colour = '#';\r\n  for (var i = 0; i < 3; i++) {\r\n      var value = (hash >> (i * 8)) & 0xFF;\r\n      colour += ('00' + value.toString(16)).substr(-2);\r\n  }\r\n  return colour;\r\n}\r\n\r\nexport const validateEmail=(mail) =>{\r\n  return new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$/i).test(mail);\r\n}\r\n\r\nexport const validatePhone=(number) =>{\r\n  let regexp =  new RegExp(\"^\\\\d{8}$\");\r\n  var nameTest = regexp.test(number);\r\n  return nameTest;\r\n}\r\n\r\nexport const validateMobile=(number) =>{\r\n  let regexp =  new RegExp(\"^\\\\d{9}$\");\r\n  var nameTest = regexp.test(number);\r\n  return nameTest;\r\n}\r\n\r\nexport function addTimeToDateTime(date: any, timeToAdd: any) {\r\n  var d2 = new Date(date);\r\n  return new Date(d2.setMinutes(date.getMinutes() + timeToAdd));\r\n  //return updatedDate;\r\n}\r\n\r\nexport function setDisabledMinHr(disableHr) {\r\n  //testFun(testContent);\r\n  var disabledTime = addTimeToDateTime(new Date(), 1 * disableHr * 60 || 1);\r\n  disabledHr = disabledTime.toISOString();\r\n  return disabledHr;\r\n}\r\n\r\nexport function getDisabledMinHr() {\r\n  return disabledHr;\r\n}\r\n\r\nexport const convertToMillSeconds = (interval: string) => {\r\n  let timeParts = interval.split(\":\");\r\n  let result = milliseconds(timeParts[0], timeParts[1], 0);\r\n  // days\r\n  return result;\r\n}\r\n","import { IonIcon, IonInput, IonLabel, IonText } from \"@ionic/react\";\r\nimport { personOutline, pulseOutline } from \"ionicons/icons\";\r\nimport { TextInputType } from \"../../util/DataTypes\";\r\nimport React, { useState } from \"react\";\r\nimport \"./TxtInput.scss\";\r\nimport { getPatternValue, isValid, validateEmail } from \"../../util/Utilities\";\r\nimport { connect } from \"../../data/connect\";\r\nimport Icon from \"../Icon\";\r\ninterface TxtInputProps {\r\n  label?: string;\r\n  name: any;\r\n  type: any;\r\n  value?: any;\r\n  onChange?: any;\r\n  required?: any;\r\n  errors?: any;\r\n  pattern?: any;\r\n  datatype?: TextInputType;\r\n  description?: string;\r\n  placeholder: string;\r\n  icon?: any;\r\n  onBlur?: any;\r\n  readonly?: any;\r\n  contactForm?: any;\r\n  max?: number;\r\n}\r\nconst TxtInput: React.FC<TxtInputProps> = ({\r\n  label,\r\n  name,\r\n  type,\r\n  value,\r\n  onChange,\r\n  required,\r\n  errors,\r\n  pattern,\r\n  datatype,\r\n  description,\r\n  placeholder,\r\n  icon,\r\n  onBlur,\r\n  readonly,\r\n  contactForm,\r\n  max,\r\n}) => {\r\n  const [validation, setvalidation] = useState(false);\r\n  const checkKey = (e) => {\r\n    if (e.key.length > 1) return true;\r\n    setvalidation(!isValid(datatype, e.key));\r\n    if (!isValid(datatype, e.key)) {\r\n      e.preventDefault();\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onInpChange = (e) => {\r\n    let val = e.target.value;\r\n    let validate;\r\n    if (e.target.pattern) {\r\n      val = getPatternValue(val, e.target.pattern, \"-\");\r\n    }\r\n    if (e.target.type === \"email\") {\r\n      validate = validateEmail(val);\r\n      setvalidation(!validate);\r\n    }\r\n    if (!readonly) onChange(e, val, validate);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"form-element-group\"\r\n      style={contactForm ? { width: \"350px\", padding: \"0\" } : {}}\r\n    >\r\n      <fieldset>\r\n        <legend>{label}</legend>\r\n        {type === \"tel\" ? (\r\n          <IonLabel className=\"regularFont-textInput\">971</IonLabel>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <IonInput\r\n          name={name}\r\n          type={type}\r\n          value={value}\r\n          spellCheck={false}\r\n          autocapitalize=\"off\"\r\n          //readonly={readonly}\r\n          onKeyDown={checkKey}\r\n          onIonChange={onInpChange}\r\n          clearInput={true}\r\n          required={required}\r\n          autocomplete=\"off\"\r\n          pattern={pattern}\r\n          placeholder={placeholder}\r\n          className=\"textInput\"\r\n          onIonBlur={(e) => {\r\n            if (onBlur) onBlur(e);\r\n            else {\r\n            }\r\n          }}\r\n          maxlength={max}\r\n          readonly={readonly ? readonly : false}\r\n        >\r\n          {icon && (\r\n            <Icon iconProps={icon} />\r\n            // <IonIcon slot=\"primary\" icon={pulseOutline} />\r\n          )}\r\n        </IonInput>\r\n      </fieldset>\r\n\r\n      <div className=\"\">\r\n        {errors && (\r\n          <IonText color=\"danger\" className=\"validation-message\">\r\n            <IonLabel className=\"ion-padding-start validation-message\">\r\n              {errors}\r\n            </IonLabel>\r\n          </IonText>\r\n        )}\r\n      </div>\r\n      {validation && description && (\r\n        <IonText color=\"danger\" className=\"validation-message\">\r\n          <IonLabel className=\"ion-padding-start validation-message\">\r\n            {description}\r\n          </IonLabel>\r\n        </IonText>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TxtInput;\r\n","import {\r\n  IonIcon,\r\n  IonLabel,\r\n  IonSelect,\r\n  IonSelectOption,\r\n  IonText,\r\n} from \"@ionic/react\";\r\nimport { addCircle } from \"ionicons/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./DrpdownInput.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface DrpDownInputProps {\r\n  label?: string;\r\n  name: any;\r\n  type?: any;\r\n  value?: any;\r\n  onChange: any;\r\n  required?: any;\r\n  errors?: any;\r\n  pattern?: any;\r\n  datatype?: any;\r\n  description?: string;\r\n  placeholder: string;\r\n  icon?: any;\r\n  onBlur?: any;\r\n  listValues?: Array<any>;\r\n  disabled?: any;\r\n  selectedName?: any;\r\n}\r\nconst DrpdownInput: React.FC<DrpDownInputProps> = ({\r\n  label,\r\n  name,\r\n  value,\r\n  onChange,\r\n  errors,\r\n  description,\r\n  placeholder,\r\n  listValues,\r\n  disabled,\r\n  selectedName,\r\n  type,\r\n}) => {\r\n  // const [selectedName, setselectedName] = useState();\r\n  const [valueD, setValueD] = useState({});\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    setValueD({ label: selectedName, value: value });\r\n  }, []);\r\n\r\n  const onInpChange = (e) => {\r\n    let val = e.target.value;\r\n    setValueD(val);\r\n    if (val === \"addAddress\") {\r\n      history.push(\"/addAddress\");\r\n    } else {\r\n      onChange(e, val);\r\n    }\r\n  };\r\n\r\n  const options = {\r\n    cssClass: \"my-custom-interface\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-element-group\">\r\n      <fieldset>\r\n        <legend>{label}</legend>\r\n        <IonSelect\r\n          // selectedText={selectedName}\r\n          name={name}\r\n          placeholder={placeholder}\r\n          value={value || valueD}\r\n          onIonChange={onInpChange}\r\n          cancel-text\r\n          interface=\"popover\"\r\n          className=\"dropdownInput\"\r\n          interfaceOptions={options}\r\n        >\r\n          {type === \"address\" && (\r\n            <IonSelectOption value=\"addAddress\" class=\"selectAddAddr\">\r\n              Add new Address\r\n              {/* <IonIcon icon={addCircle} className=\"addIcon\" /> */}\r\n              <img src=\"/assets/icon/eye.svg\" />\r\n            </IonSelectOption>\r\n          )}\r\n          {listValues?.map((item, index) =>\r\n            type === \"address\" ? (\r\n              <IonSelectOption key={index} value={item}>\r\n                {item.consigneeName} {item.dropAddress}\r\n                {item.email}\r\n              </IonSelectOption>\r\n            ) : (\r\n              <IonSelectOption key={index} value={item.value}>\r\n                {item.label}\r\n              </IonSelectOption>\r\n            )\r\n          )}\r\n        </IonSelect>\r\n      </fieldset>\r\n\r\n      <div className=\"\">\r\n        {errors && (\r\n          <IonText color=\"danger\" className=\"validation-message\">\r\n            <IonLabel className=\"ion-padding-start\">{errors}</IonLabel>\r\n          </IonText>\r\n        )}\r\n      </div>\r\n      {/* {validation && description && ( */}\r\n      <IonText color=\"danger\" className=\"validation-message\">\r\n        <IonLabel className=\"ion-padding-start\">{description}</IonLabel>\r\n      </IonText>\r\n      {/* )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrpdownInput;\r\n","export const versionContaner = {\n  version: \"0.1.3\",\n  copyRight: \"© 2021 Dubai Trade. All rights reserved\",\n};\nexport const mapConfig = {\n  zoomLevel: 13,\n  apiKey: \"AIzaSyAECHNsbM59mna4pUyxIqnlvwQhLagQggo\",\n  streetViewControl: false,\n  libraries: [\"places\", \"geometry\"],\n  gestureHandling: \"auto\",\n  mapTypeControl: false,\n  fullscreenControl: false,\n  clickableIcons: false,\n  JNCenter: {\n    lat: 24.976058892135036,\n    lng: 55.07128661431274,\n  },\n  // 24.976975283540035, 55.02450589716892\n  JAFZA_NORTH_BOUNDS: {\n    north: 25.05071092660886,\n    east: 55.09950589716892,\n    south: 24.927416355905556,\n    west: 55.0251050292724,\n  },\n  JSCenter: {\n    lat: 24.955775393136697,\n    lng: 55.10412611094269,\n  },\n  JAFZA_SOUTH_BOUNDS: {\n    north: 24.987009322019357,\n    east: 55.142369395592446,\n    south: 24.918124884693306,\n    west: 55.06532233720033,\n  },\n  JAFZA_SOUTH_POLYGON: [\n    { lat: 24.918335082992616, lng: 55.1033979291419 },\n    { lat: 24.94213373197022, lng: 55.06720657322788 },\n    { lat: 24.946263828363616, lng: 55.06703036010413 },\n    { lat: 24.948392439546705, lng: 55.06788103546015 },\n    { lat: 24.953249434538826, lng: 55.07643985527741 },\n    { lat: 24.975549509728268, lng: 55.090572455964974 },\n    { lat: 24.9869169211042, lng: 55.09343349544909 },\n    { lat: 24.975480186080222, lng: 55.14252865180429 },\n    { lat: 24.963466811096875, lng: 55.13932517766653 },\n    { lat: 24.94595783596617, lng: 55.13099960083531 },\n    { lat: 24.932649349869404, lng: 55.120356595210446 },\n  ],\n  JAFZA_NORTH_POLYGON: [\n    { lat: 24.947399858378372, lng: 55.06204002619259 },\n    { lat: 24.95075067106685, lng: 55.06953127397344 },\n    { lat: 24.955731440118914, lng: 55.076722872514516 },\n    { lat: 24.97619575795202, lng: 55.08960781962606 },\n    { lat: 25.011321248744338, lng: 55.09639988512211 },\n    { lat: 25.0242943464765, lng: 55.076822756723956 },\n    { lat: 25.023236507938392, lng: 55.07457130064973 },\n    { lat: 25.042276206761077, lng: 55.06698306019625 },\n    { lat: 25.04907538290263, lng: 55.05997853018756 },\n    { lat: 25.050737346389916, lng: 55.05589255434915 },\n    { lat: 25.040236380403357, lng: 55.038464616589415 },\n    { lat: 25.035476653635737, lng: 55.03412847896498 },\n    { lat: 25.01930731340362, lng: 55.044218337784784 },\n    { lat: 25.019836250743058, lng: 55.04646979385902 },\n    { lat: 25.01885393672736, lng: 55.04688673016905 },\n    { lat: 25.01832499515555, lng: 55.04646979385902 },\n    { lat: 25.00692286222223, lng: 55.05111738747818 },\n    { lat: 25.006620580806654, lng: 55.052118034622275 },\n    { lat: 25.00556258999415, lng: 55.05245158367031 },\n    { lat: 25.002993145798893, lng: 55.0502835148581 },\n    { lat: 24.996418146855707, lng: 55.05303529450437 },\n    { lat: 24.99452871426998, lng: 55.055036588792575 },\n    { lat: 25.00850982744932, lng: 55.07171404119423 },\n    { lat: 25.00473130510606, lng: 55.07563324250862 },\n    { lat: 24.98886024189255, lng: 55.05762159414407 },\n    { lat: 24.98190655922737, lng: 55.060456761052336 },\n    { lat: 24.99755179212295, lng: 55.07905212048019 },\n    { lat: 24.994831025095074, lng: 55.08172051286446 },\n    { lat: 24.972457990426506, lng: 55.05578707463507 },\n    { lat: 24.974272171875437, lng: 55.05270174594076 },\n    { lat: 24.973365084495175, lng: 55.051701098796656 },\n    { lat: 24.97601073732519, lng: 55.04911609367441 },\n    { lat: 24.98130904391133, lng: 55.05490174753818 },\n    { lat: 25.001186558202235, lng: 55.04672979628523 },\n    { lat: 25.00284917032546, lng: 55.043477693066905 },\n    { lat: 25.017282720741083, lng: 55.03722364841628 },\n    { lat: 25.0205380783843, lng: 55.03859011018785 },\n    { lat: 25.017288874447768, lng: 55.03675559042367 },\n    { lat: 24.99695776268485, lng: 55.04504074434748 },\n    { lat: 24.993254463749036, lng: 55.03670201814665 }, // missed1 maktoum palace\n    { lat: 24.99260383481455, lng: 55.03433101556131 },\n    { lat: 24.99211404744376, lng: 55.030732463527265 },\n    { lat: 24.990405298530447, lng: 55.02823014859448 },\n    { lat: 24.98994860232446, lng: 55.02650695257742 },\n    { lat: 24.99001170061265, lng: 55.025532334360214 },\n    { lat: 24.98874972869547, lng: 55.02560194994716 },\n    { lat: 24.988560431790532, lng: 55.02351348233886 }, // missed 2\n    { lat: 24.989547069672607, lng: 55.022952344176026 },\n    { lat: 24.98689690366748, lng: 55.01884502454637 },\n    { lat: 24.98422074682548, lng: 55.02004801045847 },\n    { lat: 24.984371915176553, lng: 55.02163236843662 },\n    { lat: 24.983706653540043, lng: 55.02213274337374 },\n    { lat: 24.98273765892748, lng: 55.02191197942521 },\n    { lat: 24.97684704235023, lng: 55.02460652146162 },\n    { lat: 24.97791982314296, lng: 55.033656547764245 },\n    { lat: 24.966761668353683, lng: 55.04155976774015 },\n  ],\n  DUBAI_LOGISTICS_POLYGON: [\n    { lat: 24.92657886128531, lng: 55.114480584834986 },\n    { lat: 24.916615522637652, lng: 55.13473662731599 },\n    { lat: 24.89871062609297, lng: 55.16683730480709 },\n    { lat: 24.866475267632595, lng: 55.14537963268737 },\n    { lat: 24.887499281620347, lng: 55.10692748424884 },\n    { lat: 24.891703655092485, lng: 55.101605981563154 },\n    { lat: 24.904938710873477, lng: 55.09182128307656 },\n    { lat: 24.907118466294715, lng: 55.0916496216996 },\n    { lat: 24.910232335815788, lng: 55.092336267207436 },\n    { lat: 24.917705302010063, lng: 55.10606917736405 },\n  ],\n  DLCenter: {\n    lat: 24.90395704901777,\n    lng: 55.11047067951147,\n  },\n  DUBAI_LOGISTICS_BOUNDS: {\n    north: 24.92657886128531,\n    east: 55.16683730480709,\n    south: 24.866475267632595,\n    west: 55.0916496216996,\n  },\n};\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  GoogleMap,\r\n  useJsApiLoader,\r\n  useLoadScript,\r\n  Marker,\r\n  InfoWindow,\r\n  Autocomplete,\r\n  Polygon,\r\n} from \"@react-google-maps/api\";\r\nimport { mapConfig } from \"./../util/Config\";\r\nimport Geocode from \"react-geocode\";\r\nimport \"./MapView.scss\";\r\n\r\nconst containerStyle = {\r\n  width: \"100%\",\r\n  height: \"100%\",\r\n};\r\n\r\nconst divStyle = {\r\n  color: \"#434343\",\r\n  fontFamily: \"Dubai\",\r\n  fontSize: 14,\r\n  maxWidth: \"200px\",\r\n};\r\n\r\nfunction MapView(props) {\r\n  const { isLoaded } = useJsApiLoader({\r\n    id: \"google-map-script\",\r\n    googleMapsApiKey: mapConfig.apiKey,\r\n    libraries: mapConfig.libraries,\r\n  });\r\n  const [map, setMap] = useState(null);\r\n  const [center, setCenter] = useState(mapConfig.JNCenter);\r\n  const [state, setState] = useState({ showingInfoWindow: false });\r\n  const [address, setAddress] = useState(props.address);\r\n  const [searchBox, setSearchBox] = useState();\r\n  const [place, setPlace] = useState();\r\n  const bounds =\r\n    props.mapViewProps.zone === \"JAFZAN\"\r\n      ? mapConfig.JAFZA_NORTH_BOUNDS\r\n      : props.mapViewProps.zone === \"JAFZAS\"\r\n      ? mapConfig.JAFZA_SOUTH_BOUNDS\r\n      : mapConfig.DUBAI_LOGISTICS_BOUNDS;\r\n\r\n  const paths =\r\n    props.mapViewProps.zone === \"JAFZAN\"\r\n      ? mapConfig.JAFZA_NORTH_POLYGON\r\n      : props.mapViewProps.zone === \"JAFZAS\"\r\n      ? mapConfig.JAFZA_SOUTH_POLYGON\r\n      : mapConfig.DUBAI_LOGISTICS_POLYGON;\r\n\r\n  useEffect(() => {\r\n    if (props.mapViewProps.latLng) setCenter(props.mapViewProps.latLng);\r\n    else if (props.mapViewProps.zone == \"JAFZAS\") setCenter(mapConfig.JSCenter);\r\n    else if (props.mapViewProps.zone == \"JAFZAN\") setCenter(mapConfig.JNCenter);\r\n    else if (props.mapViewProps.zone == \"DUBAIS\") setCenter(mapConfig.DLCenter);\r\n    else setCenter(mapConfig.DLCenter);\r\n    var str = props.mapViewProps.selectedAdd;\r\n    if(str?.includes(\",\")) {\r\n      var arr = str?.split(\",\");\r\n      var fst = arr?.splice(0,1).join(\"\");\r\n      var rest = arr?.join(\",\");\r\n      setAddress(rest);\r\n      setPlace(fst);\r\n    } else {\r\n      setAddress(str);\r\n      setPlace(\"\");\r\n    }\r\n    \r\n  }, [props.mapViewProps]);\r\n\r\n  const handleMapClick = (...args) => {\r\n    if (centerChanged(args[0].latLng)) {\r\n      setCenter({\r\n        lat: args[0].latLng.lat(),\r\n        lng: args[0].latLng.lng(),\r\n      });\r\n      console.log(\"onClick args: \", args);\r\n      setPlace();\r\n      console.log(\"mapref\", map);\r\n      Geocode.fromLatLng(\r\n        args[0].latLng.lat(),\r\n        args[0].latLng.lng(),\r\n        mapConfig.apiKey\r\n      ).then(\r\n        (response) => {\r\n          console.log(\"map\", response);\r\n          const address = response.results[0].formatted_address;\r\n          console.log(\"formatted_address :: \" + address);\r\n          setAddress(address);\r\n          props.mapViewProps.getAddressFromMap({add: address, loc: response.results[0].geometry.location});\r\n        },\r\n        (error) => {\r\n          console.error(error);\r\n        }\r\n      );\r\n    }\r\n  };\r\n\r\n  const onMarkerClick = (e) => {\r\n    console.log(\"marker\", e);\r\n    setState({\r\n      showingInfoWindow: !state.showingInfoWindow,\r\n    });\r\n  };\r\n\r\n  const options = {\r\n    restriction: {\r\n      latLngBounds: bounds,\r\n      strictBounds: false,\r\n    },\r\n    streetViewControl: mapConfig.streetViewControl,\r\n    mapTypeControl: mapConfig.mapTypeControl,\r\n    fullscreenControl: mapConfig.fullscreenControl,\r\n    clickableIcons: mapConfig.clickableIcons,\r\n    zoom: mapConfig.zoomLevel,\r\n  };\r\n\r\n  const onLoad = (autocomplete) => {\r\n    console.log(\"autocomplete: \", autocomplete);\r\n    setSearchBox(autocomplete);\r\n  };\r\n\r\n  const onPlaceChanged = () => {\r\n    if (searchBox !== null) {\r\n      console.log(\"autocomplete\", searchBox.getPlace());\r\n      if (centerChanged(searchBox.getPlace().geometry.location)) {\r\n        setCenter({\r\n          lat: searchBox.getPlace().geometry.location.lat(),\r\n          lng: searchBox.getPlace().geometry.location.lng(),\r\n        });\r\n        const address = searchBox.getPlace().formatted_address;\r\n        const place = searchBox.getPlace().name;\r\n        setAddress(address);\r\n        setPlace(place);\r\n        console.log(place + \", \" + address);\r\n        props.mapViewProps.getAddressFromMap({add: place + \", \" + address, loc: searchBox.getPlace().geometry.location});\r\n      }\r\n    } else {\r\n      console.log(\"Autocomplete is not loaded yet!\");\r\n    }\r\n  };\r\n\r\n  const centerChanged = (latLng) => {\r\n    props.mapViewProps.handleError(\"\");\r\n    const jafza = new window.google.maps.Polygon({\r\n      paths: paths,\r\n    });\r\n    if (window.google.maps.geometry.poly.containsLocation(latLng, jafza))\r\n      return true;\r\n    else {\r\n      setAddress(\"\");\r\n      setPlace(\"\");\r\n      props.mapViewProps.getAddressFromMap(\"\");\r\n      props.mapViewProps.handleError(\"Location is outside of selected zone\");\r\n    }\r\n  };\r\n\r\n  return isLoaded ? (\r\n    <GoogleMap\r\n      id=\"map-view\"\r\n      mapContainerStyle={containerStyle}\r\n      center={center}\r\n      zoom={12}\r\n      onClick={\r\n        !props.mapViewProps.isContainerEdit ? handleMapClick: {}\r\n      }\r\n      ref={(ref) => {\r\n        setMap(ref);\r\n      }}\r\n      options={options}\r\n      onBoundsChanged={(e) => console.log(\"bounds\", e)}\r\n    >\r\n      <Marker position={center} onClick={onMarkerClick}>\r\n        {state.showingInfoWindow && (\r\n          <InfoWindow position={center} onCloseClick={onMarkerClick}>\r\n            <div style={divStyle}>\r\n              <div style={{ textAlign: \"center\" }}>\r\n                <b>\r\n                  <u>{place}</u>\r\n                </b>\r\n              </div>\r\n              <div style={{ textAlign: \"center\" }}>\r\n                {address\r\n                  ? address\r\n                  : props.mapViewProps.zone === \"JAFZAN\"\r\n                  ? \"JAFZA North Area\"\r\n                  : props.mapViewProps.zone === \"JAFZAS\"\r\n                  ? \"JAFZA South Area\"\r\n                  : \"Dubai Logistics City\"}\r\n              </div>\r\n            </div>\r\n          </InfoWindow>\r\n        )}\r\n      </Marker>\r\n      {!props.mapViewProps.isContainerEdit && <div>\r\n        <Autocomplete\r\n          onLoad={onLoad}\r\n          onPlaceChanged={onPlaceChanged}\r\n          bounds={bounds}\r\n          restrictions={{ country: \"ae\" }}\r\n        >\r\n          <input\r\n            type=\"text\"\r\n            className=\"auto-complete-input\"\r\n            placeholder=\"Search Location Here\"\r\n          />\r\n        </Autocomplete>\r\n      </div> }\r\n      <Polygon\r\n        paths={paths}\r\n        options={{\r\n          fillColor: \"transparent\",\r\n          strokeColor: \"rgb(5 33 95)\",\r\n          strokeOpacity: 1,\r\n          strokeWeight: 1,\r\n          clickable: false,\r\n          draggable: false,\r\n          editable: false,\r\n          geodesic: false,\r\n          zIndex: 1,\r\n        }}\r\n      />\r\n    </GoogleMap>\r\n  ) : (\r\n    <></>\r\n  );\r\n}\r\n\r\nexport default React.memo(MapView);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    IonPage,\r\n    IonLabel,\r\n    IonCard,\r\n    IonIcon,\r\n} from \"@ionic/react\";\r\nimport Store from \"../../../redux/Store\";\r\nimport Header from \"../../../components/Header\";\r\nimport TxtInput from \"../../../components/txtinput/TxtInput\";\r\nimport MapView from \"../../MapView\";\r\nimport * as EndPointURL from \"../../../util/EndPointURL\";\r\nimport DropDownInput from \"../../../components/dropdownInput/DrpdownInput\";\r\nimport * as Utils from \"../../../util/Utilities\";\r\nimport { closeOutline } from \"ionicons/icons\";\r\nimport { httpGetCallWithoutHeader, httpPostCallWithoutHeaderAndWithBody } from \"../../../services/EndPointApi\";\r\nimport * as reduxActions from \"../../../redux/actions/AllActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./AddNewAddress.scss\";\r\n\r\nexport default function AddNewAddress(props: any) {\r\n    let history = useHistory();\r\n    const [allZones, setAllZones] = useState([]);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [address, setAddress] = useState<any>({\r\n        consigneeContactName: \"\",\r\n        consigneeContactNumber: \"\",\r\n        dropAddress: \"\",\r\n        selectedDropZoneLabel: \"Jafza North\",\r\n        dropZone: \"JAFZAN\",\r\n        addressNickname: \"\",\r\n        addressLine1: \"\",\r\n        phoneNumber: \"\",\r\n        createMode: true,\r\n        latLng:\"\",\r\n    });\r\n    const [error, setError] = useState({\r\n        errorName: \"\",\r\n        errorMobile: \"\",\r\n        errorDropAddr: \"\",\r\n        errorDropZone: \"\",\r\n        errorNickName: \"\",\r\n        errorAddrLine: \"\",\r\n        errorPhone: \"\",\r\n        mapError: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        var add;\r\n        console.log('props',props.history.location.state);\r\n        if(props.history.location.state?.isContainerEdit){\r\n            add = props.history.location.state?.contact;\r\n            setAddress(add)\r\n        } else {\r\n            props.history.location.state\r\n            ? setAddress(props.history.location.state)\r\n            : setAddress(address);\r\n        }\r\n        \r\n        var response = httpGetCallWithoutHeader(\r\n            EndPointURL.allZone\r\n        );\r\n        response.then((result) => {\r\n            if (result.success) {\r\n\r\n                // if(props.history.location.state?.isContainerEdit) {\r\n                //     var dZ = result.data.data.dataItems.find((element) => {\r\n                //         return element.value === add.dropZone;\r\n                //       });\r\n                //     console.log(\"DZ\", dZ);\r\n                //     add.selectedDropZoneLabel = dZ.label;\r\n                //     console.log(add);\r\n                //     setAddress(add);\r\n                // } \r\n\r\n                setAllZones(result.data.data.dataItems);\r\n            } \r\n        });\r\n    }, []);\r\n\r\n    function getZone(e: any, value: any) {\r\n        console.log(e.target.name, e.target.value);\r\n        console.log(e.target.name, value);\r\n        setError({\r\n            ...error,\r\n            errorDropZone:\"\"\r\n        });\r\n        console.log(\"add\",address);\r\n        setAddress({\r\n            ...address,\r\n            dropZone:value?.value,\r\n            selectedDropZoneLabel:value?.label,\r\n            dropAddress:\"\",\r\n            latLng:\"\"\r\n        })\r\n    }\r\n\r\n    function handlePhoneNumber(e: any, value:any) {\r\n        setAddress({\r\n            ...address,\r\n            phoneNumber: value ? \"971\" + value * 1 : \"\"\r\n        })\r\n        var nameTest = Utils.validatePhone(value);\r\n        if (value) {\r\n            if (!nameTest) {\r\n                setError({\r\n                    ...error,\r\n                    errorPhone:\"Please Enter 8 digit number\"\r\n                });\r\n            } else {\r\n                setError({\r\n                    ...error,\r\n                    errorPhone:\"\"\r\n                });\r\n            }\r\n            setErrorMessage(\"\");\r\n        }\r\n    }\r\n\r\n    function handleContactName(e: any, value: any) {\r\n        setAddress({\r\n            ...address,\r\n            consigneeContactName:value\r\n        })\r\n        setError({\r\n            ...error,\r\n            errorName:\"\"\r\n        });\r\n    }\r\n\r\n    function handleMobileNumber(e: any, value:any) {\r\n        setAddress({\r\n            ...address,\r\n            consigneeContactNumber: value ? \"971\" + value * 1 : \"\"\r\n        })\r\n        var nameTest = Utils.validateMobile(value);\r\n        if (value) {\r\n            if (!nameTest) {\r\n                setError({\r\n                    ...error,\r\n                    errorMobile:\"Please Enter 9 digit number\"\r\n                });\r\n            } else {\r\n                setError({\r\n                    ...error,\r\n                    errorMobile:\"\"\r\n                });\r\n            }\r\n            setErrorMessage(\"\");\r\n        }\r\n    }\r\n\r\n    function handleLandMark(e: any, value:any) {\r\n        setAddress({\r\n            ...address,\r\n            addressLine1:value\r\n        })\r\n        setError({\r\n            ...error,\r\n            errorAddrLine:\"\"\r\n        });\r\n    }\r\n\r\n    function handleAddressNickName(e: any, value:any) {\r\n        setAddress({\r\n            ...address,\r\n            addressNickname:value\r\n        })\r\n        setError({\r\n            ...error,\r\n            errorNickName:\"\"\r\n        });\r\n    }\r\n\r\n    function addOrUpdate() {\r\n        var validate = true;\r\n        for (var key in address) {\r\n            if (\r\n                (address[key] === \"\" ||\r\n                    address[key] === null ||\r\n                    address[key] === \"9710\") &&\r\n                key != \"isActive\"\r\n            ) {\r\n                if (key != \"addressLine1\") {\r\n                    validate = false;\r\n                    if (key == \"consigneeContactName\") {\r\n                        error.errorName = \"Contact Name is blank\";\r\n                    }\r\n                    if (key == \"dropAddress\" || key == \"latLng\") {\r\n                        error.errorDropAddr = \"Drop address is blank\";\r\n                    }\r\n                    if (key == \"dropZone\") {\r\n                        error.errorDropZone = \"Drop Zone is blank\";\r\n                    }\r\n                    if (key == \"addressNickname\") {\r\n                        error.errorNickName = \"Nick name is blank\";\r\n                    }\r\n                    if (key == \"consigneeContactNumber\") {\r\n                        error.errorMobile = \"Mobile Number is blank\"\r\n                    }\r\n                    if (key == \"phoneNumber\") {\r\n                        error.errorPhone=\"Phone Number is blank\"\r\n                    }\r\n                    setError({...error});\r\n                    setErrorMessage(\"Please Fill all the fields\");\r\n                }\r\n            }\r\n        }\r\n\r\n        if (validate) {\r\n            if (address.createMode) {\r\n                saveAddress();\r\n            } else {\r\n                props.history.location.state.isContainerEdit ? updateContainerContact() : updateAddress();\r\n            }\r\n        }\r\n    }\r\n\r\n    const updateContainerContact = async() => {\r\n        var data = props.history.location.state;\r\n       data.booking.containers.map(c => {\r\n            if(c.container_number == address.ctnNumber) {\r\n                c.consigneeContactName = address.consigneeContactName; \r\n                c.addressLine1 = address.addressLine1;\r\n                c.phoneNumber = address.phoneNumber;\r\n                c.consigneeContactNumber = address.consigneeContactNumber;\r\n            }\r\n        } )\r\n        var cont = data.booking.containers;\r\n        console.log(\"cont\", cont)\r\n            var request = {\r\n              consigneeContactNumber : address.consigneeContactNumber,\r\n              phoneNumber : address.phoneNumber,\r\n              addressLine1: address.addressLine1,\r\n              consigneeContactName: address.consigneeContactName,\r\n              container_number: address.ctnNumber,\r\n              dpwTransactionId: address.dpwTransactionId,\r\n              requestDetailsNumber: address.requestDetailsNumber\r\n            }\r\n            let response = await httpPostCallWithoutHeaderAndWithBody(EndPointURL.contacDetailsUpdateUrl , request);\r\n            if (await response.success) {\r\n                console.log('bookingData',data.booking)\r\n                  let booking = {\r\n                    booking: data.booking?.booking,\r\n                    containers: cont,\r\n                    userType: data.booking?.userType,\r\n                    status: data.booking?.status\r\n                  };\r\n                  console.log('booking', booking);\r\n                  history.push(\"/containerDetails\", booking);\r\n              }\r\n        };\r\n\r\n    function updateAddress() {\r\n        let newAddress = address;\r\n        var response = httpPostCallWithoutHeaderAndWithBody(\r\n            EndPointURL.updateAddress, newAddress\r\n        );\r\n        response.then((result) => {\r\n            if (result.success) {\r\n                var address = reduxActions.updateAddress(newAddress);\r\n                if (address) Store.dispatch(address);\r\n                props.history.goBack();\r\n            }\r\n        });\r\n    }\r\n\r\n    function saveAddress() {\r\n        let newAddress = address;\r\n        var response = httpPostCallWithoutHeaderAndWithBody(\r\n            EndPointURL.addAddress, newAddress\r\n        );\r\n        response.then((result) => {\r\n            if (result.success) {\r\n                var address = reduxActions.addAddress(newAddress);\r\n                if (address) Store.dispatch(address);\r\n                props.history.goBack();\r\n            }\r\n        });\r\n    }\r\n\r\n    function handleAddress(e: any) {\r\n        console.log('loc',JSON.stringify(e.loc) );\r\n        setAddress({\r\n            ...address,\r\n            dropAddress:e.add,\r\n            latLng: JSON.stringify(e.loc)\r\n        })\r\n        setError({\r\n            ...error,\r\n            errorDropAddr:\"\"\r\n        });\r\n    }\r\n\r\n    const mapViewProps = {\r\n        getAddressFromMap: handleAddress,\r\n        zone: address.dropZone,\r\n        latLng: address.latLng ? JSON.parse(address.latLng) : address.latLng,\r\n        selectedAdd: address.dropAddress,\r\n        isContainerEdit: props.history.location.state?.isContainerEdit,\r\n        handleError: (e) => {\r\n            setError({\r\n                ...error,\r\n                mapError:e\r\n            });\r\n        },\r\n    };\r\n\r\n    return (\r\n        <IonPage>\r\n            <Header\r\n                label={address.createMode ? \"Add address\" : \"Edit Address\"}\r\n                action=\"check\"\r\n                checkClick={() => {\r\n                    addOrUpdate();\r\n                }}\r\n            />\r\n            <IonCard className=\"mapCard\">\r\n                <MapView mapViewProps={mapViewProps} />\r\n            </IonCard>\r\n            <IonLabel className=\"redColor\" hidden={error.mapError == \"\"}>\r\n                {error.mapError}\r\n                <IonIcon\r\n                    icon={closeOutline}\r\n                    slot=\"icon-only\"\r\n                    className=\"closeIconMap\"\r\n                    onClick={() => {\r\n                        setError({\r\n                            ...error,\r\n                            mapError:\"\"\r\n                    });\r\n                }}\r\n                />\r\n            </IonLabel>\r\n            <IonLabel className=\"redColor\" hidden={errorMessage == \"\"}>\r\n                {errorMessage}\r\n            </IonLabel>\r\n            <IonCard className=\"scrollCard\">\r\n                        <DropDownInput\r\n                            name={\"dropZone\"}\r\n                            value={address.dropZone}\r\n                            label=\"Zone\"\r\n                            errors={error.errorDropZone}\r\n                            type=\"text\"\r\n                            required={true}\r\n                            onChange={getZone}\r\n                            datatype=\"TEXT\"\r\n                            placeholder=\"Zone\"\r\n                            listValues={allZones}\r\n                            selectedName={address.selectedDropZoneLabel}\r\n                            disabled={props.history.location.state?.isContainerEdit}\r\n                        />\r\n                        <TxtInput\r\n                            name={\"dropAddress\"}\r\n                            value={address.dropAddress}\r\n                            label=\"Drop Address\"\r\n                            errors={error.errorDropAddr}\r\n                            type=\"text\"\r\n                            required={true}\r\n                            readonly={true}\r\n                            datatype=\"TEXT\"\r\n                            placeholder=\"Select Location\"\r\n                        />\r\n                        <TxtInput\r\n                            name={\"addressLine1\"}\r\n                            value={address.addressLine1}\r\n                            label=\"Addresss Line 1\"\r\n                            errors={error.errorAddrLine}\r\n                            type=\"text\"\r\n                            required={true}\r\n                            readonly={props.history.location.state?.isContainerEdit}\r\n                            onChange={handleLandMark}\r\n                            datatype=\"TEXT\"\r\n                            placeholder=\"Addresss Line 1\"\r\n                        />\r\n                        {!props.history.location.state?.isContainerEdit && <TxtInput\r\n                            name={\"nickName\"}\r\n                            value={address.addressNickname}\r\n                            label=\"Nick Name\"\r\n                            errors={error.errorNickName}\r\n                            type=\"text\"\r\n                            required={true}\r\n                            onChange={handleAddressNickName}\r\n                            datatype=\"TEXT\"\r\n                            placeholder=\"Nick Name\"\r\n                        />}\r\n                        <TxtInput\r\n                            name={\"contactName\"}\r\n                            value={address.consigneeContactName}\r\n                            label=\"Contact Person\"\r\n                            errors={error.errorName}\r\n                            type=\"text\"\r\n                            required={true}\r\n                            onChange={handleContactName}\r\n                            datatype=\"TEXT\"\r\n                            placeholder=\"Contact Person\"\r\n                        />\r\n                        <TxtInput\r\n                            name={\"phoneNumber\"}\r\n                            value={address.phoneNumber?.split(\"971\")[1]\r\n                                ? address?.phoneNumber?.split(\"971\")[1]\r\n                                : address.phoneNumber}\r\n                            label=\"Phone Number\"\r\n                            errors={error.errorPhone}\r\n                            type=\"tel\"\r\n                            required={true}\r\n                            onChange={handlePhoneNumber}\r\n                            datatype=\"TEXT\"\r\n                            placeholder=\"Phone Number\"\r\n                            max={8}\r\n                        />\r\n                        <TxtInput\r\n                            name={\"mobileNumber\"}\r\n                            value={address?.consigneeContactNumber?.split(\"971\")[1]\r\n                                ? address?.consigneeContactNumber?.split(\"971\")[1]\r\n                                : address.consigneeContactNumber}\r\n                            label=\"Mobile Number\"\r\n                            errors={error.errorMobile}\r\n                            type=\"tel\"\r\n                            required={true}\r\n                            onChange={handleMobileNumber}\r\n                            datatype=\"TEXT\"\r\n                            placeholder=\"Mobile Number\"\r\n                            max={9}\r\n                        />\r\n            </IonCard>\r\n        </IonPage>\r\n    );\r\n}\r\n"],"sourceRoot":""}