{"version":3,"sources":["components/PopUp/SlideUpModal.tsx","components/calendar/Calendar.tsx","components/topMenu/TopMenu.tsx","components/Avatar/RoundedAvatar.tsx","components/PopUp/SearchBoeByDate.tsx","../../../../src/@ionic-native/plugins/social-sharing/index.ts","pages/myBooking/bookingDetails/bookingCard/BookingCard.tsx","pages/myBooking/bookingDetails/BookingDetails.tsx"],"names":["SlideUpModal","showModal","openOrCloseModal","content","isOpen","cssClass","onDidDismiss","Calendar","label","name","value","type","onChange","errors","required","placeholder","pattern","description","icon","max","minDate","className","displayFormat","disabled","onIonChange","e","detail","nextYear","min","todayDate","iconProps","color","TopMenu","props","agentCodeoptions","useState","setValue","topMenuProps","map","item","index","key","size","onClick","clickedOnTopMenu","slot","src","style","fontSize","paddingLeft","paddingRight","transform","rotate","id","selectedText","interface","val","console","log","selected","cancel-text","interfaceOptions","list","opt","RoundedAvatar","avatarParam","bookingCard","backgroundColor","SearchBoeByDate","headerName","fromDate","maxdate","toDate","form","setForm","handleChange","target","moment","Date","format","paramDate","prevState","calenderIcon","class","lastYear","fill","SocialSharing","shareWithOptions","canShareVia","shareViaTwitter","shareViaFacebook","shareViaFacebookWithPasteMessageHint","pasteMessageHint","shareViaInstagram","shareViaWhatsApp","shareViaWhatsAppToReceiver","shareViaSMS","phoneNumber","canShareViaEmail","shareViaEmail","setIPadPopupCoordinates","targetBounds","saveToPhotoAlbum","fileOrFileArray","shareViaWhatsAppToPhone","React","memo","MyBookingParam","ref","setPaymentPage","options","openReceiptForm","bookingNumber","a","appUrl","EndPointURL","httpGetCallWithoutHeader","response","success","share","data","postToExternalSite","url","txnId","InAppBrowser","create","result","on","subscribe","event","checkPaymentSuccess","paymentCompl","checkPaymentStatus","err","includes","close","test","dataItems","status","paymentClick","httpPostCallWithoutHeaderAndBody","transactionId","clickCard","noOfContainers","padStart","noOfTrucks","amount","bookedOn","paymentStatus","stopPropagation","town","yard","delivered","completed","paymentInfo","pageNumber","MyBookingDetails","setResult","disableInfiniteScroll","setDisableInfiniteScroll","title","setTitle","requestStatus","setRequestStatus","paymentPage","setReferenceNumber","agent","setAgent","sortOrderDate","setSortOrderDate","sortOrderAmount","setSortOrderAmount","setShowModal","searchClick","isSearchClick","seachValue","setSearchValue","getTitle","useEffect","Store","getState","CheckUserStatus","user","selectedAgent","fetchData","history","param","match","params","elements","length","$event","complete","onStatusChange","onSearchBooking","onSort","column","sortOrder","onDateSearch","topMenuItems","chevronDownOutline","SearchBooking","onIonBlur","search","Header","action","customBack","backClick","push","showAgent","agentHeader","fullscreen","padding-top","scrollEvents","hidden","modalStatus","margin-top","containersToTown","containersInYard","containersDelivered","containersCompleted","amountPaid","statusCode","userType","bookingDetails","requesterName","requesterContact","importerComments","totalAmount","truckCount","containerCount","cardStatus","bookingStatus","onCardClick","threshold","onIonInfinite","searchNext","loadingText","maxHeight","MainTabs","tab"],"mappings":"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","file":"static/js/15.ccc7463b.chunk.js","sourcesContent":["import { IonModal } from \"@ionic/react\";\r\nimport React from \"react\";\r\nimport \"./SearchBoeByDate.scss\";\r\n\r\ninterface slideUpModalProps {\r\n  showModal;\r\n  openOrCloseModal?: (modalState) => void;\r\n  content?;\r\n  leftHeaderIcon?: any;\r\n}\r\nconst SlideUpModal: React.FC<slideUpModalProps> = ({\r\n  showModal,\r\n  openOrCloseModal,\r\n  content,\r\n}) => {\r\n  return (\r\n    <IonModal\r\n      isOpen={showModal}\r\n      cssClass=\"popup-container\"\r\n      onDidDismiss={() => openOrCloseModal(false)}\r\n    >\r\n      {content}\r\n    </IonModal>\r\n  );\r\n};\r\nexport default SlideUpModal;\r\n","import {\r\n  IonDatetime,\r\n  IonLabel,\r\n  IonSelect,\r\n  IonSelectOption,\r\n  IonText,\r\n} from \"@ionic/react\";\r\nimport React from \"react\";\r\nimport { nextYear, todayDate } from \"../../services/Common\";\r\nimport Icon from \"../Icon\";\r\nimport \"./Calendar.scss\";\r\n\r\ninterface calendarProps {\r\n  label?: string;\r\n  name: any;\r\n  type: any;\r\n  value?: any;\r\n  onChange?: any;\r\n  required?: any;\r\n  errors?: any;\r\n  pattern?: any;\r\n  description?: string;\r\n  placeholder: string;\r\n  icon?: any;\r\n  onBlur?: any;\r\n  minDate?: any;\r\n  className?: any;\r\n  displayFormat?: any;\r\n  max?: any;\r\n  disabled?: boolean;\r\n}\r\n\r\nconst Calendar: React.FC<calendarProps> = ({\r\n  label,\r\n  name,\r\n  type,\r\n  value,\r\n  onChange,\r\n  required,\r\n  errors,\r\n  pattern,\r\n  description,\r\n  placeholder,\r\n  icon,\r\n  max,\r\n  minDate,\r\n  className,\r\n  displayFormat,\r\n  disabled,\r\n}) => {\r\n  // const onInpChange = (e) => {\r\n  //   let val = e.target.value;\r\n  //   let validate;\r\n  //   if (e.target.pattern) {\r\n  //     val = getPatternValue(val, e.target.pattern, \"-\");\r\n  //   }\r\n  //   if (e.target.type === \"email\") {\r\n  //     validate = validateEmail(val);\r\n  //     setvalidation(!validate);\r\n  //   }\r\n  //   if (!readonly) onChange(e, val, validate);\r\n  // };\r\n\r\n  return (\r\n    <>\r\n      <IonDatetime\r\n        className={className}\r\n        // aria-required={true}\r\n        displayFormat={displayFormat}\r\n        value={value}\r\n        onIonChange={(e) => onChange(e, e.detail.value!)}\r\n        placeholder={placeholder}\r\n        max={max ? max : nextYear}\r\n        min={minDate ? minDate : todayDate}\r\n        name={name}\r\n        disabled={disabled ? disabled : false}\r\n      ></IonDatetime>\r\n      {icon && (\r\n        <Icon iconProps={icon} />\r\n        // <IonIcon slot=\"primary\" icon={pulseOutline} />\r\n      )}\r\n\r\n      <div className=\"\">\r\n        {errors && (\r\n          <IonText color=\"danger\" className=\"validation-message\">\r\n            <IonLabel className=\"ion-padding-start\">{errors}</IonLabel>\r\n          </IonText>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default Calendar;\r\n","import {\r\n  IonButton,\r\n  IonIcon,\r\n  IonRow,\r\n  IonSelect,\r\n  IonSelectOption,\r\n} from \"@ionic/react\";\r\nimport React, { useState } from \"react\";\r\nimport \"./TopMenu.scss\";\r\n\r\nexport default function TopMenu(props) {\r\n  const agentCodeoptions = {\r\n    cssClass: \"agent-interface-class\",\r\n  };\r\n  const [value, setValue] = useState<any>({});\r\n\r\n  return (\r\n    <IonRow className=\"horizontal-scroll\">\r\n      <div className=\"filter-buttons\">\r\n        {props.topMenuProps.map((item, index) => (\r\n          <div key={index}>\r\n            {item.type == \"button\" && (\r\n              <IonButton\r\n                className=\"circ-button\"\r\n                size=\"small\"\r\n                onClick={() => item.clickedOnTopMenu()}\r\n              >\r\n                {item.icon && <IonIcon icon={item.icon} slot={item.slot} />}\r\n                {item.src && (\r\n                  <IonIcon\r\n                    slot={item.slot}\r\n                    src={\"/assets/icon/\" + item.src + \".svg\"}\r\n                    style={{\r\n                      fontSize: item.size,\r\n                      paddingLeft: \"5px\",\r\n                      paddingRight: \"5px\",\r\n                      transform:item.rotate\r\n                    }}\r\n                  />\r\n                )}\r\n                {item.name && item.name}\r\n              </IonButton>\r\n            )}\r\n            {item.type == \"dropDown\" && (\r\n              <div id=\"drop-down-css\">\r\n                <fieldset>\r\n                  <IonSelect\r\n                    value={value}\r\n                    selectedText={value.label}\r\n                    interface=\"popover\"\r\n                    onIonChange={(e) => {\r\n                      let val = e.detail.value;\r\n                      setValue(val);\r\n                      console.log(item.selected);\r\n                      item.clickedOnTopMenu(val);\r\n                    }}\r\n                    cancel-text\r\n                    placeholder={item.name}\r\n                    interfaceOptions={agentCodeoptions}\r\n                    className=\"circ-button\"\r\n                  >\r\n                    {item.list.map((opt, index) => {\r\n                      return (\r\n                        <IonSelectOption\r\n                          value={opt}\r\n                          key={index}\r\n                          className=\"select-opt\"\r\n                        >\r\n                          {opt.label}\r\n                        </IonSelectOption>\r\n                      );\r\n                    })}\r\n                  </IonSelect>\r\n                </fieldset>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </IonRow>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Avatar.scss\";\r\ninterface avatarParam {\r\n  color: string;\r\n  name?: string;\r\n  bookingCard?: boolean;\r\n}\r\n\r\nconst RoundedAvatar: React.FC<avatarParam> = (avatarParam) => {\r\n  console.log(avatarParam.color);\r\n  return (\r\n    <div className={avatarParam.bookingCard? \"booking-avatar\" :\"avatar\"} style={{ backgroundColor: `${avatarParam.color}`}}>\r\n      {avatarParam.name}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RoundedAvatar;\r\n","import {\r\n  IonButton,\r\n  IonIcon,\r\n  IonLabel,\r\n  IonListHeader,\r\n  IonModal,\r\n} from \"@ionic/react\";\r\nimport moment from \"moment\";\r\nimport React, { useState } from \"react\";\r\nimport { lastYear, todayDate } from \"../../services/Common\";\r\nimport Calendar from \"../calendar/Calendar\";\r\n\r\ninterface searchBoeByDateProps {\r\n  openOrCloseModal?: (modalStatus, param1?, param2?) => any;\r\n  headerName: string;\r\n}\r\n\r\nconst SearchBoeByDate: React.FC<searchBoeByDateProps> = ({\r\n  openOrCloseModal,\r\n  headerName,\r\n}) => {\r\n  const [form, setForm] = useState<any>({\r\n    fromDate: { value: \"\", minDate: \"\", maxdate: \"\" },\r\n    toDate: { value: todayDate, minDate: \"\", maxdate: \"\" },\r\n  });\r\n  const handleChange = (e: any, value: any) => {\r\n    if (e.target.name === \"fromDate\") {\r\n      setForm({\r\n        ...form,\r\n        toDate: {\r\n          value: value,\r\n          minDate: moment(new Date(value)).format(\"YYYY-MM-DD\"),\r\n          paramDate: moment(new Date(value)).format(\"DD/MM/yyyy\"),\r\n        },\r\n      });\r\n    }\r\n\r\n    setForm((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: {\r\n        ...form[e.target.name],\r\n        paramDate: moment(new Date(value)).format(\"DD/MM/yyyy\"),\r\n        value: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const calenderIcon = {\r\n    name: \"calendar\",\r\n    slot: \"end\",\r\n    class: \"calenderMargin\",\r\n  };\r\n\r\n  function reset() {\r\n    setForm({\r\n      fromDate: { value: todayDate, minDate: \"\", maxdate: \"\" },\r\n      toDate: { value: \"\", minDate: \"\", maxdate: \"\" },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"popup-header\">\r\n        <div className=\"header-title\">\r\n          <span>{headerName}</span>\r\n        </div>\r\n        <div onClick={() => openOrCloseModal(false)}>\r\n          <IonIcon\r\n            class=\"blueCloseIc menuClose blueClose\"\r\n            src=\"assets/icon/close.svg\"\r\n          ></IonIcon>\r\n        </div>\r\n      </div>\r\n      <div className=\"popup-content\">\r\n        <div className=\" twoItems\">\r\n          <Calendar\r\n            name={\"fromDate\"}\r\n            value={form.fromDate.value}\r\n            label=\"Date\"\r\n            // errors={errors.dateAndTime}\r\n            type=\"text\"\r\n            required={true}\r\n            onChange={handleChange}\r\n            placeholder=\"--/--/----\"\r\n            minDate={lastYear}\r\n            icon={calenderIcon}\r\n            className=\"leftCalendar\"\r\n            displayFormat=\"DD/MMM/YYYY\"\r\n            max={todayDate}\r\n          />\r\n          <Calendar\r\n            name={\"toDate\"}\r\n            value={form.toDate.value} //{form.toDate.value}\r\n            label=\"Date\"\r\n            //errors={errors.dateAndTime}\r\n            type=\"text\"\r\n            required={true}\r\n            onChange={handleChange}\r\n            placeholder=\"--/--/----\"\r\n            minDate={form.toDate.minDate}\r\n            icon={calenderIcon}\r\n            className=\"rightCalendar\"\r\n            displayFormat=\"DD/MMM/YYYY\"\r\n            max={todayDate}\r\n          />\r\n        </div>\r\n        <div className=\"twoItems\">\r\n          <IonButton className=\"reset\" fill=\"clear\" onClick={() => reset()}>\r\n            Reset\r\n          </IonButton>\r\n          <IonButton\r\n            className=\"apply-filter\"\r\n            fill=\"clear\"\r\n            onClick={() =>\r\n              openOrCloseModal(\r\n                false,\r\n                form.fromDate.paramDate,\r\n                form.toDate.paramDate\r\n              )\r\n            }\r\n          >\r\n            Apply Filter\r\n          </IonButton>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default SearchBoeByDate;\r\n","import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\n/**\n * @name Social Sharing\n * @premier social-sharing\n * @description\n * Share text, files, images, and links via social networks, sms, and email.\n *\n * For Browser usage check out the Web Share API docs: https://github.com/EddyVerbruggen/SocialSharing-PhoneGap-Plugin#5-web-share-api\n *\n * @usage\n * ```typescript\n * import { SocialSharing } from '@ionic-native/social-sharing/ngx';\n *\n * constructor(private socialSharing: SocialSharing) { }\n *\n * ...\n *\n * // Check if sharing via email is supported\n * this.socialSharing.canShareViaEmail().then(() => {\n *   // Sharing via email is possible\n * }).catch(() => {\n *   // Sharing via email is not possible\n * });\n *\n * // Share via email\n * this.socialSharing.shareViaEmail('Body', 'Subject', ['recipient@example.org']).then(() => {\n *   // Success!\n * }).catch(() => {\n *   // Error!\n * });\n * ```\n */\n@Plugin({\n  pluginName: 'SocialSharing',\n  plugin: 'cordova-plugin-x-socialsharing',\n  pluginRef: 'plugins.socialsharing',\n  repo: 'https://github.com/EddyVerbruggen/SocialSharing-PhoneGap-Plugin',\n  platforms: ['Android', 'Browser', 'iOS', 'Windows', 'Windows Phone'],\n})\n@Injectable()\nexport class SocialSharing extends IonicNativePlugin {\n  /**\n   * Shares using the share sheet\n   * @param message {string} The message you would like to share.\n   * @param subject {string} The subject\n   * @param file {string|string[]} URL(s) to file(s) or image(s), local path(s) to file(s) or image(s), or base64 data of an image. Only the first file/image will be used on Windows Phone.\n   * @param url {string} A URL to share\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 4,\n    errorIndex: 5,\n  })\n  share(message?: string, subject?: string, file?: string | string[], url?: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares using the share sheet with additional options and returns a result object or an error message (requires plugin version 5.1.0+)\n   * @param options {object} The options object with the message, subject, files, url and chooserTitle properties.\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['iOS', 'Android'],\n  })\n  shareWithOptions(options: {\n    message?: string;\n    subject?: string;\n    files?: string | string[];\n    url?: string;\n    chooserTitle?: string;\n  }): Promise<any> {\n    return;\n  }\n\n  /**\n   * Checks if you can share via a specific app.\n   * @param appName {string} App name or package name. Examples: instagram or com.apple.social.facebook\n   * @param message {string}\n   * @param subject {string}\n   * @param image {string}\n   * @param url {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 5,\n    errorIndex: 6,\n    platforms: ['iOS', 'Android'],\n  })\n  canShareVia(appName: string, message?: string, subject?: string, image?: string, url?: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to Twitter\n   * @param message {string}\n   * @param image {string}\n   * @param url {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 3,\n    errorIndex: 4,\n    platforms: ['iOS', 'Android'],\n  })\n  shareViaTwitter(message: string, image?: string, url?: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to Facebook\n   * @param message {string}\n   * @param image {string}\n   * @param url {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 3,\n    errorIndex: 4,\n    platforms: ['iOS', 'Android'],\n  })\n  shareViaFacebook(message: string, image?: string, url?: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to Facebook with a paste message hint\n   * @param message {string}\n   * @param image {string}\n   * @param url {string}\n   * @param pasteMessageHint {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 4,\n    errorIndex: 5,\n    platforms: ['iOS', 'Android'],\n  })\n  shareViaFacebookWithPasteMessageHint(\n    message: string,\n    image?: string,\n    url?: string,\n    pasteMessageHint?: string\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to Instagram\n   * @param message {string}\n   * @param image {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['iOS', 'Android'],\n  })\n  shareViaInstagram(message: string, image: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to WhatsApp\n   * @param message {string}\n   * @param image {string}\n   * @param url {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 3,\n    errorIndex: 4,\n    platforms: ['iOS', 'Android'],\n  })\n  shareViaWhatsApp(message: string, image?: string, url?: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to a WhatsApp Contact\n   * @param receiver {string} Pass phone number on Android, and Addressbook ID (abid) on iOS\n   * @param message {string} Message to send\n   * @param image {string} Image to send (does not work on iOS\n   * @param url {string} Link to send\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 4,\n    errorIndex: 5,\n    platforms: ['iOS', 'Android'],\n  })\n  shareViaWhatsAppToReceiver(receiver: string, message: string, image?: string, url?: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Share via SMS\n   * @param messge {string} message to send\n   * @param phoneNumber {string} Number or multiple numbers seperated by commas\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['iOS', 'Android'],\n  })\n  shareViaSMS(messge: string, phoneNumber: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Checks if you can share via email\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['iOS', 'Android'],\n  })\n  canShareViaEmail(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Share via Email\n   * @param message {string}\n   * @param subject {string}\n   * @param to {string[]}\n   * @param cc {string[]} Optional\n   * @param bcc {string[]} Optional\n   * @param files {string|string[]} Optional URL or local path to file(s) to attach\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    platforms: ['iOS', 'Android'],\n    successIndex: 6,\n    errorIndex: 7,\n  })\n  shareViaEmail(\n    message: string,\n    subject: string,\n    to: string[],\n    cc?: string[],\n    bcc?: string[],\n    files?: string | string[]\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Share via AppName\n   * @param appName {string} App name or package name. Examples: instagram or com.apple.social.facebook\n   * @param message {string}\n   * @param subject {string}\n   * @param image {string}\n   * @param url {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 5,\n    errorIndex: 6,\n    platforms: ['iOS', 'Android'],\n  })\n  shareVia(appName: string, message: string, subject?: string, image?: string, url?: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * defines the popup position before call the share method.\n   * @param targetBounds {string} left, top, width, height\n   */\n  @Cordova({\n    sync: true,\n    platforms: ['iOS'],\n  })\n  setIPadPopupCoordinates(targetBounds: string): void {}\n\n  /**\n   * Save an array of images to the camera roll\n   * @param  {string|string[]} fileOrFileArray Single or multiple files\n   * @returns {Promise<any> }\n   */\n  @Cordova({\n    platforms: ['iOS'],\n  })\n  saveToPhotoAlbum(fileOrFileArray: string | string[]): Promise<any> {\n    return;\n  }\n\n  /**\n   * Shares directly to a WhatsApp Contact with phone number.\n   * @param phone {string} Pass phone number\n   * @param message {string} Message to send\n   * @param fileOrFileArray fileOrFileArray Single or multiple files\n   * @param url {string} Link to send\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 5,\n    errorIndex: 6,\n    platforms: ['iOS', 'Android'],\n  })\n  shareViaWhatsAppToPhone(\n    phone: string,\n    message: string,\n    fileOrFileArray: string | string[],\n    url?: string\n  ): Promise<any> {\n    return;\n  }\n}\n","import React, { useState } from \"react\";\r\nimport {\r\n    IonCard,\r\n    IonCardContent,\r\n    IonCol,\r\n    IonIcon,\r\n    IonLabel,\r\n    IonRow,\r\n    IonText,\r\n} from \"@ionic/react\";\r\nimport { SocialSharing } from \"@ionic-native/social-sharing\";\r\nimport * as EndPointURL from \"../../../../util/EndPointURL\";\r\nimport { httpGetCallWithoutHeader, httpPostCallWithoutHeaderAndBody } from \"../../../../services/EndPointApi\";\r\nimport { InAppBrowser } from \"@ionic-native/in-app-browser\";\r\nimport \"./BookingCard.scss\";\r\nimport RoundedAvatar from \"../../../../components/Avatar/RoundedAvatar\";\r\n\r\ninterface MyBookingParam {\r\n    bookingNumber?: string;\r\n    amount?: string;\r\n    bookedOn?: string;\r\n    noOfContainers?: any;\r\n    // countTitle?: string;\r\n    clickCard?(e: any): void;\r\n    paymentClick?(e: any): void;\r\n    yard?: string;\r\n    town?: string;\r\n    status: string;\r\n    delivered: string;\r\n    completed: string;\r\n    paymentStatus: string;\r\n    noOfTrucks?: string;\r\n}\r\n\r\nconst BookingCard: React.FC<MyBookingParam> = (MyBookingParam) => {\r\n    const [paymentPage, setPaymentPage] = useState(\"\");\r\n    var ref;\r\n    var txnIds;\r\n    var options = \"zoom=no,footer=no,location=no\";\r\n\r\n    const openReceiptForm = async (bookingNumber: string) => {\r\n        let appUrl = EndPointURL.printReceipt + bookingNumber;\r\n        var response = await httpGetCallWithoutHeader(appUrl);\r\n        if (await response.success) {\r\n            SocialSharing.share(\r\n                \"Your Payment Receipt\",\r\n                \"Booking-Receipt-\" + bookingNumber,\r\n                \"data:application/pdf;base64,\" + response.data,\r\n                null\r\n            );\r\n        }\r\n    }\r\n\r\n    async function postToExternalSite(url, txnId) {\r\n        txnIds = txnId;\r\n        var paymentCompl;\r\n        ref = InAppBrowser.create(url, \"_blank\", options);\r\n\r\n        var result = ref.on(\"loadstop\").subscribe(async (event) => {\r\n            paymentCompl = await checkPaymentSuccess(event.url, txnId);\r\n            if (paymentCompl) {\r\n                return await paymentCompl;\r\n            } else {\r\n            }\r\n        });\r\n\r\n        ref.on(\"exit\").subscribe(\r\n            async () => {\r\n                console.log(\"exxxxxxiiiitt\");\r\n                checkPaymentStatus(txnId);\r\n            },\r\n            (err) => {\r\n                console.log(err);\r\n            }\r\n        );\r\n        return await result;\r\n    }\r\n\r\n    async function checkPaymentSuccess(url, txnId) {\r\n        if (url.includes(\"/mobileResponseFromRosoomPaymentApp\")) {\r\n            ref.close();\r\n            var roStatus = await ref.on(\"exit\").subscribe(\r\n                async () => { },\r\n                (err) => {\r\n                    console.log(err);\r\n                }\r\n            );\r\n            var test = await checkPaymentStatus(txnId);\r\n            return await test;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    async function checkPaymentStatus(txnId) {\r\n        var appUrl = EndPointURL.rosoomPaymentStatusCheck + txnId;\r\n        var response = await httpGetCallWithoutHeader(appUrl);\r\n        if (await response.success) {\r\n            if (response.data.data.dataItems[0].status == \"SUCC\") {\r\n                await setPaymentPage(\"success\");\r\n                MyBookingParam.paymentClick(\"success\");\r\n            } else if (response.data.data.dataItems[0].status == \"FAIL\") {\r\n                await setPaymentPage(\"fail\");\r\n                MyBookingParam.paymentClick(\"fail\");\r\n            } else {\r\n                await setPaymentPage(\"pending\");\r\n                MyBookingParam.paymentClick(\"pending\");\r\n            }\r\n            return response;\r\n        }\r\n        return response;\r\n    }\r\n\r\n    async function paymentInfo(bookingNumber) {\r\n        var appUrl = EndPointURL.reinitializeUrl + bookingNumber;\r\n        var response = await httpPostCallWithoutHeaderAndBody(appUrl);\r\n        if (await response.success) {\r\n            var url = await response.data.data.dataItems[0].url;\r\n            var txnId = await response.data.data.dataItems[0].transactionId;\r\n            await postToExternalSite(url, txnId);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div id=\"booking-card\">\r\n            <IonCard className=\"lightShadow\" onClick={MyBookingParam.clickCard}>\r\n                <IonCardContent className=\"card-content\" >\r\n                    <IonRow>\r\n                        <IonCol size=\"5\">\r\n                            <IonText className=\"booking-number-font\">\r\n                                {MyBookingParam?.bookingNumber}\r\n                            </IonText>\r\n                        </IonCol>\r\n                        <IonCol size=\"1\">\r\n                            <IonIcon src=\"/assets/icon/container.svg\" className=\"container-icon\" />\r\n                        </IonCol>\r\n                        <IonCol size=\"3\" className=\"padding-left\">\r\n                            <IonRow>\r\n                                <IonText className=\"data-font\">\r\n                                    {(MyBookingParam?.noOfContainers + \"\").padStart(2, \"0\") ?? 0}\r\n                                </IonText>\r\n                            </IonRow>\r\n                            <IonRow>\r\n                                <IonText className=\"title-font\">Containers</IonText>\r\n                            </IonRow>\r\n                        </IonCol>\r\n                        <IonCol size=\"1\">\r\n                            <IonIcon src=\"/assets/icon/truck-grey.svg\" className=\"container-icon\" />\r\n                        </IonCol>\r\n                        <IonCol size=\"2\" className=\"padding-left\">\r\n                            <IonRow>\r\n                                <IonText className=\"data-font\">\r\n                                    {(MyBookingParam?.noOfTrucks+ \"\").padStart(2, \"0\") ?? 0}\r\n                                </IonText>\r\n                            </IonRow>\r\n                            <IonRow>\r\n                                <IonText className=\"title-font\">Trucks</IonText>\r\n                            </IonRow>\r\n                        </IonCol>\r\n                    </IonRow>\r\n                    <IonRow>\r\n                        <IonCol size=\"5\">\r\n                            <IonRow>\r\n                                <IonText className=\"regular-font\">Amount Paid</IonText>\r\n                            </IonRow>\r\n                            <IonRow>\r\n                                <IonText className=\"data-font\">\r\n                                    {MyBookingParam?.amount} AED\r\n                                </IonText>\r\n                            </IonRow>\r\n                        </IonCol>\r\n                        <IonCol size=\"5\">\r\n                            <IonRow>\r\n                                <IonText className=\"regular-font\">Booked On</IonText>\r\n                            </IonRow>\r\n                            <IonRow>\r\n                                <IonText className=\"data-font\">\r\n                                    {MyBookingParam?.bookedOn}\r\n                                </IonText>\r\n                            </IonRow>\r\n                        </IonCol>\r\n                        <IonCol size=\"2\">\r\n                            <IonRow className=\"ion-justify-content-center\">\r\n                                {(MyBookingParam?.paymentStatus !== \"PPAY\" && MyBookingParam?.paymentStatus !== \"FPAY\") ? (<IonIcon\r\n                                    className= \"booking-receipt-icon\"\r\n                                    src=\"assets/icon/document-share.svg\"\r\n                                    onClick={(e) => {\r\n                                            openReceiptForm(MyBookingParam?.bookingNumber);\r\n                                    }}\r\n                                />) : (\r\n                                <IonIcon\r\n                                    className=\"booking-receipt-icon\"\r\n                                    src=\"assets/icon/document-share-disable.svg\"\r\n                                    onClick={(e) => { e.stopPropagation() }}\r\n                                />)}\r\n                            </IonRow>\r\n                        </IonCol>\r\n                    </IonRow>\r\n                </IonCardContent>\r\n                {MyBookingParam?.paymentStatus === \"TRANSCONF\" && (\r\n                    <IonCardContent className=\"container-status-row\">\r\n                        <IonRow>\r\n                            <IonCol size=\"4\">\r\n                                <IonRow>\r\n                                    <IonCol size=\"8\">\r\n                                        In Progress\r\n                                    </IonCol>\r\n                                    <IonCol size=\"4\">\r\n                                        <div className=\"avatar\" style={{backgroundColor: \"#FF9F5F\"}}>\r\n                                            {((MyBookingParam?.town + MyBookingParam?.yard) + \"\").padStart(2, \"0\") ?? 0}\r\n                                        </div>\r\n                                    </IonCol>\r\n                                </IonRow>\r\n                            </IonCol>\r\n                            <IonCol size=\"4\">\r\n                                <IonRow>\r\n                                    <IonCol size=\"8\" style={{paddingLeft:'15px'}}>\r\n                                        Delivered\r\n                                    </IonCol>\r\n                                    <IonCol size=\"4\">\r\n                                        <div className=\"avatar\" style={{backgroundColor: \"#76BD7D\"}}>\r\n                                            {(MyBookingParam?.delivered + \"\").padStart(2, \"0\") ?? 0}\r\n                                        </div>\r\n                                    </IonCol>\r\n                                </IonRow>\r\n\r\n                            </IonCol>\r\n                            <IonCol size=\"4\">\r\n                                <IonRow>\r\n                                    <IonCol size=\"8\" style={{paddingLeft:'15px'}}>\r\n                                        Completed\r\n                                    </IonCol>\r\n                                    <IonCol size=\"4\">\r\n                                        <div className=\"avatar\" style={{backgroundColor: \"#168FE4\"}}>\r\n                                            {(MyBookingParam?.completed + \"\").padStart(2, \"0\") ?? 0}\r\n                                        </div>\r\n                                    </IonCol>\r\n                                </IonRow>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    </IonCardContent>\r\n                )}\r\n                {MyBookingParam?.paymentStatus === \"FPAY\" && (\r\n                    <IonCardContent className=\"payment-fail-card-content\">\r\n                        <IonRow>\r\n                            <IonCol size=\"1\">\r\n                                <RoundedAvatar color={\"#E91818\"} bookingCard={true} />\r\n                            </IonCol>\r\n                            <IonCol size=\"7\">\r\n                                <IonLabel className=\"payment-text\">Payment Failed</IonLabel>\r\n                            </IonCol>\r\n                            <IonCol\r\n                                onClick={() => paymentInfo(MyBookingParam?.bookingNumber)}\r\n                            >\r\n                                <IonIcon\r\n                                    className=\"repayment-icon\"\r\n                                    src=\"assets/icon/refresh.svg\"\r\n                                />\r\n                                <IonLabel className=\"repayment-text\">Re-initiate</IonLabel>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    </IonCardContent>\r\n                )}\r\n                {MyBookingParam?.paymentStatus === \"PPAY\" && (\r\n                    <IonCardContent className=\"payment-pending-card-content\">\r\n                        <IonRow>\r\n                            <IonCol size=\"1\">\r\n                                <RoundedAvatar color={\"#FFB200\"} bookingCard={true} />\r\n                            </IonCol>\r\n                            <IonCol>\r\n                                <IonLabel className=\"payment-text\">\r\n                                    Waiting for Payment confirmation\r\n                                </IonLabel>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    </IonCardContent>\r\n                )}\r\n                 {MyBookingParam?.paymentStatus === \"completed\" && (\r\n                    <IonCardContent className=\"payment-pending-card-content\">\r\n                        <IonRow>\r\n                            <IonCol size=\"1\">\r\n                                <RoundedAvatar color={\"#1360D2\"} bookingCard={true} />\r\n                            </IonCol>\r\n                            <IonCol>\r\n                                <IonLabel className=\"payment-text\">\r\n                                    MT IN Delivered\r\n                                </IonLabel>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    </IonCardContent>\r\n                )}\r\n                {(MyBookingParam?.paymentStatus === \"SUCC\") && (\r\n                    <IonCardContent className=\"payment-pending-card-content\">\r\n                        <IonRow>\r\n                            <IonCol size=\"1\">\r\n                                <RoundedAvatar color={\"#FFC350\"} bookingCard={true} />\r\n                            </IonCol>\r\n                            <IonCol>\r\n                                <IonLabel className=\"payment-text\">\r\n                                    Transporter Pending\r\n                                </IonLabel>\r\n                            </IonCol>\r\n                        </IonRow>\r\n                    </IonCardContent>\r\n                )}\r\n            </IonCard>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default React.memo(BookingCard);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport {\r\n  IonContent,\r\n  IonPage,\r\n  IonInfiniteScroll,\r\n  IonInfiniteScrollContent,\r\n  IonRow,\r\n  IonGrid,\r\n  IonToolbar,\r\n  IonInput,\r\n  IonButtons,\r\n  IonIcon,\r\n  IonLabel,\r\n  IonCol\r\n} from \"@ionic/react\";\r\nimport BookingCard from \"./bookingCard/BookingCard\";\r\nimport * as EndPointURL from \"../../../util/EndPointURL\";\r\nimport { httpGetCallWithoutHeader } from \"../../../services/EndPointApi\";\r\nimport Header from \"../../../components/Header\";\r\nimport Store from \"../../../redux/Store\";\r\nimport { chevronDownOutline, search } from \"ionicons/icons\";\r\nimport TopMenu from \"../../../components/topMenu/TopMenu\";\r\n// import PaymentSuccess from \"./PaymentSuccess\";\r\n// import PaymentFailed from \"./PaymentFailed\";\r\n// import PaymentPending from \"./PaymentPending\";\r\n// import Footer from \"./Footer\";\r\nimport \"./BookingDetails.scss\"\r\nimport MainTabs from \"../../MainTabs\";\r\nimport SlideUpModal from \"../../../components/PopUp/SlideUpModal\";\r\nimport SearchBoeByDate from \"../../../components/PopUp/SearchBoeByDate\";\r\n\r\nvar pageNumber = 0;\r\nexport default function MyBookingDetails(props) {\r\n\r\n  const [result, setResult] = useState([]);\r\n  const [disableInfiniteScroll, setDisableInfiniteScroll] = useState<boolean>(\r\n    false\r\n  );\r\n  const [title, setTitle] = useState(\"\");\r\n  const [requestStatus, setRequestStatus] = useState(\"\");\r\n  const [paymentPage, setPaymentPage] = useState(\"\");\r\n  const [referenceNumber, setReferenceNumber] = useState();\r\n  const [agent, setAgent] = useState();\r\n  const [sortOrderDate, setSortOrderDate] = useState<string>(\"DESC\");\r\n  const [sortOrderAmount, setSortOrderAmount] = useState<string>(\"ASC\");\r\n  const [showModal, setShowModal] = useState<boolean>(false);\r\n  const [searchClick, isSearchClick] = useState<boolean>(false);\r\n  const [seachValue, setSearchValue] = useState<string>(\"\");\r\n\r\n  const getTitle = (status) => {\r\n    switch (status) {\r\n      case \"ALL\":\r\n        setTitle(\"ALL BOOKINGS\");\r\n        break;\r\n      case \"PODUPL\":\r\n        setTitle(\"VERIFY POD'S\");\r\n        break;\r\n      case \"INVSUBMT\":\r\n        setTitle(\"VERIFY INVOICES\");\r\n        break;\r\n      default:\r\n        setTitle(\"\");\r\n    }\r\n  };\r\n\r\n  const onCardClick = (item) => {\r\n    var userType = Store.getState().CheckUserStatus.user.userType;\r\n    let bookingDetails = {\r\n      bookingNumber: item?.bookingNumber,\r\n      requesterName: item?.requesterName,\r\n      requesterContact: item?.requesterContact,\r\n      importerComments: item?.importerComments,\r\n      totalAmount: item?.amountPaid,\r\n      truckCount: item?.noOfTrucks,\r\n      containerCount: item?.noOfContainers,\r\n      userType: userType,\r\n      cardStatus: props.match.params.status,\r\n      bookingStatus: item?.statusCode\r\n    };\r\n    props.history.push(\"/containerDetails\", bookingDetails);\r\n  };\r\n\r\n  useEffect(() => {\r\n    Store.subscribe(() => {\r\n      setAgent(Store.getState().CheckUserStatus.user.selectedAgent);\r\n    });\r\n    console.log(\"Store\", Store.getState().CheckUserStatus.user.selectedAgent)\r\n    var parameter = \"\";\r\n    pageNumber = 0;\r\n    fetchData(parameter);\r\n  }, [agent]);\r\n\r\n  const footerProps = {\r\n    locationProps: props.history,\r\n  };\r\n\r\n  const fetchData = async (param, ...isFilter) => {\r\n    console.log(isFilter[0])\r\n    const key = props.match.params.status;\r\n    setRequestStatus(key);\r\n    getTitle(key);\r\n    if (!param) {\r\n      param = key == \"ALL\" ?\r\n        `sortOrder=${sortOrderDate}&sortCol=1&pgSize=10&pgNo=0&locale=en` :\r\n        `statusCode=${key}&sortOrder=${sortOrderDate}&sortCol=1&pgSize=10&pgNo=0&locale=en`;\r\n    }\r\n\r\n    let appUrl = `${EndPointURL.bookingDetails}&${param}`;\r\n\r\n    var response = await httpGetCallWithoutHeader(appUrl);\r\n    if (await response.success) {\r\n      isFilter[0] ? setResult([...response.data.elements]) : setResult([...result, ...response.data.elements]);\r\n      console.log(response.data.elements);\r\n      setDisableInfiniteScroll(response.data.elements.length < 10);\r\n    }\r\n  }\r\n\r\n  async function searchNext($event: CustomEvent<void>) {\r\n    pageNumber = pageNumber + 1;\r\n    const key = props.match.params.status;\r\n    var param = `sortOrder=${sortOrderDate}&sortCol=1&pgSize=10&pgNo=${pageNumber}&locale=en`;\r\n    await fetchData(param);\r\n    ($event.target as HTMLIonInfiniteScrollElement).complete();\r\n  }\r\n\r\n  const goBack = () => {\r\n    props.history.push(\"/tabs/status\");\r\n  }\r\n\r\n  const onStatusChange = async (status) => {\r\n    let param = `status=${status}&pgSize=10&pgNo=0&locale=en`;\r\n    await fetchData(param, true);\r\n  }\r\n\r\n  const onSearchBooking = async (bookingNumber) => {\r\n    if(seachValue !== \"\") {\r\n      let param = `bookingNumber=${bookingNumber}&pgSize=10&pgNo=0&locale=en`;\r\n      await fetchData(param, true);\r\n    }\r\n    \r\n  }\r\n\r\n  const onSort = async (column) => {\r\n    let sortOrder;\r\n    if (column == 1) {\r\n      sortOrder = sortOrderDate == \"ASC\" ? \"DESC\" : \"ASC\";\r\n      setSortOrderDate(sortOrder);\r\n    } else {\r\n      sortOrder = sortOrderAmount == \"ASC\" ? \"DESC\" : \"ASC\";\r\n      setSortOrderAmount(sortOrder);\r\n    }\r\n\r\n    let param = `sortOrder=${sortOrder}&sortCol=${column}&pgSize=10&pgNo=0&locale=en`;\r\n    await fetchData(param, true);\r\n  }\r\n\r\n  const onDateSearch = async (fromDate, toDate) => {\r\n    if (fromDate && toDate) {\r\n      let param = `fromDate=${fromDate}&toDate=${toDate}&pgSize=10&pgNo=0&locale=en`;\r\n      await fetchData(param, true);\r\n    }\r\n\r\n  }\r\n\r\n  const topMenuItems = [\r\n    {\r\n      name: \"\",\r\n      src: \"filter\",\r\n      slot: \"\",\r\n      type: \"button\",\r\n      clickedOnTopMenu: () => {\r\n        setShowModal(true);\r\n      },\r\n    },\r\n    {\r\n      name: \"Booked Status\",\r\n      icon: chevronDownOutline,\r\n      slot: \"end\",\r\n      type: \"dropDown\",\r\n      list: [\r\n        { label: \"Pending Payment\", value: \"PPAY\" },\r\n        { label: \"Failed Payment\", value: \"FPAY\" },\r\n        { label: \"Transporter Pending\", value: \"SUCC\" },\r\n        { label: \"Transporter Confirmed\", value: \"TRANSCONF\" },\r\n        { label: \"MT IN Delivered\", value: \"FPAY\" }\r\n      ],\r\n      clickedOnTopMenu: (e) => {\r\n        console.log(\"clicked2\", e)\r\n        onStatusChange(e.value);\r\n      },\r\n    },\r\n    {\r\n      name: \"Booked on\",\r\n      slot: \"start\",\r\n      src: \"filter-down-arrow\",\r\n      rotate: sortOrderDate == \"ASC\" ? \"rotate(180deg)\" : \"\",\r\n      size: \"0.7rem\",\r\n      type: \"button\",\r\n      clickedOnTopMenu: () => onSort(1),\r\n    },\r\n    {\r\n      name: \"Amount\",\r\n      slot: \"start\",\r\n      src: \"filter-down-arrow\",\r\n      rotate: sortOrderAmount == \"ASC\" ? \"rotate(180deg)\" : \"\",\r\n      size: \"0.7rem\",\r\n      type: \"button\",\r\n      clickedOnTopMenu: () => onSort(5),\r\n    },\r\n  ];\r\n\r\n  function SearchBooking() {\r\n    return (\r\n      <div>\r\n        <IonToolbar className=\"border-bottom-booking\">\r\n          <IonInput\r\n            placeholder={\"Search with Booking Number\"}\r\n            type=\"search\"\r\n            value={seachValue}\r\n            className=\"input-box\"\r\n            onIonBlur={() => onSearchBooking(seachValue)}\r\n            onIonChange={(e) => setSearchValue(e.detail.value)}\r\n          ></IonInput>\r\n          {seachValue == \"\" ? (<IonButtons slot=\"end\" className=\"search-icon \">\r\n            <IonIcon slot=\"icon-only\" icon={search} />\r\n          </IonButtons>) : (\r\n            <IonButtons slot=\"end\" >\r\n              <IonLabel className=\"search-clear\" onClick={() => {\r\n                setSearchValue(\"\");\r\n                fetchData(\"\");\r\n              }}>Clear</IonLabel>\r\n            </IonButtons>)}\r\n        </IonToolbar>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <IonPage id=\"booking-page\">\r\n      <Header label={title} action=\"search\" customBack={true} backClick={goBack} showAgent={true} agentHeader={true}\r\n        searchClick={() => {\r\n          isSearchClick(!searchClick)\r\n        }} />\r\n      <IonContent\r\n        fullscreen padding-top\r\n        scrollEvents={true}\r\n        hidden={paymentPage !== \"\"}\r\n        className=\"page-content\"\r\n      >\r\n        <SlideUpModal\r\n          showModal={showModal}\r\n          openOrCloseModal={(status) => setShowModal(status)}\r\n          content={<SearchBoeByDate\r\n            openOrCloseModal={(modalStatus, fromDate, toDate) => {\r\n              setShowModal(modalStatus);\r\n              onDateSearch(fromDate, toDate);\r\n            }}\r\n            headerName=\"Booked On Date Filter\" />}\r\n        />\r\n        <IonRow className=\"horizontal-scroll\">\r\n          {searchClick ? (\r\n            <SearchBooking />\r\n          ) : (\r\n            <TopMenu topMenuProps={topMenuItems} />\r\n          )}\r\n        </IonRow>\r\n        <div className=\"decl-count\">\r\n          {\" \"}\r\n          Displaying {result.length} bookings\r\n        </div>\r\n        <IonGrid margin-top>\r\n          {result.map((item, id) => (\r\n            <BookingCard\r\n              status={requestStatus}\r\n              key={id}\r\n              town={item?.containersToTown}\r\n              yard={item?.containersInYard}\r\n              delivered={item?.containersDelivered}\r\n              completed={item?.containersCompleted}\r\n              bookingNumber={item?.bookingNumber}\r\n              amount={item?.amountPaid ?? \"0 AED\"}\r\n              bookedOn={item?.bookedOn}\r\n              noOfContainers={item?.noOfContainers}\r\n              // countTitle={title}\r\n              paymentStatus={item?.statusCode}\r\n              noOfTrucks={item.noOfTrucks}\r\n              clickCard={() => onCardClick(item)}\r\n              paymentClick={(e) => {\r\n                setPaymentPage(e);\r\n                setReferenceNumber(item?.bookingNumber);\r\n                console.log('paymentPage', e)\r\n              }}\r\n            />\r\n          ))}\r\n        </IonGrid>\r\n        <IonInfiniteScroll\r\n          threshold=\"100px\"\r\n          disabled={disableInfiniteScroll}\r\n          onIonInfinite={(e: CustomEvent<void>) => searchNext(e)}\r\n        >\r\n          <IonInfiniteScrollContent loadingText=\"Loading more...\"></IonInfiniteScrollContent>\r\n        </IonInfiniteScroll>\r\n      </IonContent>\r\n      {/* <IonContent  fullscreen hidden={paymentPage == \"\"}>\r\n          <div hidden={paymentPage !== \"success\"}>\r\n            <PaymentSuccess \r\n            referenceNumber={referenceNumber}\r\n            locationProps={props.history}/>\r\n          </div>\r\n          <div hidden={paymentPage !== \"fail\"}>\r\n            <PaymentFailed \r\n            referenceNumber={referenceNumber}\r\n            locationProps={props.history}/>\r\n          </div>\r\n          <div hidden={paymentPage !== \"pending\"}>\r\n            <PaymentPending\r\n              hidden={true}\r\n              referenceNumber={referenceNumber}\r\n              locationProps={props.history}\r\n            />\r\n          </div>\r\n          </IonContent> */}\r\n      <IonContent style={{ maxHeight: \"86px\" }}>\r\n        <MainTabs tab=\"status\" />\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n}\r\n"],"sourceRoot":""}