{"version":3,"sources":["components/Icon.tsx","util/Utilities.ts","components/txtinput/TxtInput.tsx","pages/profile/Profile.tsx"],"names":["Icon","props","classes","useStyles","propsIcon","iconProps","src","name","style","zoom","className","class","slot","createUseStyles","zoom12","slotEnd","position","right","bottom","calenderMargin","zoom3","slotStart","absolutePosition","lastIcon","isEmpty","data","trim","isValid","dataType","delimiter","replaceAll","RegExp","REGEX_MAP","test","getPatternValue","pattern","cleaned","finalstr","ctr","i","length","validateEmail","mail","validatePhone","number","validateMobile","addTimeToDateTime","date","timeToAdd","d2","Date","setMinutes","getMinutes","convertToMillSeconds","interval","h","m","timeParts","split","TxtInput","label","type","value","onChange","required","errors","datatype","description","placeholder","icon","onBlur","readonly","contactForm","max","useState","validation","setvalidation","width","padding","spellCheck","autocapitalize","onKeyDown","e","key","preventDefault","onIonChange","validate","val","target","clearInput","autocomplete","onIonBlur","maxlength","color","Profile","firstName","lastName","email","mobile","submitted","valid","form","setForm","setErrors","login","errs","console","log","handleChange","id","noValidate","onSubmit","autoComplete","onClick","arrowForwardOutline"],"mappings":"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","file":"static/js/18.8d463f3b.chunk.js","sourcesContent":["import React from \"react\";\nimport { IonIcon } from \"@ionic/react\";\nimport \"./Icon.css\";\nimport { createUseStyles } from \"react-jss\";\n\nexport default function Icon(props: any) {\n  const classes = useStyles();\n  var propsIcon = props.iconProps; // \"inputIcon\"\n  return (\n    <IonIcon\n      src={\"assets/icon/\" + propsIcon.name + \".svg\"}\n      style={{ zoom: propsIcon.zoom }}\n      className={\n        propsIcon.class\n          ? classes[propsIcon.class] + \" \" + propsIcon.class\n          : // : propsIcon.login\n            // ? classes[propsIcon.class]\n            // : propsIcon.slot === \"end\"\n            // ? classes[propsIcon.class]\n            \"\"\n      }\n      slot={propsIcon.slot}\n    ></IonIcon>\n  );\n}\nconst useStyles = createUseStyles({\n  zoom12: {\n    zoom: 1.4,\n  },\n  slotEnd: {\n    position: \"absolute\",\n    right: 0,\n    zoom: 1.5,\n    bottom: \"1px\",\n  },\n  calenderMargin: {\n    zoom: 1.4,\n    //marginRight: \"0.5rem\",\n  },\n  zoom3: {\n    zoom: 3,\n  },\n  slotStart: {\n    position: \"absolute\",\n    zoom: 1.5,\n  },\n  absolutePosition: {\n    position: \"absolute\",\n  },\n  lastIcon: {\n    zoom: \"1.5\",\n    right: \"3px\",\n    position: \"relative\",\n  },\n});\n","import { REGEX_MAP } from \"./Constants\";\r\nimport moment from \"moment\";\r\nconst milliseconds = (h, m, s) => ((h * 60 * 60 + m * 60 + s) * 1000);\r\n\r\nvar disabledHr;\r\nexport const isEmpty = (data: any) => {\r\n  if(data===null){\r\n  data=\"\"}\r\n  return data.trim() === \"\";\r\n};\r\n\r\nexport const isValid = (dataType: any, data: any, delimiter?: string) => {\r\n  if (delimiter) {\r\n    data = data.replaceAll(delimiter, \"\");\r\n  }\r\n  return new RegExp(REGEX_MAP[dataType]).test(data);\r\n};\r\n\r\nexport const getPatternValue = (data: any, pattern: any, delimiter: any) => {\r\n  if (!data || !pattern || !delimiter) {\r\n    return data;\r\n  }\r\n  var cleaned = data.replaceAll(\" \", \"\").replaceAll(delimiter, \"\");\r\n  let finalstr = \"\";\r\n  let ctr = 0;\r\n\r\n  for (let i = 0; i < pattern.length && ctr < cleaned.length; i++) {\r\n    if (pattern[i] != delimiter) {\r\n      finalstr = finalstr + cleaned[ctr];\r\n      ctr = ctr + 1;\r\n    } else {\r\n      finalstr = finalstr + delimiter;\r\n    }\r\n  }\r\n  return finalstr;\r\n};\r\n\r\nexport const stringToColour = function(str) {\r\n  var hash = 0;\r\n  for (var i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n  var colour = '#';\r\n  for (var i = 0; i < 3; i++) {\r\n      var value = (hash >> (i * 8)) & 0xFF;\r\n      colour += ('00' + value.toString(16)).substr(-2);\r\n  }\r\n  return colour;\r\n}\r\n\r\nexport const validateEmail=(mail) =>{\r\n  return new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$/i).test(mail);\r\n}\r\n\r\nexport const validatePhone=(number) =>{\r\n  let regexp =  new RegExp(\"^\\\\d{8}$\");\r\n  var nameTest = regexp.test(number);\r\n  return nameTest;\r\n}\r\n\r\nexport const validateMobile=(number) =>{\r\n  let regexp =  new RegExp(\"^\\\\d{9}$\");\r\n  var nameTest = regexp.test(number);\r\n  return nameTest;\r\n}\r\n\r\nexport function addTimeToDateTime(date: any, timeToAdd: any) {\r\n  var d2 = new Date(date);\r\n  return new Date(d2.setMinutes(date.getMinutes() + timeToAdd));\r\n  //return updatedDate;\r\n}\r\n\r\nexport function setDisabledMinHr(disableHr) {\r\n  //testFun(testContent);\r\n  var disabledTime = addTimeToDateTime(new Date(), 1 * disableHr * 60 || 1);\r\n  disabledHr = disabledTime.toISOString();\r\n  return disabledHr;\r\n}\r\n\r\nexport function getDisabledMinHr() {\r\n  return disabledHr;\r\n}\r\n\r\nexport const convertToMillSeconds = (interval: string) => {\r\n  let timeParts = interval.split(\":\");\r\n  let result = milliseconds(timeParts[0], timeParts[1], 0);\r\n  // days\r\n  return result;\r\n}\r\n","import { IonIcon, IonInput, IonLabel, IonText } from \"@ionic/react\";\r\nimport { personOutline, pulseOutline } from \"ionicons/icons\";\r\nimport { TextInputType } from \"../../util/DataTypes\";\r\nimport React, { useState } from \"react\";\r\nimport \"./TxtInput.scss\";\r\nimport { getPatternValue, isValid, validateEmail } from \"../../util/Utilities\";\r\nimport { connect } from \"../../data/connect\";\r\nimport Icon from \"../Icon\";\r\ninterface TxtInputProps {\r\n  label?: string;\r\n  name: any;\r\n  type: any;\r\n  value?: any;\r\n  onChange?: any;\r\n  required?: any;\r\n  errors?: any;\r\n  pattern?: any;\r\n  datatype?: TextInputType;\r\n  description?: string;\r\n  placeholder: string;\r\n  icon?: any;\r\n  onBlur?: any;\r\n  readonly?: any;\r\n  contactForm?: any;\r\n  max?: number;\r\n}\r\nconst TxtInput: React.FC<TxtInputProps> = ({\r\n  label,\r\n  name,\r\n  type,\r\n  value,\r\n  onChange,\r\n  required,\r\n  errors,\r\n  pattern,\r\n  datatype,\r\n  description,\r\n  placeholder,\r\n  icon,\r\n  onBlur,\r\n  readonly,\r\n  contactForm,\r\n  max,\r\n}) => {\r\n  const [validation, setvalidation] = useState(false);\r\n  const checkKey = (e) => {\r\n    if (e.key.length > 1) return true;\r\n    setvalidation(!isValid(datatype, e.key));\r\n    if (!isValid(datatype, e.key)) {\r\n      e.preventDefault();\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onInpChange = (e) => {\r\n    let val = e.target.value;\r\n    let validate;\r\n    if (e.target.pattern) {\r\n      val = getPatternValue(val, e.target.pattern, \"-\");\r\n    }\r\n    if (e.target.type === \"email\") {\r\n      validate = validateEmail(val);\r\n      setvalidation(!validate);\r\n    }\r\n    if (!readonly) onChange(e, val, validate);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"form-element-group\"\r\n      style={contactForm ? { width: \"350px\", padding: \"0\" } : {}}\r\n    >\r\n      <fieldset>\r\n        <legend>{label}</legend>\r\n        {type === \"tel\" ? (\r\n          <IonLabel className=\"regularFont-textInput\">971</IonLabel>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <IonInput\r\n          name={name}\r\n          type={type}\r\n          value={value}\r\n          spellCheck={false}\r\n          autocapitalize=\"off\"\r\n          //readonly={readonly}\r\n          onKeyDown={checkKey}\r\n          onIonChange={onInpChange}\r\n          clearInput={true}\r\n          required={required}\r\n          autocomplete=\"off\"\r\n          pattern={pattern}\r\n          placeholder={placeholder}\r\n          className=\"textInput\"\r\n          onIonBlur={(e) => {\r\n            if (onBlur) onBlur(e);\r\n            else {\r\n            }\r\n          }}\r\n          maxlength={max}\r\n          readonly={readonly ? readonly : false}\r\n        >\r\n          {icon && (\r\n            <Icon iconProps={icon} />\r\n            // <IonIcon slot=\"primary\" icon={pulseOutline} />\r\n          )}\r\n        </IonInput>\r\n      </fieldset>\r\n\r\n      <div className=\"\">\r\n        {errors && (\r\n          <IonText color=\"danger\" className=\"validation-message\">\r\n            <IonLabel className=\"ion-padding-start validation-message\">\r\n              {errors}\r\n            </IonLabel>\r\n          </IonText>\r\n        )}\r\n      </div>\r\n      {validation && description && (\r\n        <IonText color=\"danger\" className=\"validation-message\">\r\n          <IonLabel className=\"ion-padding-start validation-message\">\r\n            {description}\r\n          </IonLabel>\r\n        </IonText>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TxtInput;\r\n","import { IonContent, IonIcon, IonList, IonPage } from \"@ionic/react\";\r\nimport { arrowForwardOutline } from \"ionicons/icons\";\r\nimport React, { useState } from \"react\";\r\nimport TxtInput from \"../../components/txtinput/TxtInput\";\r\nimport { isEmpty } from \"../../util/Utilities\";\r\nimport \"./Profile.scss\";\r\n\r\nvar objectdefn = {\r\n  firstName: {},\r\n};\r\nfunction Profile() {\r\n  const [form, setForm] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    mobile: \"\",\r\n    submitted: false,\r\n    valid: false,\r\n  });\r\n  const [errors, setErrors] = useState<any>({});\r\n  //   let errors: any = {};\r\n\r\n  const login = () => {\r\n    let errs: any = {};\r\n    console.log(\"login\");\r\n    if (isEmpty(form.firstName)) {\r\n      errs.firstName = \"First Name is required\";\r\n    }\r\n    if (isEmpty(form.lastName)) {\r\n      errs.lastName = \"Last Name is required\";\r\n    }\r\n\r\n    if (isEmpty(form.email)) {\r\n      errs.email = \"Email is required\";\r\n    }\r\n    console.log(errs);\r\n    setErrors(errs);\r\n  };\r\n  const handleChange = (e: any, value: any) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: value,\r\n    });\r\n  };\r\n  return (\r\n    <IonPage id=\"profilePage\">\r\n      <IonContent>\r\n        <div className=\"main-container\">\r\n          <div className=\"login-logo\">\r\n            {/* <img src=\"assets/img/appicon.svg\" alt=\"Ionic logo\" /> */}\r\n          </div>\r\n          <div className=\"form-content\">\r\n            <div className=\"login-box-header\"></div>\r\n            <form noValidate onSubmit={login} autoComplete=\"off\">\r\n              <IonList className=\"form-section\">\r\n                <div className=\"login-header\">\r\n                  Profile\r\n                  <hr />\r\n                </div>\r\n                <TxtInput\r\n                  name={\"firstName\"}\r\n                  value={form.firstName}\r\n                  label=\"First Name\"\r\n                  errors={errors.firstName}\r\n                  type=\"text\"\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                  datatype=\"TEXT\"\r\n                  placeholder=\"First Name\"\r\n                />\r\n\r\n                <TxtInput\r\n                  name={\"lastName\"}\r\n                  value={form.lastName}\r\n                  label=\"Last Name\"\r\n                  errors={errors.lastName}\r\n                  type=\"text\"\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Last Name\"\r\n                />\r\n\r\n                <TxtInput\r\n                  name={\"email\"}\r\n                  value={form.email}\r\n                  label=\"Email\"\r\n                  errors={errors.email}\r\n                  type=\"email\"\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                  description=\"Please enter email\"\r\n                  placeholder=\"Email\"\r\n                />\r\n\r\n                <TxtInput\r\n                  name={\"mobile\"}\r\n                  value={form.mobile}\r\n                  label=\"Mobile\"\r\n                  errors={errors.mobile}\r\n                  type=\"text\"\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                  datatype=\"TEL_NUM\"\r\n                  pattern=\"###-##-#######\"\r\n                  description=\"Tel Format 971-xx-xxxxxxx\"\r\n                  placeholder=\"Mobile\"\r\n                />\r\n              </IonList>\r\n              <div className=\"button-div\">\r\n                <div className=\"button-holder\" onClick={login}>\r\n                  <IonIcon slot=\"icon-only\" icon={arrowForwardOutline} />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n"],"sourceRoot":""}