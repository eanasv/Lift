{"version":3,"sources":["util/Utilities.ts","components/txtinput/TxtInput.tsx","pages/confirmDetails/ConfirmDetails.tsx"],"names":["isEmpty","data","trim","isValid","dataType","delimiter","replaceAll","RegExp","REGEX_MAP","test","getPatternValue","pattern","cleaned","finalstr","ctr","i","length","validateEmail","mail","validatePhone","number","validateMobile","addTimeToDateTime","date","timeToAdd","d2","Date","setMinutes","getMinutes","convertToMillSeconds","interval","h","m","timeParts","split","TxtInput","label","name","type","value","onChange","required","errors","datatype","description","placeholder","icon","onBlur","readonly","contactForm","max","useState","validation","setvalidation","className","style","width","padding","spellCheck","autocapitalize","onKeyDown","e","key","preventDefault","onIonChange","validate","val","target","clearInput","autocomplete","onIonBlur","maxlength","iconProps","color","ConfirmDetails","confirmDetailsProps","location","state","form","setForm","setvalidate","setErrors","addOrUpdateuserDetails","a","errs","firstName","lastName","email","mobileNumber","landLineNumber","confirmDetails","confirmUserDetails","EndPoints","response","success","history","push","direction","errorGeneral","message","handleChange","id","src","alt","noValidate","onSubmit","autoComplete","userName","onClick","slot","arrowForwardOutline"],"mappings":"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","file":"static/js/20.b1d3a254.chunk.js","sourcesContent":["import { REGEX_MAP } from \"./Constants\";\r\nimport moment from \"moment\";\r\nconst milliseconds = (h, m, s) => ((h * 60 * 60 + m * 60 + s) * 1000);\r\n\r\nvar disabledHr;\r\nexport const isEmpty = (data: any) => {\r\n  if(data===null){\r\n  data=\"\"}\r\n  return data.trim() === \"\";\r\n};\r\n\r\nexport const isValid = (dataType: any, data: any, delimiter?: string) => {\r\n  if (delimiter) {\r\n    data = data.replaceAll(delimiter, \"\");\r\n  }\r\n  return new RegExp(REGEX_MAP[dataType]).test(data);\r\n};\r\n\r\nexport const getPatternValue = (data: any, pattern: any, delimiter: any) => {\r\n  if (!data || !pattern || !delimiter) {\r\n    return data;\r\n  }\r\n  var cleaned = data.replaceAll(\" \", \"\").replaceAll(delimiter, \"\");\r\n  let finalstr = \"\";\r\n  let ctr = 0;\r\n\r\n  for (let i = 0; i < pattern.length && ctr < cleaned.length; i++) {\r\n    if (pattern[i] != delimiter) {\r\n      finalstr = finalstr + cleaned[ctr];\r\n      ctr = ctr + 1;\r\n    } else {\r\n      finalstr = finalstr + delimiter;\r\n    }\r\n  }\r\n  return finalstr;\r\n};\r\n\r\nexport const stringToColour = function(str) {\r\n  var hash = 0;\r\n  for (var i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n  var colour = '#';\r\n  for (var i = 0; i < 3; i++) {\r\n      var value = (hash >> (i * 8)) & 0xFF;\r\n      colour += ('00' + value.toString(16)).substr(-2);\r\n  }\r\n  return colour;\r\n}\r\n\r\nexport const validateEmail=(mail) =>{\r\n  return new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$/i).test(mail);\r\n}\r\n\r\nexport const validatePhone=(number) =>{\r\n  let regexp =  new RegExp(\"^\\\\d{8}$\");\r\n  var nameTest = regexp.test(number);\r\n  return nameTest;\r\n}\r\n\r\nexport const validateMobile=(number) =>{\r\n  let regexp =  new RegExp(\"^\\\\d{9}$\");\r\n  var nameTest = regexp.test(number);\r\n  return nameTest;\r\n}\r\n\r\nexport function addTimeToDateTime(date: any, timeToAdd: any) {\r\n  var d2 = new Date(date);\r\n  return new Date(d2.setMinutes(date.getMinutes() + timeToAdd));\r\n  //return updatedDate;\r\n}\r\n\r\nexport function setDisabledMinHr(disableHr) {\r\n  //testFun(testContent);\r\n  var disabledTime = addTimeToDateTime(new Date(), 1 * disableHr * 60 || 1);\r\n  disabledHr = disabledTime.toISOString();\r\n  return disabledHr;\r\n}\r\n\r\nexport function getDisabledMinHr() {\r\n  return disabledHr;\r\n}\r\n\r\nexport const convertToMillSeconds = (interval: string) => {\r\n  let timeParts = interval.split(\":\");\r\n  let result = milliseconds(timeParts[0], timeParts[1], 0);\r\n  // days\r\n  return result;\r\n}\r\n","import { IonIcon, IonInput, IonLabel, IonText } from \"@ionic/react\";\r\nimport { personOutline, pulseOutline } from \"ionicons/icons\";\r\nimport { TextInputType } from \"../../util/DataTypes\";\r\nimport React, { useState } from \"react\";\r\nimport \"./TxtInput.scss\";\r\nimport { getPatternValue, isValid, validateEmail } from \"../../util/Utilities\";\r\nimport { connect } from \"../../data/connect\";\r\nimport Icon from \"../Icon\";\r\ninterface TxtInputProps {\r\n  label?: string;\r\n  name: any;\r\n  type: any;\r\n  value?: any;\r\n  onChange?: any;\r\n  required?: any;\r\n  errors?: any;\r\n  pattern?: any;\r\n  datatype?: TextInputType;\r\n  description?: string;\r\n  placeholder: string;\r\n  icon?: any;\r\n  onBlur?: any;\r\n  readonly?: any;\r\n  contactForm?: any;\r\n  max?: number;\r\n}\r\nconst TxtInput: React.FC<TxtInputProps> = ({\r\n  label,\r\n  name,\r\n  type,\r\n  value,\r\n  onChange,\r\n  required,\r\n  errors,\r\n  pattern,\r\n  datatype,\r\n  description,\r\n  placeholder,\r\n  icon,\r\n  onBlur,\r\n  readonly,\r\n  contactForm,\r\n  max,\r\n}) => {\r\n  const [validation, setvalidation] = useState(false);\r\n  const checkKey = (e) => {\r\n    if (e.key.length > 1) return true;\r\n    setvalidation(!isValid(datatype, e.key));\r\n    if (!isValid(datatype, e.key)) {\r\n      e.preventDefault();\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onInpChange = (e) => {\r\n    let val = e.target.value;\r\n    let validate;\r\n    if (e.target.pattern) {\r\n      val = getPatternValue(val, e.target.pattern, \"-\");\r\n    }\r\n    if (e.target.type === \"email\") {\r\n      validate = validateEmail(val);\r\n      setvalidation(!validate);\r\n    }\r\n    if (!readonly) onChange(e, val, validate);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"form-element-group\"\r\n      style={contactForm ? { width: \"350px\", padding: \"0\" } : {}}\r\n    >\r\n      <fieldset>\r\n        <legend>{label}</legend>\r\n        {type === \"tel\" ? (\r\n          <IonLabel className=\"regularFont-textInput\">971</IonLabel>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <IonInput\r\n          name={name}\r\n          type={type}\r\n          value={value}\r\n          spellCheck={false}\r\n          autocapitalize=\"off\"\r\n          //readonly={readonly}\r\n          onKeyDown={checkKey}\r\n          onIonChange={onInpChange}\r\n          clearInput={true}\r\n          required={required}\r\n          autocomplete=\"off\"\r\n          pattern={pattern}\r\n          placeholder={placeholder}\r\n          className=\"textInput\"\r\n          onIonBlur={(e) => {\r\n            if (onBlur) onBlur(e);\r\n            else {\r\n            }\r\n          }}\r\n          maxlength={max}\r\n          readonly={readonly ? readonly : false}\r\n        >\r\n          {icon && (\r\n            <Icon iconProps={icon} />\r\n            // <IonIcon slot=\"primary\" icon={pulseOutline} />\r\n          )}\r\n        </IonInput>\r\n      </fieldset>\r\n\r\n      <div className=\"\">\r\n        {errors && (\r\n          <IonText color=\"danger\" className=\"validation-message\">\r\n            <IonLabel className=\"ion-padding-start validation-message\">\r\n              {errors}\r\n            </IonLabel>\r\n          </IonText>\r\n        )}\r\n      </div>\r\n      {validation && description && (\r\n        <IonText color=\"danger\" className=\"validation-message\">\r\n          <IonLabel className=\"ion-padding-start validation-message\">\r\n            {description}\r\n          </IonLabel>\r\n        </IonText>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TxtInput;\r\n","import {\r\n  IonContent,\r\n  IonIcon,\r\n  IonLabel,\r\n  IonList,\r\n  IonPage,\r\n  IonText,\r\n} from \"@ionic/react\";\r\nimport { arrowForwardOutline } from \"ionicons/icons\";\r\nimport React, { useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport TxtInput from \"../../components/txtinput/TxtInput\";\r\nimport { confirmUserDetails } from \"../../services/EndPointApi\";\r\nimport { isEmpty } from \"../../util/Utilities\";\r\nimport * as EndPoints from \"../../util/EndPointURL\";\r\n\r\nimport \"./ConfirmDetails.scss\";\r\n\r\ninterface OwnProps extends RouteComponentProps {}\r\n\r\ninterface LoginProps extends OwnProps {}\r\n\r\nfunction ConfirmDetails(confirmDetailsProps) {\r\n  const [form, setForm] = useState(confirmDetailsProps.location.state);\r\n  const [validate, setvalidate] = useState();\r\n  const [errors, setErrors] = useState<any>({});\r\n\r\n  const addOrUpdateuserDetails = async () => {\r\n    let errs: any = {};\r\n    if (isEmpty(form.firstName)) {\r\n      errs.firstName = \"First Name is required\";\r\n    }\r\n    if (isEmpty(form.lastName)) {\r\n      errs.lastName = \"Last Name is required\";\r\n    }\r\n\r\n    if (isEmpty(form.email)) {\r\n      errs.email = \"Email is required\";\r\n    }\r\n    if (isEmpty(form.mobileNumber)) {\r\n      errs.mobileNumber = \"Mobile number is required\";\r\n    }\r\n    if (isEmpty(form.landLineNumber)) {\r\n      errs.landLineNumber = \"Phone number is required\";\r\n    }\r\n    // if (!validate) {\r\n    //   console.log(validate);\r\n    // } else\r\n    if (\r\n      form.firstName &&\r\n      form.lastName &&\r\n      form.email &&\r\n      form.mobileNumber &&\r\n      form.landLineNumber\r\n    ) {\r\n      form.confirmDetails = true;\r\n      var response = await confirmUserDetails(EndPoints.confirmDetailUrl, form);\r\n      //var result = response.data?.data?.dataItems[0];\r\n      if (response && response.success) {\r\n        confirmDetailsProps.history.push(\"/tabs/\", { direction: \"none\" });\r\n      } else {\r\n        errs.errorGeneral = response.data.message || \"Error occured\";\r\n      }\r\n    }\r\n    setErrors(errs);\r\n  };\r\n\r\n  const handleChange = (e: any, value: any, validate: any) => {\r\n    setvalidate(validate);\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: value,\r\n    });\r\n    setErrors({ ...errors, [e.target.name]: \"\" });\r\n  };\r\n\r\n  return (\r\n    <IonPage id=\"profilePage\">\r\n      <IonContent>\r\n        <div className=\"main-container\">\r\n          <div className=\"login-logo\">\r\n            <img src=\"assets/img/dubai_trade_logo.png\" alt=\"Ionic logo\" />\r\n          </div>\r\n          <div className=\"form-content\">\r\n            <div className=\"login-box-header\"></div>\r\n            <form\r\n              noValidate\r\n              onSubmit={addOrUpdateuserDetails}\r\n              autoComplete=\"off\"\r\n            >\r\n              <IonList className=\"form-section\">\r\n                <div className=\"welcome-note\">\r\n                  Dear {form.userName},\r\n                  <br />\r\n                  Welcome to DT Trucking.\r\n                  <br />\r\n                  <br />\r\n                  Kindly confirm your contact details in order to proceed with\r\n                  booking.\r\n                </div>\r\n\r\n                <TxtInput\r\n                  name={\"firstName\"}\r\n                  value={form.firstName}\r\n                  label=\"First Name\"\r\n                  errors={errors.firstName}\r\n                  type=\"text\"\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                  datatype=\"TEXT\"\r\n                  placeholder=\"First Name\"\r\n                />\r\n                <TxtInput\r\n                  name={\"lastName\"}\r\n                  value={form.lastName}\r\n                  label=\"Last Name\"\r\n                  errors={errors.lastName}\r\n                  type=\"text\"\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Last Name\"\r\n                />\r\n                <TxtInput\r\n                  name={\"email\"}\r\n                  value={form.email}\r\n                  label=\"Email\"\r\n                  errors={errors.email}\r\n                  type=\"email\"\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                  description=\"Email Format abc@xyz.com\"\r\n                  placeholder=\"Email\"\r\n                />\r\n                <TxtInput\r\n                  name={\"mobileNumber\"}\r\n                  value={form.mobileNumber}\r\n                  label=\"Mobile\"\r\n                  errors={errors.mobileNumber}\r\n                  type=\"text\"\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                  datatype=\"TEL_NUM\"\r\n                  pattern=\"###-##-#######\"\r\n                  description=\"Tel Format 971-xx-xxxxxxx\"\r\n                  placeholder=\"Mobile\"\r\n                />\r\n                <TxtInput\r\n                  name={\"landLineNumber\"}\r\n                  value={form.landLineNumber}\r\n                  label=\"Phone\"\r\n                  errors={errors.landLineNumber}\r\n                  type=\"text\"\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                  datatype=\"TEL_NUM\"\r\n                  pattern=\"###-##-#######\"\r\n                  description=\"Tel Format 971-xx-xxxxxxx\"\r\n                  placeholder=\"Phone\"\r\n                />\r\n              </IonList>\r\n\r\n              <div className=\"\">\r\n                {errors.errorGeneral && (\r\n                  <IonText\r\n                    color=\"danger\"\r\n                    className=\"validation-message genralError\"\r\n                  >\r\n                    <IonLabel className=\"ion-padding-start\">\r\n                      {errors.errorGeneral}\r\n                    </IonLabel>\r\n                  </IonText>\r\n                )}\r\n              </div>\r\n              <div className=\"button-div\">\r\n                <div className=\"button-holder\" onClick={addOrUpdateuserDetails}>\r\n                  <IonIcon slot=\"icon-only\" icon={arrowForwardOutline} />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n}\r\n\r\nexport default ConfirmDetails;\r\n"],"sourceRoot":""}