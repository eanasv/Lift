{"version":3,"sources":["pages/pushNotification/Notifications.tsx"],"names":["Notifications","props","console","log","useState","newnNotfication","setNewNotification","accessedNotfication","setAccessedNotfication","agent","setAgent","Store","subscribe","getState","CheckUserStatus","user","selectedAgent","useEffect","httpGetCallWithoutHeader","EndPointURL","then","result","success","data1","data","dataItems","filter","item","accessed","data2","onNewNotificationClick","resId","appLink","a","appUrl","httpPostCallWithoutHeaderAndBody","response","history","push","id","label","action","showAgent","agentHeader","padding-top","className","fullscreen","scrollEvents","scrollY","size","length","map","index","key","onClick","responseUuid","appNotificationDto","message","duration","style","maxHeight","selected"],"mappings":"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","file":"static/js/24.83226e96.chunk.js","sourcesContent":["import {\r\n  IonCol,\r\n  IonContent,\r\n  IonLabel,\r\n  IonPage,\r\n  IonRow,\r\n} from \"@ionic/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport * as EndPointURL from \"../../util/EndPointURL\";\r\nimport {\r\n  httpGetCallWithoutHeader,\r\n  httpPostCallWithoutHeaderAndBody\r\n} from \"../../services/EndPointApi\";\r\nimport \"./Notifications.scss\";\r\nimport MainTabs from \"../MainTabs\";\r\nimport Store from \"../../redux/Store\";\r\nimport Header from \"../../components/Header\";\r\n\r\nexport default function Notifications(props: any) {\r\n  console.log(props);\r\n  const [newnNotfication, setNewNotification] = useState([]);\r\n  const [accessedNotfication, setAccessedNotfication] = useState([]);\r\n  const [agent, setAgent] = useState();\r\n  Store.subscribe(() => {\r\n    setAgent(Store.getState().CheckUserStatus.user.selectedAgent);\r\n  });\r\n\r\n  useEffect(() => {\r\n    var response = httpGetCallWithoutHeader(\r\n      EndPointURL.fetchAllNotificationUrl\r\n    );\r\n    response.then((result) => {\r\n      if (result.success) {\r\n        let data1 = result.data.data.dataItems.filter(\r\n          (item) => item.accessed === \"N\"\r\n        );\r\n        console.log(\"data1\", data1);\r\n        setNewNotification(data1);\r\n        let data2 = result.data.data.dataItems.filter(\r\n          (item) => item.accessed === \"Y\"\r\n        );\r\n        setAccessedNotfication(data2);\r\n      }\r\n    });\r\n  }, [agent]);\r\n\r\n  const onNewNotificationClick = async (resId, appLink) => {\r\n    let appUrl = EndPointURL.fetchAllNotificationUrl + \"/\" + resId;\r\n    var response = await httpPostCallWithoutHeaderAndBody(appUrl);\r\n    if (await response.success) {\r\n      if (appLink !== null) props.history.push(appLink);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <IonPage id=\"notifications-page\">\r\n      <Header\r\n        label=\"Notifications\"\r\n        action=\"search\"\r\n        showAgent={true}\r\n        agentHeader={true}\r\n      />\r\n      <IonContent\r\n        padding-top\r\n        className=\"page-content\"\r\n        fullscreen\r\n        scrollEvents={true}\r\n        scrollY={true}\r\n      >\r\n        <IonRow className=\"divider\">\r\n          <IonCol size=\"12\" className=\"full-width\">\r\n            <IonRow className=\"sort-divider\">\r\n              <IonLabel className=\"data-font\">New</IonLabel>\r\n            </IonRow>\r\n          </IonCol>\r\n          {newnNotfication.length > 0 ? (\r\n            newnNotfication\r\n              .filter((item) => item.accessed === \"N\")\r\n              .map((item, index) => (\r\n                <IonCol\r\n                  size=\"12\"\r\n                  className=\"full-width\"\r\n                  key={index}\r\n                  onClick={() =>\r\n                    onNewNotificationClick(\r\n                      item.responseUuid,\r\n                      item.appNotificationDto.appLink\r\n                    )\r\n                  }\r\n                >\r\n                  <IonRow>\r\n                    <IonLabel className=\"notification-font\">\r\n                      {item.appNotificationDto.message}\r\n                    </IonLabel>\r\n                  </IonRow>\r\n                  <IonRow>\r\n                    <IonLabel className=\"notification-date\">\r\n                      {item.duration}\r\n                    </IonLabel>\r\n                  </IonRow>\r\n                </IonCol>\r\n              ))\r\n          ) : (\r\n            <IonCol size=\"12\" className=\"full-width ion-text-center\">\r\n              <IonLabel className=\"notification-date\">\r\n                No Notification to show\r\n              </IonLabel>\r\n            </IonCol>\r\n          )}\r\n        </IonRow>\r\n        <IonRow className=\"accessed-status\">\r\n          <IonCol size=\"12\" className=\"full-width\">\r\n            <IonRow className=\"sort-divider\">\r\n              <IonLabel className=\"data-font\">Earlier</IonLabel>\r\n            </IonRow>\r\n          </IonCol>\r\n          {accessedNotfication.length > 0 ? (\r\n            accessedNotfication\r\n              .filter((item) => item.accessed === \"Y\")\r\n              .map((item, index) => (\r\n                <IonCol size=\"12\" className=\"full-width\" key={index}>\r\n                  <IonRow\r\n                    onClick={() => {\r\n                      if (item.appNotificationDto.appLink !== null)\r\n                        props.history.push(item.appNotificationDto.appLink);\r\n                    }}\r\n                  >\r\n                    <IonLabel className=\"notification-font\">\r\n                      {item.appNotificationDto.message}\r\n                    </IonLabel>\r\n                  </IonRow>\r\n                  <IonRow>\r\n                    <IonLabel className=\"notification-date\">\r\n                      {item.duration}\r\n                    </IonLabel>\r\n                  </IonRow>\r\n                </IonCol>\r\n              ))\r\n          ) : (\r\n            <IonCol size=\"12\" className=\"full-width ion-text-center\">\r\n              <IonLabel className=\"notification-date\">\r\n                No Notification to show\r\n              </IonLabel>\r\n            </IonCol>\r\n          )}\r\n        </IonRow>\r\n      </IonContent>\r\n      <IonContent style={{ maxHeight: \"86px\" }}>\r\n        <MainTabs selected={true} />\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n}\r\n"],"sourceRoot":""}