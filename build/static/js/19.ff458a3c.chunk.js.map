{"version":3,"sources":["components/Header.tsx","util/ClearReduxStore.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray.js","pages/myBooking/status/statusCard/StatusCard.tsx","pages/myBooking/status/Status.tsx"],"names":["Header","HeaderParam","useState","search","check","close","home","info","actionType","setActionType","userDetails","Store","getState","CheckUserStatus","user","checked","setChecked","checkedLabel","setCheckedLabel","backIconProps","name","slot","zoom","useEffect","updateActionType","action","history","useHistory","back","e","customBack","backClick","goBack","myValue","homeButtonClicked","dispatch","type","LoginUserTypes","locationProps","push","selectUserType","a","data","detail","value","url","EndPointURL","agentCode","agentType","endPointHeader","userName","userType","loginWithAgent","response","result","dataItems","success","reduxActions","accessToken","activeCompanyCode","selectedAgent","style","agentHeader","height","className","paddingBottom","checkedProps","hidden","showChecked","fill","onClick","Icon","iconProps","onIonChange","addContainerToCart","checkAndUncheckAll","label","searchClick","icon","minWidth","infoClick","informationCircle","checkClick","closeSharp","agents","interface","disabled","showAgent","length","backgroundColor","interfaceOptions","cssClass","map","item","index","key","agentName","src","_toArray","arr","React","memo","MenuParam","id","handleClick","size","total","chevronForwardOutline","Status","props","console","log","countsRequest","setCountsRequest","agent","setAgent","subscribe","getCountRequest","httpGetCallWithoutHeader","respObj","Object","keys","forEach","fullscreen","padding-top","margin-top","ALL","PODUPL","INVAPPR"],"mappings":"0RAmUeA,IA/RuB,SAACC,GACrC,MAAoCC,mBAAS,CAC3CC,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,MAAM,EACNC,MAAM,IALR,mBAAOC,EAAP,KAAmBC,EAAnB,KAQIC,EAAcC,IAAMC,WAAWC,gBAAgBC,KAEnD,EAA8BZ,oBAAS,GAAvC,mBAAOa,EAAP,KAAgBC,EAAhB,KACA,EAAwCd,mBAAS,cAAjD,mBAAOe,EAAP,KAAqBC,EAArB,KACMC,EAAgB,CACpBC,KAAM,aACNC,KAAM,YACNC,KAAM,IAwBRC,qBAAU,WACRC,EAAiBvB,EAAYwB,OAASxB,EAAYwB,OAAS,UAC1D,IAEH,IAAIC,EAAUC,cACRC,EAAO,SAACC,GACR5B,EAAY6B,WACd7B,EAAY8B,UAAUF,GAEtBH,EAAQM,UAINR,EAAmB,SAACS,GACpBA,IACc,WAAZA,EACFxB,EAAc,CACZN,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,MAAM,EACNC,MAAM,IAEa,UAAZ0B,EACTxB,EAAc,CACZN,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,MAAM,EACNC,MAAM,IAEa,UAAZ0B,EACTxB,EAAc,CACZN,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,MAAM,EACNC,MAAM,IAEa,SAAZ0B,EACTxB,EAAc,CACZN,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,MAAM,EACNC,MAAM,IAEa,SAAZ0B,GACTxB,EAAc,CACZN,QAAQ,EACRC,OAAO,EACPC,OAAO,EACPC,MAAM,EACNC,MAAM,MAMd,SAAS2B,ICnITvB,IAAMwB,SAAS,CAAEC,KAAMC,MACvB1B,IAAMwB,SAAS,CAAEC,KAAMC,MACvB1B,IAAMwB,SAAS,CAAEC,KAAMC,MDmIrBpC,EAAYqC,cAAcZ,QAAQa,KAAK,iBAGzC,IAAMC,EAAc,uCAAG,WAAOX,GAAP,6BAAAY,EAAA,6DACjBC,EAAOb,EAAEc,OAAOC,MAChBC,EACFC,aACA,cACAJ,EAAKK,UACL,cACAL,EAAKM,UAEHC,EAAiB,CACnBC,SAAUxC,EAAYwC,SACtBC,SAAU,gBAXS,SAcAC,YAAeP,EAAKI,GAdpB,cAcjBI,EAdiB,OAejBC,EAASD,EAASX,KAAKA,KAAKa,UAAU,GAfrB,SAgBXF,EAASG,QAhBE,oDAiBKC,IAA4BH,EAAOI,aAjBxC,eAiBfA,EAjBe,SAkBF/C,IAAMwB,SAASuB,GAlBb,UAoBGD,IACpBH,EAAOxC,KAAK6C,mBArBK,eAoBfX,EApBe,SAuBJrC,IAAMwB,SAASa,GAvBX,UAyBOS,IAA8Bf,GAzBrC,SAyBfkB,EAzBe,SA2BAjD,IAAMwB,SAASyB,GAEvBjD,IAAMC,WAAWC,gBA7BT,4CAAH,sDAqCpB,OACE,kBAAC,IAAD,CACEgD,MAAO5D,EAAY6D,YAAc,CAAEC,OAAQ,SAAY,CAAEA,OAAQ,QAEjE,kBAAC,IAAD,CAAYC,UAAU,UACpB,yBACEA,UAAU,gBACVH,MAAQ5D,EAAY6D,YAAqC,GAAvB,CAAEG,cAAe,IAElDhE,EAAYiE,aACX,yBACEF,UAAU,cACVG,QAASlE,EAAYiE,aAAaE,aAElC,6BACE,kBAAC,IAAD,CACEC,KAAK,QACLC,QAAS,SAACzC,GACRD,EAAKC,KAGP,kBAAC0C,EAAA,EAAD,CAAMC,UAAWrD,MAGrB,yBAAK6C,UAAU,qBACb,kBAAC,IAAD,CACEA,UAAU,WACVjD,QAASA,EACT0D,YAAa,SAAC5C,GAAD,OA5I7B,SAA4Bd,GAC1BC,EAAWD,GACPA,GACFG,EAAgB,gBAChBjB,EAAYiE,aAAaQ,mBAAmB,GAAI,GAAI,aAEpDzE,EAAYiE,aAAaQ,mBAAmB,GAAI,GAAI,aACpDxD,EAAgB,eAqIgByD,CAAmB9C,EAAEc,OAAO5B,aAGpD,yBAAKiD,UAAU,oBACb,kBAAC,IAAD,CAAUA,UAAU,iBAAiB/C,GAAyB,MAIlE,qCAEF,yBAAK+C,UAAU,aACS,QAArB/D,EAAY2E,OAAmBpE,EAAWH,MACzC,kBAAC,IAAD,CACEgE,KAAK,QACLC,QAAS,SAACzC,GACRD,EAAKC,KAGP,kBAAC0C,EAAA,EAAD,CAAMC,UAAWrD,KAGnB,sCAGJ,yBAAK6C,UAAU,gBACZ,IACD,kBAAC,IAAD,KAAU/D,EAAY2E,QAExB,yBAAKZ,UAAU,gBACb,kBAAC,IAAD,CACEG,OAAQ3D,EAAWL,OACnBkE,KAAK,QACLC,QAASrE,EAAY4E,aAErB,kBAAC,IAAD,CACExD,KAAK,YACLyD,KAAM3E,IACN0D,MAAO,CAAEkB,SAAU,WAGvB,kBAAC,IAAD,CACEZ,OAAQ3D,EAAWD,KACnB8D,KAAK,QACLC,QAASrE,EAAY+E,WAErB,kBAAC,IAAD,CACE3D,KAAK,YACLyD,KAAMG,IACNpB,MAAO,CAAEkB,SAAU,WAGvB,kBAAC,IAAD,CACEZ,OAAQ3D,EAAWJ,MACnBiE,KAAK,QACLC,QAASrE,EAAYiF,YAGrB,kBAACX,EAAA,EAAD,CAAMC,UA3MK,CACrBpD,KAAM,QACNC,KAAM,YACNC,KAAM,OA0ME,kBAAC,IAAD,CACE6C,OAAQ3D,EAAWF,KACnB+D,KAAK,QACLC,QAAS,SAACzC,GAAD,OAAOK,MAEhB,kBAACqC,EAAA,EAAD,CAAMC,UAvNI,CACpBpD,KAAM,WACNC,KAAM,YACNC,KAAM,OAsNE,kBAAC,IAAD,CACE6C,OAAQ3D,EAAWH,MACnBgE,KAAK,QACLC,QAAS,SAACzC,GACRD,EAAKC,KAGP,kBAAC,IAAD,CAASR,KAAK,YAAYyD,KAAMK,OAElC,kBAAC,IAAD,CAAWhB,OAA+B,KAAvBlE,EAAYwB,OAAe4C,KAAK,SACjD,kBAAC,IAAD,SAIL3D,EAAY0E,QAAUnF,EAAY6D,aACjC,kBAAC,IAAD,CAAYE,UAAU,qBACpB,kBAAC,IAAD,CACEpB,MAAOlC,EAAYkD,cACnByB,UAAU,UACVZ,YAAa,SAAC5C,GAAD,OAAOW,EAAeX,IACnCyD,UACGrF,EAAYsF,WAA0C,GAA7B7E,EAAY0E,OAAOI,OAE/C3B,MACG5D,EAAYsF,UAA6C,GAAjC,CAAEE,gBAAiB,WAE9CC,iBA5Ha,CACvBC,SAAU,oBA6HCjF,EAAY0E,OAAOQ,KAAI,SAACC,EAAMC,GAC7B,OACE,kBAAC,IAAD,CACElD,MAAOiD,EACPE,IAAKD,EACL9B,UAAU,oBAET6B,EAAK9C,UAAY,IAAM8C,EAAKG,eAKrC,kBAAC,IAAD,CACEC,IAAI,6BACJjC,UAAU,kBACVG,QAASlE,EAAYsF,WAA0C,GAA7B7E,EAAY0E,OAAOI,c,uDE1TnE,sEAIe,SAASU,EAASC,GAC/B,OAAO,YAAeA,IAAQ,YAAgBA,IAAQ,YAA2BA,IAAQ,gB,iMCuD5EC,G,OAAAA,IAAMC,MA1CmB,SAACC,GACvC,MAAWpG,qBAAX,eAEA,OACE,oCACE,kBAAC,IAAD,CAAQqG,GAAG,eACT,kBAAC,IAAD,CAAQvC,UAAU,gBAChB,kBAAC,IAAD,CAASA,UAAU,cAAcM,QAASgC,EAAUE,aAClD,kBAAC,IAAD,CAAgBxC,UAAU,wBACxB,kBAAC,IAAD,CAAQA,UAAU,eAChB,kBAAC,IAAD,CAAQyC,KAAK,IAAIzC,UAAU,yBACzB,yBAAKA,UAAU,kBACb,kBAAC,IAAD,CAASA,UAAU,qBAChBsC,EAAUlE,MACF,MAGf,kBAAC,IAAD,CAAQqE,KAAK,IAAIzC,UAAU,yBACzB,yBAAKA,UAAU,mBACb,kBAAC,IAAD,CAASA,UAAU,sBAChBsC,EAAUI,OAAS,MACX,MAGf,kBAAC,IAAD,CAAQD,KAAK,IAAIzC,UAAU,yBACzB,6BACE,kBAAC,IAAD,CACEA,UAAU,oBACVc,KAAM6B,IACNtF,KAAK,cACK,gB,mCCvCjB,SAASuF,EAAOC,GAAQ,IAAD,MACpCC,QAAQC,IAAIF,GACZ,IAAInF,EAAUC,cACd,EAA0CzB,mBAAc,IAAxD,mBAAO8G,EAAP,KAAsBC,EAAtB,KACA,EAA0B/G,qBAA1B,mBAAOgH,EAAP,KAAcC,EAAd,KACAxG,IAAMyG,WAAU,WACdD,EAASxG,IAAMC,WAAWC,gBAAgBC,KAAK8C,eAC/CkD,QAAQC,IAAI,oBAGdxF,qBAAU,WACR8F,IACAP,QAAQC,IAAI,cAAgBG,KAC3B,CAACA,IAEJ,IAWMG,EAAe,uCAAG,8BAAA5E,EAAA,sEACD6E,YAAyBxE,+BADxB,cAClBO,EADkB,gBAEZA,EAASG,QAFG,0CAGhB+D,EAAUlE,EAASX,KAAKA,KAAKa,UAAU,GACzCiE,OAAOC,KAAKF,GAASG,SAAQ,SAAU3B,GACrCwB,EAAQxB,GAAOwB,EAAQxB,GAAO,GAAK,IAAMwB,EAAQxB,GAAOwB,EAAQxB,MALhD,UAQZkB,EAAiB,2BAClBD,GADiB,IAEpB1D,OAAQiE,KAVQ,4CAAH,qDAuBrB,OACI,kBAAC,IAAD,CAAShB,GAAG,eACV,kBAACvG,EAAA,EAAD,CACE4E,MAAM,SACNnD,OAAO,SACPoD,YAbc,WACpBnD,EAAQa,KAAK,oBAaPgD,WAAW,EACXzD,YAAY,EACZC,UAZO,WACbL,EAAQa,KAAK,kBAYPuB,aAAa,IAEf,kBAAC,IAAD,CAAY6D,YAAU,EAACC,eAAA,EAAY5D,UAAU,gBAC3C,kBAAC,IAAD,CAAS6D,cAAA,GACP,kBAAC,EAAD,CACEzF,KAAK,eACLsE,MAAK,OAAGM,QAAH,IAAGA,GAAH,UAAGA,EAAe1D,cAAlB,aAAG,EAAuBwE,IAC/BtB,YAlDW,WACrB9E,EAAQa,KAAK,0BAmDL,kBAAC,EAAD,CACEH,KAAK,eACLsE,MAAK,UAAEM,EAAc1D,cAAhB,aAAE,EAAsByE,OAC7BvB,YApDO,WACjB9E,EAAQa,KAAK,6BAqDL,kBAAC,EAAD,CACEH,KAAK,kBACLsE,MAAK,UAAEM,EAAc1D,cAAhB,aAAE,EAAsB0E,QAC7BxB,YAtDW,WACrB9E,EAAQa,KAAK","file":"static/js/19.ff458a3c.chunk.js","sourcesContent":["import {\r\n  IonButton,\r\n  IonCheckbox,\r\n  IonHeader,\r\n  IonIcon,\r\n  IonImg,\r\n  IonLabel,\r\n  IonSelect,\r\n  IonSelectOption,\r\n  IonText,\r\n  IonToolbar,\r\n} from \"@ionic/react\";\r\nimport { closeSharp, informationCircle, search } from \"ionicons/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ClearReduxStore from \"../util/ClearReduxStore\";\r\nimport \"./Header.scss\";\r\nimport Icon from \"./Icon\";\r\nimport Store from \"../redux/Store\";\r\nimport * as EndPointURL from \"../util/EndPointURL\";\r\nimport * as reduxActions from \"../redux/actions/AllActions\";\r\nimport { loginWithAgent } from \"../services/EndPointApi\";\r\n\r\ninterface HeaderParam {\r\n  label?: string;\r\n  action?: string;\r\n  showAgent?: boolean;\r\n  agentHeader?: boolean;\r\n  customBack?: boolean;\r\n  searchClick?(e: any): void;\r\n  infoClick?(e: any): void;\r\n  checkClick?(e: any): void;\r\n  backClick?(e: any): void;\r\n  locationProps?: any;\r\n  checkedProps?: any;\r\n}\r\nconst Header: React.FC<HeaderParam> = (HeaderParam) => {\r\n  const [actionType, setActionType] = useState({\r\n    search: true,\r\n    check: true,\r\n    close: true,\r\n    home: true,\r\n    info: false,\r\n  });\r\n\r\n  var userDetails = Store.getState().CheckUserStatus.user;\r\n\r\n  const [checked, setChecked] = useState(false);\r\n  const [checkedLabel, setCheckedLabel] = useState(\"Select All\");\r\n  const backIconProps = {\r\n    name: \"back-arrow\",\r\n    slot: \"icon-only\",\r\n    zoom: \"\",\r\n  };\r\n  const homeIconProps = {\r\n    name: \"home-new\",\r\n    slot: \"icon-only\",\r\n    zoom: \"\",\r\n  };\r\n  const checkIconProps = {\r\n    name: \"Check\",\r\n    slot: \"icon-only\",\r\n    zoom: \"\",\r\n  };\r\n\r\n  function checkAndUncheckAll(checked) {\r\n    setChecked(checked);\r\n    if (checked) {\r\n      setCheckedLabel(\"Unselect All\");\r\n      HeaderParam.checkedProps.addContainerToCart(\"\", \"\", \"checked\");\r\n    } else {\r\n      HeaderParam.checkedProps.addContainerToCart(\"\", \"\", \"unchecked\");\r\n      setCheckedLabel(\"Select All\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateActionType(HeaderParam.action ? HeaderParam.action : \"none\");\r\n  }, []);\r\n\r\n  let history = useHistory();\r\n  const back = (e: any) => {\r\n    if (HeaderParam.customBack) {\r\n      HeaderParam.backClick(e);\r\n    } else {\r\n      history.goBack();\r\n    }\r\n  };\r\n\r\n  const updateActionType = (myValue: string) => {\r\n    if (myValue) {\r\n      if (myValue === \"search\") {\r\n        setActionType({\r\n          search: false,\r\n          check: true,\r\n          close: true,\r\n          home: true,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"check\") {\r\n        setActionType({\r\n          search: true,\r\n          check: false,\r\n          close: true,\r\n          home: true,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"close\") {\r\n        setActionType({\r\n          search: true,\r\n          check: true,\r\n          close: false,\r\n          home: true,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"home\") {\r\n        setActionType({\r\n          search: true,\r\n          check: true,\r\n          close: true,\r\n          home: false,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"info\") {\r\n        setActionType({\r\n          search: true,\r\n          check: true,\r\n          close: true,\r\n          home: true,\r\n          info: false,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  function homeButtonClicked() {\r\n    ClearReduxStore();\r\n    HeaderParam.locationProps.history.push(\"/tabs/landing\");\r\n  }\r\n\r\n  const selectUserType = async (e: any) => {\r\n    let data = e.detail.value;\r\n    let url =\r\n      EndPointURL.loginAgent +\r\n      \"?agentCode=\" +\r\n      data.agentCode +\r\n      \"&agentType=\" +\r\n      data.agentType;\r\n\r\n    var endPointHeader = {\r\n      userName: userDetails.userName,\r\n      userType: \"IMPORTER_APP\",\r\n    };\r\n\r\n    var response = await loginWithAgent(url, endPointHeader);\r\n    var result = response.data.data.dataItems[0];\r\n    if (await response.success) {\r\n      var accessToken = await reduxActions.AddAccessToKen(result.accessToken);\r\n      if (accessToken) Store.dispatch(accessToken);\r\n\r\n      var agentType = await reduxActions.AddAgentType(\r\n        result.user.activeCompanyCode\r\n      );\r\n      if (agentType) Store.dispatch(agentType);\r\n\r\n      var selectedAgent = await reduxActions.AddSelectedAgent(data);\r\n\r\n      if (selectedAgent) Store.dispatch(selectedAgent);\r\n\r\n      var test = Store.getState().CheckUserStatus;\r\n    }\r\n  };\r\n\r\n  const agentCodeoptions = {\r\n    cssClass: \"agent-interface\",\r\n  };\r\n\r\n  return (\r\n    <IonHeader\r\n      style={HeaderParam.agentHeader ? { height: \"102px\" } : { height: \"10%\" }}\r\n    >\r\n      <IonToolbar className=\"header\">\r\n        <div\r\n          className=\"mainContainer\"\r\n          style={!HeaderParam.agentHeader ? { paddingBottom: 0 } : {}}\r\n        >\r\n          {HeaderParam.checkedProps ? (\r\n            <div\r\n              className=\"selectAllBg\"\r\n              hidden={!HeaderParam.checkedProps.showChecked}\r\n            >\r\n              <div>\r\n                <IonButton\r\n                  fill=\"clear\"\r\n                  onClick={(e) => {\r\n                    back(e);\r\n                  }}\r\n                >\r\n                  <Icon iconProps={backIconProps} />\r\n                </IonButton>\r\n              </div>\r\n              <div className=\"checkBoxContainer\">\r\n                <IonCheckbox\r\n                  className=\"checkBox\"\r\n                  checked={checked}\r\n                  onIonChange={(e) => checkAndUncheckAll(e.detail.checked)}\r\n                />\r\n              </div>\r\n              <div className=\"checkBoxLabelCol\">\r\n                <IonLabel className=\"checkBoxLabel\">{checkedLabel}</IonLabel>{\" \"}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <div className=\"backArrow\">\r\n            {HeaderParam.label != \"Home\" && actionType.close ? (\r\n              <IonButton\r\n                fill=\"clear\"\r\n                onClick={(e) => {\r\n                  back(e);\r\n                }}\r\n              >\r\n                <Icon iconProps={backIconProps} />\r\n              </IonButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n          <div className=\"header-label\">\r\n            {\" \"}\r\n            <IonText>{HeaderParam.label}</IonText>\r\n          </div>\r\n          <div className=\"header-right\">\r\n            <IonButton\r\n              hidden={actionType.search}\r\n              fill=\"clear\"\r\n              onClick={HeaderParam.searchClick}\r\n            >\r\n              <IonIcon\r\n                slot=\"icon-only\"\r\n                icon={search}\r\n                style={{ minWidth: \"30px\" }}\r\n              />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.info}\r\n              fill=\"clear\"\r\n              onClick={HeaderParam.infoClick}\r\n            >\r\n              <IonIcon\r\n                slot=\"icon-only\"\r\n                icon={informationCircle}\r\n                style={{ minWidth: \"30px\" }}\r\n              />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.check}\r\n              fill=\"clear\"\r\n              onClick={HeaderParam.checkClick}\r\n            >\r\n              {/* <IonIcon slot=\"icon-only\" src=\"\" style={{minWidth:'30px'}}/> */}\r\n              <Icon iconProps={checkIconProps} />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.home}\r\n              fill=\"clear\"\r\n              onClick={(e) => homeButtonClicked()}\r\n            >\r\n              <Icon iconProps={homeIconProps} />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.close}\r\n              fill=\"clear\"\r\n              onClick={(e) => {\r\n                back(e);\r\n              }}\r\n            >\r\n              <IonIcon slot=\"icon-only\" icon={closeSharp} />\r\n            </IonButton>\r\n            <IonButton hidden={HeaderParam.action !== \"\"} fill=\"clear\">\r\n              <IonIcon />\r\n            </IonButton>\r\n          </div>\r\n        </div>\r\n        {userDetails.agents && HeaderParam.agentHeader && (\r\n          <IonToolbar className=\"agent-code-header\">\r\n            <IonSelect\r\n              value={userDetails.selectedAgent}\r\n              interface=\"popover\"\r\n              onIonChange={(e) => selectUserType(e)}\r\n              disabled={\r\n                !HeaderParam.showAgent || userDetails.agents.length == 1\r\n              }\r\n              style={\r\n                !HeaderParam.showAgent ? { backgroundColor: \"#DDF1FF\" } : {}\r\n              }\r\n              interfaceOptions={agentCodeoptions}\r\n            >\r\n              {userDetails.agents.map((item, index) => {\r\n                return (\r\n                  <IonSelectOption\r\n                    value={item}\r\n                    key={index}\r\n                    className=\"select-agent-opt\"\r\n                  >\r\n                    {item.agentCode + \"-\" + item.agentName}\r\n                  </IonSelectOption>\r\n                );\r\n              })}\r\n            </IonSelect>\r\n            <IonIcon\r\n              src=\"assets/icon/arrow-down.svg\"\r\n              className=\"arrow-down-icon\"\r\n              hidden={!HeaderParam.showAgent || userDetails.agents.length == 1}\r\n            />\r\n          </IonToolbar>\r\n        )}\r\n        {/* </IonImg> */}\r\n      </IonToolbar>\r\n    </IonHeader>\r\n  );\r\n};\r\nexport default Header;\r\n","import Store from \"../redux/Store\";\nimport * as LoginUserTypes from \"../redux/actionTypes/AllActionTypes\";\n\nexport default function ClearReduxStore() {\n  Store.dispatch({ type: LoginUserTypes.BOOK_TRUCK_CLEAR });\n  Store.dispatch({ type: LoginUserTypes.REMOVE_ALL_CONTAINERS });\n  Store.dispatch({ type: LoginUserTypes.REMOVE_ALL_TRUCK });\n}\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import React, { useState } from \"react\";\r\nimport {\r\n  IonText,\r\n  IonRow,\r\n  IonCard,\r\n  IonCol,\r\n  IonCardContent,\r\n  IonIcon,\r\n} from \"@ionic/react\";\r\nimport { chevronForwardOutline } from \"ionicons/icons\";\r\nimport \"../statusCard/StatusCard.scss\";\r\n\r\ninterface MenuParam {\r\n  type: string;\r\n  total: string;\r\n  handleClick?(e: any): void;\r\n}\r\n\r\nconst StatusCard: React.FC<MenuParam> = (MenuParam) => {\r\n  const [] = useState();\r\n\r\n  return (\r\n    <>\r\n      <IonRow id=\"status-card\">\r\n        <IonCol className=\"booking-card\">\r\n          <IonCard className=\"lightShadow\" onClick={MenuParam.handleClick}>\r\n            <IonCardContent className=\"booking-card-content\">\r\n              <IonRow className=\"booking-row\">\r\n                <IonCol size=\"8\" className=\"ion-align-self-center\">\r\n                  <div className=\"ion-float-left\">\r\n                    <IonText className=\"booking-menu-type\">\r\n                      {MenuParam.type}\r\n                    </IonText>{\" \"}\r\n                  </div>\r\n                </IonCol>\r\n                <IonCol size=\"2\" className=\"ion-align-self-center\">\r\n                  <div className=\"ion-float-right\">\r\n                    <IonText className=\"booking-menu-total\">\r\n                      {MenuParam.total || \"00\"}\r\n                    </IonText>{\" \"}\r\n                  </div>\r\n                </IonCol>\r\n                <IonCol size=\"2\" className=\"ion-align-self-center\">\r\n                  <div>\r\n                    <IonIcon\r\n                      className=\"booking-menu-icon\"\r\n                      icon={chevronForwardOutline}\r\n                      slot=\"icon-only\"\r\n                    ></IonIcon>{\" \"}\r\n                  </div>\r\n                </IonCol>\r\n              </IonRow>\r\n            </IonCardContent>\r\n          </IonCard>\r\n        </IonCol>\r\n      </IonRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(StatusCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IonPage, IonContent, IonGrid } from \"@ionic/react\";\r\nimport StatusCard from \"./statusCard/StatusCard\";\r\nimport * as EndPointURL from \"../../../util/EndPointURL\";\r\nimport Header from \"../../../components/Header\";\r\nimport { httpGetCallWithoutHeader } from \"../../../services/EndPointApi\";\r\nimport Store from \"../../../redux/Store\";\r\n\r\nexport default function Status(props) {\r\n  console.log(props);\r\n  let history = useHistory();\r\n  const [countsRequest, setCountsRequest] = useState<any>({}); \r\n  const [agent, setAgent] = useState(); \r\n  Store.subscribe(() => {\r\n    setAgent(Store.getState().CheckUserStatus.user.selectedAgent);\r\n    console.log(\"calling store\");\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCountRequest();\r\n    console.log('call status' , agent);\r\n  }, [agent]);\r\n\r\n  const onBookingClick = () => {\r\n    history.push(\"/bookingDetails/ALL\");\r\n  };\r\n  const onPODClick = () => {\r\n    history.push(\"/bookingDetails/PODUPL\");\r\n  };\r\n  const onInvoiceClick = () => {\r\n    history.push(\"/bookingDetails/INVAPPR\");\r\n  };\r\n\r\n\r\n  const getCountRequest = async () => {\r\n    var response = await httpGetCallWithoutHeader(EndPointURL.fetchRequestStatusCountsUrl);\r\n    if (await response.success) {\r\n      var respObj = response.data.data.dataItems[0];\r\n        Object.keys(respObj).forEach(function (key) {\r\n          respObj[key] = respObj[key] < 10 ? \"0\" + respObj[key] : respObj[key];\r\n        });\r\n  \r\n        await setCountsRequest({\r\n          ...countsRequest,\r\n          result: respObj,\r\n        });\r\n    }\r\n  };\r\n\r\n  const onSearchClick = () => {\r\n    history.push(\"/search-booking\");\r\n  };\r\n\r\n  const goBack = () => {\r\n    history.push(\"/tabs/landing\");\r\n  }\r\n\r\n  return (\r\n      <IonPage id=\"status-page\">\r\n        <Header\r\n          label=\"Status\"\r\n          action=\"search\"\r\n          searchClick={onSearchClick}\r\n          showAgent={true}\r\n          customBack={true} \r\n          backClick={goBack}\r\n          agentHeader={true}\r\n        />\r\n        <IonContent fullscreen padding-top className=\"page-content\">\r\n          <IonGrid margin-top>\r\n            <StatusCard\r\n              type=\"All Bookings\"\r\n              total= {countsRequest?.result?.ALL}\r\n              handleClick={onBookingClick}\r\n            />\r\n            <StatusCard\r\n              type=\"Verify POD's\"\r\n              total={countsRequest.result?.PODUPL}\r\n              handleClick={onPODClick}\r\n            />\r\n            <StatusCard\r\n              type=\"Verify Invoices\"\r\n              total={countsRequest.result?.INVAPPR}\r\n              handleClick={onInvoiceClick}\r\n            />\r\n          </IonGrid>\r\n        </IonContent>\r\n      </IonPage>\r\n  );\r\n}\r\n"],"sourceRoot":""}