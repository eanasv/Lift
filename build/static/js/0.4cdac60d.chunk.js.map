{"version":3,"sources":["components/Icon.tsx","services/HttpsServices.js","services/EndPointApi.js","util/EndPointURL.ts","redux/actions/AllActions.tsx"],"names":["Icon","props","classes","useStyles","propsIcon","iconProps","src","name","style","zoom","className","class","slot","createUseStyles","zoom12","slotEnd","position","right","bottom","calenderMargin","zoom3","slotStart","absolutePosition","lastIcon","Http","Plugins","HttpGetRequest","data","a","successData","getAccessToken","url","includes","then","result","access_token","config","headers","header","console","log","Store","dispatch","type","LoginUser","request","method","response","status","success","payLoad","message","handleUnAutharisedCall","catch","error","errorData","errorMessage","JSON","stringify","httprequestStatus","httpPostRequest","content","mobile","info","authUrl","getState","CheckAccessToken","isAccessToken","user","CheckUserStatus","agentType","activeCompanyCode","split","agentCode","userName","EndPointURL","token","refresh_token","doLogin","appUrl","callType","HttpRequest","loginWithAgent","fetchAllDeclaration","confirmUserDetails","body","httpPatchCallWithoutHeaderAndBody","httpGetCallWithoutHeader","httpPostCallWithoutHeaderAndBody","httpPostCallWithoutHeaderAndWithBody","getRequestByDeclaration","declaration","apiBaseUrl","getRequestByContainer","container","getTruckTypeApi","getAddressApi","reduxActions","clearAddressBody","addressDtoList","disableHrs","forEach","element","dropZone","selectedDropZone","addAddressBody","fetchContainerSummaryPayment","req","saveQuickBook","getContainerTypes","baseHost","rootUrl","baseUrl","Capacitor","getPlatform","loginUrl","loginAgent","profileUpdate","confirmDetailUrl","fetchConfirmDetails","profileDataFetch","declarationUrl","quickBookConatainerUrl","quickBookDeclUrl","paymentUrl","paymentStatus","tokenUrl","getAddress","allVehicle","addAddress","rosoomPaymentStatusCheck","deleteAddress","updateAddress","allZone","printReceipt","bookingDetails","containerDetails","reinitializeUrl","contacDetailsUpdateUrl","declSmartSearch","printInvoice","fetchAllNotificationUrl","fetchCountsOfUnreadNotificationsUrl","fetchRequestStatusCountsUrl","cancelRequestContainerUrl","fetchContainerTypes","AddAccessToKen","ActionType","AddAgentType","AddSelectedAgent","AddUser","clearAllAddress"],"mappings":"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","file":"static/js/0.4cdac60d.chunk.js","sourcesContent":["import React from \"react\";\nimport { IonIcon } from \"@ionic/react\";\nimport \"./Icon.css\";\nimport { createUseStyles } from \"react-jss\";\n\nexport default function Icon(props: any) {\n  const classes = useStyles();\n  var propsIcon = props.iconProps; // \"inputIcon\"\n  return (\n    <IonIcon\n      src={\"assets/icon/\" + propsIcon.name + \".svg\"}\n      style={{ zoom: propsIcon.zoom }}\n      className={\n        propsIcon.class\n          ? classes[propsIcon.class] + \" \" + propsIcon.class\n          : // : propsIcon.login\n            // ? classes[propsIcon.class]\n            // : propsIcon.slot === \"end\"\n            // ? classes[propsIcon.class]\n            \"\"\n      }\n      slot={propsIcon.slot}\n    ></IonIcon>\n  );\n}\nconst useStyles = createUseStyles({\n  zoom12: {\n    zoom: 1.4,\n  },\n  slotEnd: {\n    position: \"absolute\",\n    right: 0,\n    zoom: 1.5,\n    bottom: \"1px\",\n  },\n  calenderMargin: {\n    zoom: 1.4,\n    //marginRight: \"0.5rem\",\n  },\n  zoom3: {\n    zoom: 3,\n  },\n  slotStart: {\n    position: \"absolute\",\n    zoom: 1.5,\n  },\n  absolutePosition: {\n    position: \"absolute\",\n  },\n  lastIcon: {\n    zoom: \"1.5\",\n    right: \"3px\",\n    position: \"relative\",\n  },\n});\n","import Store from \"../redux/Store\";\r\nimport * as LoginUser from \"../redux/actionTypes/AllActionTypes\";\r\nimport { Plugins, Capacitor } from \"@capacitor/core\";\r\nimport * as EndPointURL from \"../util/EndPointURL\";\r\n\r\nimport \"@capacitor-community/http\";\r\nconst { Http } = Plugins;\r\n\r\nexport async function HttpGetRequest(data) {\r\n  var httprequestStatus;\r\n  var successData = \"\";\r\n  //let handler = Network.addListener('networkStatusChange', (status) => {\r\n\r\n  httprequestStatus = await getAccessToken(\r\n    data.url.includes(\"auth/mobilelogin\")\r\n  ).then((result) => {\r\n    /*  I add result.token to resolved tempraly token issue   */\r\n    let access_token = result.access_token;\r\n    let config = {\r\n      headers: data.header,\r\n      // headers: {\r\n      //   access_token: access_token,\r\n      //   \"Content-Type\": \"application/json\",\r\n      //   mobile: \"yes\",\r\n      // },\r\n    };\r\n    console.log(config);\r\n    // let config = {};\r\n    config[\"headers\"][\"access_token\"] = access_token;\r\n    config[\"headers\"][\"Content-Type\"] = \"application/json\";\r\n    config[\"headers\"][\"mobile\"] = \"YES\";\r\n    //*********************Commented Code start ************\r\n    //get access token\r\n    return Store.dispatch(async (dispatch) => {\r\n      dispatch({\r\n        type: LoginUser.API_REQUEST_STARTED,\r\n      });\r\n      // let status = await Network.getStatus();\r\n      // console.log(\"Network status before \", JSON.stringify(status));\r\n\r\n      // return await axios\r\n      //   .get(data.url, config)\r\n      return await Http.request({\r\n        method: \"GET\",\r\n        url: data.url,\r\n        headers: config.headers,\r\n        //params: data.header,\r\n      })\r\n\r\n        .then((response) => {\r\n          console.log(response);\r\n          if (\r\n            response.data.status === \"FAIL\" ||\r\n            response.data.status === \"fail\" ||\r\n            response.data.status === \"error\" ||\r\n            response.status === \"error\" ||\r\n            response.data.status === \"Error\" ||\r\n            response.status === 500 ||\r\n            response.status === 404\r\n          ) {\r\n            successData = { success: false, data: response.data };\r\n            dispatch({\r\n              type: LoginUser.API_REQUEST_FAILURE,\r\n              payLoad: response.data.message,\r\n            });\r\n          } else if (response.status == 401) {\r\n            handleUnAutharisedCall(data, \"get\");\r\n          } else {\r\n            successData = { success: true, data: response.data };\r\n          }\r\n          // if (\r\n          //   response.data.status == \"FAIL\" ||\r\n          //   response.data.status == \"fail\" ||\r\n          //   response.data.status == \"error\"\r\n          // ) {\r\n          //   successData = { success: false, data: response.data };\r\n          //   dispatch({\r\n          //     type: LoginUser.API_REQUEST_FAILURE,\r\n          //     payLoad: response.data.message,\r\n          //   });\r\n          // } else if (response.status === 401) {\r\n          //   console.log(44444444000001111);\r\n          //   httprequestStatus = getAccessToken(\r\n          //     data.url.includes(\"mobile/api/auth\")\r\n          //   );\r\n          //   successData = { success: \"401\", data: \"\" };\r\n          // } else {\r\n          //   successData = { success: true, data: response.data };\r\n          // }\r\n          dispatch({\r\n            type: LoginUser.API_REQUEST_SUCCESS,\r\n          });\r\n          //const successData = { success: true, data: response.data };\r\n          return successData;\r\n        })\r\n        .catch(function (error) {\r\n          // handle error\r\n          const errorData = { success: false, data: error };\r\n          if (!error.success) {\r\n            dispatch({\r\n              type: LoginUser.API_REQUEST_FAILURE,\r\n              payLoad: error.message,\r\n            });\r\n          } else {\r\n            dispatch({\r\n              type: LoginUser.API_REQUEST_FAILURE,\r\n              payLoad: error.errorMessage,\r\n            });\r\n          }\r\n          console.error(\"error on \", JSON.stringify(error));\r\n          return errorData;\r\n        });\r\n      //************End */\r\n    });\r\n    //************End */\r\n  });\r\n  return httprequestStatus;\r\n}\r\n\r\nexport async function httpPostRequest(content) {\r\n  var contenData = {};\r\n  console.log(content.url);\r\n  var successData = \"\";\r\n  var httprequestStatus;\r\n\r\n  httprequestStatus = await getAccessToken(\r\n    content.url.includes(\"auth/mobilelogin\")\r\n  ).then((result) => {\r\n    let access_token = result.access_token;\r\n    let config = {\r\n      headers: {\r\n        headers: {\r\n          access_token: access_token,\r\n          mobile: \"YES\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      },\r\n    };\r\n    // config[\"headers\"][\"Content-Type\"] = \"application/json\";\r\n    // config[\"headers\"][\"Access-Control-Allow-Origin\"] = \"*\";\r\n    //get access token\r\n    return Store.dispatch(async (dispatch) => {\r\n      dispatch({\r\n        type: LoginUser.API_REQUEST_STARTED,\r\n      });\r\n\r\n      contenData = content.data;\r\n      // return await axios\r\n      //   .post(content.url, content.data, config.headers)\r\n      return await Http.request({\r\n        method: \"POST\",\r\n        url: content.url,\r\n        headers: config.headers.headers,\r\n        data: content.data,\r\n        // data: JSON.parse(JSON.stringify(content.data)),\r\n      })\r\n        .then((response) => {\r\n          console.info(response);\r\n          dispatch({\r\n            type: LoginUser.API_REQUEST_SUCCESS,\r\n          });\r\n          console.log(response.data.status);\r\n          if (\r\n            response.data.status === \"FAIL\" ||\r\n            response.data.status === \"fail\" ||\r\n            response.data.status === \"error\" ||\r\n            response.status === \"error\" ||\r\n            response.data.status === \"Error\" ||\r\n            response.status === 500 ||\r\n            response.status === 404\r\n          ) {\r\n            successData = { success: false, data: response.data };\r\n          } else {\r\n            successData = { success: true, data: response.data };\r\n          }\r\n\r\n          return successData;\r\n        })\r\n        .catch(function (error) {\r\n          console.info(error);\r\n          // handle error\r\n          dispatch({\r\n            type: LoginUser.API_REQUEST_FAILURE,\r\n          });\r\n          console.error(\"Error on \", JSON.stringify(error));\r\n          const errorData = { success: false, data: error };\r\n          return errorData;\r\n        });\r\n    });\r\n  });\r\n  return httprequestStatus;\r\n}\r\nexport async function getAccessToken(authUrl) {\r\n  var data;\r\n  console.log(Store.getState().CheckAccessToken);\r\n  if (!authUrl) {\r\n    if (Store.getState().CheckAccessToken.status) {\r\n      let isAccessToken = await Store.getState().CheckAccessToken;\r\n\r\n      return isAccessToken.user;\r\n    } else {\r\n      console.log(\"api call for access-token\");\r\n      let user = Store.getState().CheckUserStatus.user;\r\n\r\n      var agentType = user.activeCompanyCode?.split(\"-\")[0];\r\n      var agentCode = user.activeCompanyCode?.split(\"-\")[1];\r\n      if (agentCode && agentType && user.userName) {\r\n        await Store.dispatch(async (dispatch) => {\r\n          dispatch({\r\n            type: LoginUser.API_REQUEST_STARTED,\r\n          });\r\n          // let url =\r\n          //   EndPointURL.tokenUrl + \"&agentCode=F7100&agentType=F&userName=fzuser\";\r\n          let url =\r\n            EndPointURL.tokenUrl +\r\n            \"&agentCode=\" +\r\n            agentCode +\r\n            \"&agentType=\" +\r\n            agentType +\r\n            \"&userName=\" +\r\n            user.userName;\r\n          // data = await axios\r\n          // .get(url) // access token api\r\n          data = await Http.request({\r\n            method: \"GET\",\r\n            url: url,\r\n          })\r\n            .then((response) => {\r\n              dispatch({\r\n                type: LoginUser.API_REQUEST_SUCCESS,\r\n              });\r\n              if (response.status == 500) {\r\n                dispatch({\r\n                  type: LoginUser.REMOVE_ACCESS_TOKEN,\r\n                });\r\n              } else {\r\n                dispatch({\r\n                  type: LoginUser.ADD_ACCESS_TOKEN,\r\n                  data: {\r\n                    access_token: response.data.token,\r\n                    refresh_token: \"00\",\r\n                  },\r\n                });\r\n                return {\r\n                  access_token: response.data.token,\r\n                  refresh_token: \"00\",\r\n                };\r\n              }\r\n            })\r\n\r\n            .catch(function (error) {\r\n              // handle error\r\n              dispatch({\r\n                type: LoginUser.API_REQUEST_FAILURE,\r\n              });\r\n              console.error(\"Error on \", JSON.stringify(error));\r\n              return \"error\";\r\n            });\r\n        });\r\n      }\r\n      return data;\r\n    }\r\n  }\r\n  return { access_token: \"\" };\r\n}\r\n\r\nexport function handleUnAutharisedCall(data, type) {\r\n  Store.dispatch(async (dispatch) => {\r\n    dispatch({\r\n      type: LoginUser.REMOVE_ACCESS_TOKEN,\r\n    });\r\n  });\r\n  getAccessToken(data.url.includes(\"auth/mobilelogin\")).then((result) => {\r\n    if (type === \"get\") {\r\n      HttpGetRequest(data);\r\n    } else {\r\n      httpPostRequest(data);\r\n    }\r\n  });\r\n}\r\n","import * as HttpRequest from \"./HttpsServices\";\nimport * as apiBaseUrl from \"../util/EndPointURL\";\nimport Store from \"../redux/Store\";\nimport * as reduxActions from \"../redux/actions/AllActions\";\nimport * as ActionType from \"../redux/actionTypes/AllActionTypes\";\n\nexport const getBookingByStatus = (status) => {\n  let appUrl = `${apiBaseUrl}/requestDetails/fetchAllRequestDetails?statusCode=${status}&pgSize=10&pgNo=0&option=ALL&locale=en`;\n  var data = {\n    url: appUrl,\n    callType: \"get\",\n    header: { headers: \"\" },\n  };\n  HttpRequest.HttpGetRequest(data)\n    .then((response) => {\n      console.log(\"RESPONSE +++++ {} \", JSON.stringify(response));\n      return response;\n    })\n    .catch(function (error) {\n      console.log(\"ERROR +++ {} \", error);\n    });\n};\nexport const smartSearch = async (appUrl) => {\n  let data = {\n    url: appUrl,\n    callType: \"get\",\n    header: { headers: \"\" },\n  };\n  try {\n    return await HttpRequest.HttpGetRequest(data);\n  } catch (error) {\n    console.log(\"ERROR +++ {} \", error);\n  }\n};\n\nexport const getTaxReciept = async (appUrl) => {\n  let data = {\n    url: appUrl,\n    callType: \"get\",\n    header: { headers: \"\" },\n  };\n  try {\n    return await HttpRequest.HttpGetRequest(data);\n  } catch (error) {\n    console.log(\"ERROR +++ {} \", error);\n  }\n};\n\nexport const doLogin = async (appUrl, header) => {\n  let data = {\n    url: appUrl,\n    callType: \"get\",\n    header: header,\n  };\n  try {\n    return await HttpRequest.HttpGetRequest(data);\n  } catch (error) {\n    console.log(\"ERROR +++ {} \", error);\n  }\n};\n\nexport const loginWithAgent = async (appUrl, header) => {\n  let data = {\n    url: appUrl,\n    callType: \"get\",\n    header: header,\n  };\n  try {\n    return await HttpRequest.HttpGetRequest(data);\n  } catch (error) {\n    console.log(\"ERROR +++ {} \", error);\n  }\n};\n\nexport const fetchAllDeclaration = async (appUrl) => {\n  let data = {\n    url: appUrl,\n    callType: \"get\",\n    header: {},\n  };\n  try {\n    return await HttpRequest.HttpGetRequest(data);\n  } catch (error) {\n    console.log(\"ERROR +++ {} \", error);\n  }\n};\n\nexport const confirmUserDetails = async (appUrl, body) => {\n  let data = {\n    url: appUrl,\n    callType: \"post\",\n    header: { headers: \"\" },\n    data: body,\n  };\n  try {\n    return await HttpRequest.httpPostRequest(data);\n  } catch (error) {\n    console.log(\"ERROR +++ {} \", error);\n  }\n};\n\nexport const httpPatchCallWithoutHeaderAndBody = async (appUrl) => {\n  let data = {\n    url: appUrl,\n    callType: \"patch\",\n    header: {},\n  };\n  try {\n    return await HttpRequest.httpPostRequest(data);\n  } catch (error) {\n    console.log(\"ERROR +++ {} \", error);\n  }\n};\n\nexport const httpGetCallWithoutHeader = async (appUrl) => {\n  let data = {\n    url: appUrl,\n    callType: \"get\",\n    header: {},\n  };\n  try {\n    return await HttpRequest.HttpGetRequest(data);\n  } catch (error) {\n    console.log(\"ERROR +++ {} \", error);\n  }\n};\n\nexport const httpPostCallWithoutHeaderAndBody = async (appUrl) => {\n  let data = {\n    url: appUrl,\n    callType: \"post\",\n    header: {},\n    data: {},\n  };\n  try {\n    return await HttpRequest.httpPostRequest(data);\n  } catch (error) {\n    console.log(\"ERROR +++ {} \", error);\n  }\n};\n\nexport const httpPostCallWithoutHeaderAndWithBody = async (appUrl, body) => {\n  let data = {\n    url: appUrl,\n    callType: \"post\",\n    header: {},\n    data: body,\n  };\n  try {\n    return await HttpRequest.httpPostRequest(data);\n  } catch (error) {\n    console.log(\"ERROR +++ {} \", error);\n  }\n};\n\nexport const getRequestByDeclaration = async (declaration) => {\n  let appUrl = apiBaseUrl.quickBookDeclUrl + declaration;\n  let data = {\n    url: appUrl,\n    callType: \"get\",\n    header: { headers: \"\" },\n  };\n  try {\n    return await HttpRequest.HttpGetRequest(data);\n  } catch (error) {\n    console.log(\"ERROR +++ {} \", error);\n  }\n};\n\nexport const getRequestByContainer = async (container) => {\n  let appUrl = apiBaseUrl.quickBookConatainerUrl + container;\n  let data = {\n    url: appUrl,\n    callType: \"get\",\n    header: { headers: \"\" },\n  };\n  try {\n    return await HttpRequest.HttpGetRequest(data);\n  } catch (error) {\n    console.log(\"ERROR +++ {} \", error);\n  }\n};\n\nexport const getTruckTypeApi = async () => {\n  let appUrl = apiBaseUrl.allVehicle;\n  let data = {\n    url: appUrl,\n    callType: \"get\",\n    header: { headers: \"\" },\n  };\n  try {\n    return await HttpRequest.HttpGetRequest(data);\n  } catch (error) {\n    console.log(\"ERROR +++ {} \", error);\n  }\n};\n\nexport const getAddressApi = async () => {\n  let appUrl = apiBaseUrl.getAddress;\n  let data = {\n    url: appUrl,\n    callType: \"get\",\n    header: { headers: \"\" },\n  };\n\n  try {\n    return await HttpRequest.HttpGetRequest(data)\n      .then(async (result) => {\n        if (result.success) {\n          var clearAddressBody = await reduxActions.clearAllAddress();\n          if (clearAddressBody) Store.dispatch(clearAddressBody);\n\n          var reduxAdrress = {\n            addressDtoList: result.data.addressDtoList,\n            disableHrs: result.data.disableHrs,\n          };\n          result.data.addressDtoList.forEach((element) => {\n            element.dropZone = element.selectedDropZone;\n          });\n          result.data.addressDtoList.disableHrs = result.data.disableHrs;\n          var addAddressBody = await reduxActions.addAddress(\n            result.data.addressDtoList\n          );\n          Store.dispatch(addAddressBody);\n        }\n        if (result.data) {\n        } else {\n          // props.history.push(\"/home\");\n        }\n        return result.data;\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  } catch (error) {\n    console.log(\"ERROR +++ {} \", error);\n  }\n};\n\nexport const fetchContainerSummaryPayment = async (req) => {\n  let appUrl = apiBaseUrl.fetchContainerSummaryPayment;\n  let data = {\n    url: appUrl,\n    callType: \"post\",\n    data: req,\n  };\n  try {\n    return await HttpRequest.httpPostRequest(data);\n  } catch (error) {\n    console.log(\"ERROR +++ {} \", error);\n  }\n};\n\nexport const saveQuickBook = async (req) => {\n  let appUrl = apiBaseUrl.paymentUrl;\n  let data = {\n    url: appUrl,\n    callType: \"post\",\n    data: req,\n  };\n  try {\n    return await HttpRequest.httpPostRequest(data);\n  } catch (error) {\n    console.log(\"ERROR +++ {} \", error);\n  }\n};\n\nexport const getContainerTypes = async () => {\n  let appUrl = apiBaseUrl.fetchContainerTypes;\n  console.log(appUrl);\n  let data = {\n    url: appUrl,\n    callType: \"get\",\n    header: { headers: \"\" },\n  };\n  try {\n    return await HttpRequest.HttpGetRequest(data);\n  } catch (error) {\n    console.log(\"ERROR +++ {} \", error);\n  }\n};\n\n// export const fetchContainerTypes = async (req) => {\n//   let appUrl = apiBaseUrl.saveBook;\n//   let data = {\n//     url: appUrl,\n//     callType: \"post\",\n//     data: req,\n//   };\n//   try {\n//     return await HttpRequest.HttpGetRequest(data);\n//   } catch (error) {\n//     console.log(\"ERROR +++ {} \", error);\n//   }\n// };\n","import { Capacitor } from \"@capacitor/core\";\n\nexport const apiBaseUrl = (): string => {\n  return \"/ptms/mobile/api/secure\";\n};\n\nlet baseHost;\nif (Capacitor.getPlatform() !== \"web\") {\n\t// baseHost= \"http://10.0.2.2:8080\";\n//   baseHost = \"https://dtdev.dubaitrade.ae\";\n//  baseHost = \"https://dtsit.dubaitrade.ae\";\n //baseHost=\"https://eservices.dubaitrade.ae.ae\"\n//  baseHost = \"https://eservicesuat.dubaitrade.ae\"\n  baseHost = \"http://8b2be9e86081.ngrok.io\"\n} else {\n    baseHost= \"http://localhost:8080\";\n   //baseHost= 'https://dtdev.dubaitrade.ae'\n  //baseHost = \"https://dtsit.dubaitrade.ae\";\n  // baseHost = \"https://eservicesuat.dubaitrade.ae\"\n  //baseHost=\"https://eservices.dubaitrade.ae\"\n}\nconst rootUrl = \"/ptms/mobile/api/\";\nexport const baseUrl = baseHost + rootUrl + \"secure\";\nexport const loginUrl = baseHost + rootUrl + \"auth/mobilelogin\";\nexport const loginAgent = baseUrl + \"/mobileLoginWithAgentCode\"\nexport const profileUpdate=\"/user/updateDetails\"\nexport const confirmDetailUrl = baseUrl + \"/user/confirmDetails\";\nexport const fetchConfirmDetails = baseUrl + \"/fetchConfirmDetails?userName=\";\nexport const profileDataFetch = baseUrl + \"/user/fetchDetails?userName=\";\nexport const declarationUrl =baseUrl+ \"/boe/search?\";\nexport const quickBookConatainerUrl =baseUrl+ \"/boe/container?ref=\";\nexport const quickBookDeclUrl = baseUrl+\"/boe/declaration?ref=\";\nexport const paymentUrl = baseUrl+baseUrl+ baseUrl+\"/requestDetails/saveRequestDetails?locale=en\";\nexport const paymentStatus = \"/payment/status/\";\nexport const tokenUrl = baseHost + rootUrl + \"auth/getToken?locale=en\";\nexport const getAddress = baseUrl +\"/address/fetchDetails\";\nexport const fetchContainerSummaryPayment = baseUrl+\"/boe/fetchContainerSummaryAndPayment?locale=en\";\nexport const allVehicle = baseUrl+\"/vehicleType/fetchAll\";\nexport const addAddress = baseUrl + \"/address/create\";\nexport const rosoomPaymentStatusCheck = baseUrl + \"/payment/status/\";\nexport const deleteAddress = baseUrl + \"/address/delete/\";\nexport const updateAddress = baseUrl + \"/address/update\";\nexport const allZone = baseUrl + \"/zone/fetchAll\";\nexport const printReceipt = baseHost + rootUrl + \"public/certificate/paymentReceipt/\";\nexport const bookingDetails= baseUrl +\"/requestDetails/search?\";\nexport const containerDetails= baseUrl +\"/requestDetails/paymentSummary?\";\nexport const reinitializeUrl =  baseUrl + \"/requestDetails/\";\nexport const contacDetailsUpdateUrl = baseUrl + \"/requestContainerDetails/updateRequestContainerDetails\";\nexport const declSmartSearch=baseUrl+\"/boe/smartDeclaration?ref=\"\nexport const printInvoice = baseHost + rootUrl + \"public/certificate/paymentInvoice/\";\nexport const fetchAllNotificationUrl = baseUrl + \"/userNotifications\";\nexport const fetchCountsOfUnreadNotificationsUrl = baseUrl + \"/userNotifications/counts\";\nexport const fetchRequestStatusCountsUrl = baseUrl + \"/requestDetails/count\";\nexport const cancelRequestContainerUrl = baseUrl + \"/requestContainerDetails/cancel\";\nexport const fetchContainerTypes=baseUrl+\"/boe/fetchContainerTypes\"\n","import * as ActionType from \"../actionTypes/AllActionTypes\";\r\n\r\nexport const AddAccessToKen = (data) => {\r\n  return {\r\n    type: ActionType.ADD_ACCESS_TOKEN,\r\n    data: {\r\n      access_token: data,\r\n      refresh_token: \"00\",\r\n    },\r\n  };\r\n};\r\n\r\nexport const AddAgentType = (data) => {\r\n  return {\r\n    type: ActionType.ADD_AGENTTYPE,\r\n    payLoad: data,\r\n  };\r\n};\r\n\r\nexport const AddSelectedAgent = (data) => {\r\n  return {\r\n    type: ActionType.ADD_SELECTED_AGENT,\r\n    payLoad: data,\r\n  };\r\n};\r\n\r\nexport const AddUser = (data) => {\r\n  return {\r\n    type: ActionType.ADD_USER,\r\n    payLoad: data,\r\n  };\r\n};\r\n\r\nexport const clearAllAddress = () => {\r\n  return {\r\n    type: ActionType.CLEAR_ALL_ADDRESS,\r\n    payLoad: \"\",\r\n  };\r\n};\r\n\r\nexport const addAddress = (data) => {\r\n  return {\r\n    type: ActionType.ADD_ADDRESS,\r\n    payLoad: data,\r\n  };\r\n};\r\n\r\nexport const updateAddress = (data) => {\r\n  return {\r\n    type: ActionType.UPDATE_ADDRESS,\r\n    payLoad: data,\r\n  };\r\n};\r\n\r\nexport const deleteAddress = (data) => {\r\n  return {\r\n    type: ActionType.REMOVE_ADDRESS,\r\n    payLoad: data,\r\n  };\r\n};\r\n\r\n"],"sourceRoot":""}