{"version":3,"sources":["components/Header.tsx","util/ClearReduxStore.js","util/Utilities.ts","components/txtinput/TxtInput.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray.js","components/alert/Alert.tsx","pages/profile/Profile.tsx","pages/landingpage/LandingPage.tsx","pages/address/addressCard/AddressCard.tsx","pages/address/Address.tsx","pages/MainTabs.tsx","pages/myBooking/status/statusCard/StatusCard.tsx","pages/myBooking/status/Status.tsx"],"names":["Header","HeaderParam","useState","search","check","close","home","info","actionType","setActionType","userDetails","Store","getState","CheckUserStatus","user","checked","setChecked","checkedLabel","setCheckedLabel","backIconProps","name","slot","zoom","useEffect","updateActionType","action","history","useHistory","back","e","customBack","backClick","goBack","myValue","homeButtonClicked","dispatch","type","LoginUserTypes","locationProps","push","selectUserType","a","data","detail","value","url","EndPointURL","agentCode","agentType","endPointHeader","userName","userType","loginWithAgent","response","result","dataItems","success","reduxActions","accessToken","activeCompanyCode","selectedAgent","style","agentHeader","height","className","paddingBottom","checkedProps","hidden","showChecked","fill","onClick","Icon","iconProps","onIonChange","addContainerToCart","checkAndUncheckAll","label","searchClick","icon","minWidth","infoClick","informationCircle","checkClick","closeSharp","agents","interface","disabled","showAgent","length","backgroundColor","interfaceOptions","cssClass","map","item","index","key","agentName","src","isEmpty","trim","isValid","dataType","delimiter","replaceAll","RegExp","REGEX_MAP","test","getPatternValue","pattern","cleaned","finalstr","ctr","i","validateEmail","mail","validatePhone","number","validateMobile","addTimeToDateTime","date","timeToAdd","d2","Date","setMinutes","getMinutes","convertToMillSeconds","interval","h","m","timeParts","split","TxtInput","onChange","required","errors","datatype","description","placeholder","onBlur","readonly","contactForm","max","validation","setvalidation","width","padding","spellCheck","autocapitalize","onKeyDown","preventDefault","validate","val","target","clearInput","autocomplete","onIonBlur","maxlength","color","_toArray","arr","Alert","props","alertAction","alertProps","id","isOpen","isShow","header","message","content","itemName","inputs","buttons","text","role","handler","console","log","Profile","firstName","lastName","email","mobile","submitted","valid","form","setForm","setErrors","login","errs","handleChange","noValidate","onSubmit","autoComplete","arrowForwardOutline","LandingPage","notficationCount","setNotificationCount","showModal","setShowModal","errorMessage","setErrorMessage","input","setInput","httpGetCallWithoutHeader","then","undefined","find","clickedNotification","httpPatchCallWithoutHeaderAndBody","onDidDismiss","subHeader","backdropDismiss","chevronForwardOutline","AddressCard","address","setAddress","agent","setAgent","alertPopup","showAlertPopup","setMessage","setItem","subscribe","Addresses","getAddress","addressess","addressDtoList","forEach","element","dropZone","selectedDropZone","disableHrs","isSelected","newAddressess","payLoad","code","error","httpPostCallWithoutHeaderAndBody","addCircle","onAddressSelect","size","addressNickname","selectedDropZoneLabel","dropAddress","consigneeContactNumber","createMode","updateAddress","showAlert","Address","class","fullscreen","editable","MainTabs","selected","direction","exact","path","to","render","Status","tab","href","React","memo","MenuParam","handleClick","total","countsRequest","setCountsRequest","getCountRequest","respObj","Object","keys","padding-top","margin-top","ALL","PODUPL","INVAPPR"],"mappings":"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","file":"static/js/4.1cf1a605.chunk.js","sourcesContent":["import {\r\n  IonButton,\r\n  IonCheckbox,\r\n  IonHeader,\r\n  IonIcon,\r\n  IonImg,\r\n  IonLabel,\r\n  IonSelect,\r\n  IonSelectOption,\r\n  IonText,\r\n  IonToolbar,\r\n} from \"@ionic/react\";\r\nimport { closeSharp, informationCircle, search } from \"ionicons/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport ClearReduxStore from \"../util/ClearReduxStore\";\r\nimport \"./Header.scss\";\r\nimport Icon from \"./Icon\";\r\nimport Store from \"../redux/Store\";\r\nimport * as EndPointURL from \"../util/EndPointURL\";\r\nimport * as reduxActions from \"../redux/actions/AllActions\";\r\nimport { loginWithAgent } from \"../services/EndPointApi\";\r\n\r\ninterface HeaderParam {\r\n  label?: string;\r\n  action?: string;\r\n  showAgent?: boolean;\r\n  agentHeader?: boolean;\r\n  customBack?: boolean;\r\n  searchClick?(e: any): void;\r\n  infoClick?(e: any): void;\r\n  checkClick?(e: any): void;\r\n  backClick?(e: any): void;\r\n  locationProps?: any;\r\n  checkedProps?: any;\r\n}\r\nconst Header: React.FC<HeaderParam> = (HeaderParam) => {\r\n  const [actionType, setActionType] = useState({\r\n    search: true,\r\n    check: true,\r\n    close: true,\r\n    home: true,\r\n    info: false,\r\n  });\r\n\r\n  var userDetails = Store.getState().CheckUserStatus.user;\r\n\r\n  const [checked, setChecked] = useState(false);\r\n  const [checkedLabel, setCheckedLabel] = useState(\"Select All\");\r\n  const backIconProps = {\r\n    name: \"back-arrow\",\r\n    slot: \"icon-only\",\r\n    zoom: \"\",\r\n  };\r\n  const homeIconProps = {\r\n    name: \"home-new\",\r\n    slot: \"icon-only\",\r\n    zoom: \"\",\r\n  };\r\n  const checkIconProps = {\r\n    name: \"Check\",\r\n    slot: \"icon-only\",\r\n    zoom: \"\",\r\n  };\r\n\r\n  function checkAndUncheckAll(checked) {\r\n    setChecked(checked);\r\n    if (checked) {\r\n      setCheckedLabel(\"Unselect All\");\r\n      HeaderParam.checkedProps.addContainerToCart(\"\", \"\", \"checked\");\r\n    } else {\r\n      HeaderParam.checkedProps.addContainerToCart(\"\", \"\", \"unchecked\");\r\n      setCheckedLabel(\"Select All\");\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    updateActionType(HeaderParam.action ? HeaderParam.action : \"none\");\r\n  }, []);\r\n\r\n  let history = useHistory();\r\n  const back = (e: any) => {\r\n    if (HeaderParam.customBack) {\r\n      HeaderParam.backClick(e);\r\n    } else {\r\n      history.goBack();\r\n    }\r\n  };\r\n\r\n  const updateActionType = (myValue: string) => {\r\n    if (myValue) {\r\n      if (myValue === \"search\") {\r\n        setActionType({\r\n          search: false,\r\n          check: true,\r\n          close: true,\r\n          home: true,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"check\") {\r\n        setActionType({\r\n          search: true,\r\n          check: false,\r\n          close: true,\r\n          home: true,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"close\") {\r\n        setActionType({\r\n          search: true,\r\n          check: true,\r\n          close: false,\r\n          home: true,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"home\") {\r\n        setActionType({\r\n          search: true,\r\n          check: true,\r\n          close: true,\r\n          home: false,\r\n          info: true,\r\n        });\r\n      } else if (myValue === \"info\") {\r\n        setActionType({\r\n          search: true,\r\n          check: true,\r\n          close: true,\r\n          home: true,\r\n          info: false,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  function homeButtonClicked() {\r\n    ClearReduxStore();\r\n    HeaderParam.locationProps.history.push(\"/tabs/landing\");\r\n  }\r\n\r\n  const selectUserType = async (e: any) => {\r\n    let data = e.detail.value;\r\n    let url =\r\n      EndPointURL.loginAgent +\r\n      \"?agentCode=\" +\r\n      data.agentCode +\r\n      \"&agentType=\" +\r\n      data.agentType;\r\n\r\n    var endPointHeader = {\r\n      userName: userDetails.userName,\r\n      userType: \"IMPORTER_APP\",\r\n    };\r\n\r\n    var response = await loginWithAgent(url, endPointHeader);\r\n    var result = response.data.data.dataItems[0];\r\n    if (await response.success) {\r\n      var accessToken = await reduxActions.AddAccessToKen(result.accessToken);\r\n      if (accessToken) Store.dispatch(accessToken);\r\n\r\n      var agentType = await reduxActions.AddAgentType(\r\n        result.user.activeCompanyCode\r\n      );\r\n      if (agentType) Store.dispatch(agentType);\r\n\r\n      var selectedAgent = await reduxActions.AddSelectedAgent(data);\r\n\r\n      if (selectedAgent) Store.dispatch(selectedAgent);\r\n\r\n      var test = Store.getState().CheckUserStatus;\r\n    }\r\n  };\r\n\r\n  const agentCodeoptions = {\r\n    cssClass: \"agent-interface\",\r\n  };\r\n\r\n  return (\r\n    <IonHeader\r\n      style={HeaderParam.agentHeader ? { height: \"102px\" } : { height: \"10%\" }}\r\n    >\r\n      <IonToolbar className=\"header\">\r\n        <div\r\n          className=\"mainContainer\"\r\n          style={!HeaderParam.agentHeader ? { paddingBottom: 0 } : {}}\r\n        >\r\n          {HeaderParam.checkedProps ? (\r\n            <div\r\n              className=\"selectAllBg\"\r\n              hidden={!HeaderParam.checkedProps.showChecked}\r\n            >\r\n              <div>\r\n                <IonButton\r\n                  fill=\"clear\"\r\n                  onClick={(e) => {\r\n                    back(e);\r\n                  }}\r\n                >\r\n                  <Icon iconProps={backIconProps} />\r\n                </IonButton>\r\n              </div>\r\n              <div className=\"checkBoxContainer\">\r\n                <IonCheckbox\r\n                  className=\"checkBox\"\r\n                  checked={checked}\r\n                  onIonChange={(e) => checkAndUncheckAll(e.detail.checked)}\r\n                />\r\n              </div>\r\n              <div className=\"checkBoxLabelCol\">\r\n                <IonLabel className=\"checkBoxLabel\">{checkedLabel}</IonLabel>{\" \"}\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          <div className=\"backArrow\">\r\n            {HeaderParam.label != \"Home\" && actionType.close ? (\r\n              <IonButton\r\n                fill=\"clear\"\r\n                onClick={(e) => {\r\n                  back(e);\r\n                }}\r\n              >\r\n                <Icon iconProps={backIconProps} />\r\n              </IonButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n          <div className=\"header-label\">\r\n            {\" \"}\r\n            <IonText>{HeaderParam.label}</IonText>\r\n          </div>\r\n          <div className=\"header-right\">\r\n            <IonButton\r\n              hidden={actionType.search}\r\n              fill=\"clear\"\r\n              onClick={HeaderParam.searchClick}\r\n            >\r\n              <IonIcon\r\n                slot=\"icon-only\"\r\n                icon={search}\r\n                style={{ minWidth: \"30px\" }}\r\n              />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.info}\r\n              fill=\"clear\"\r\n              onClick={HeaderParam.infoClick}\r\n            >\r\n              <IonIcon\r\n                slot=\"icon-only\"\r\n                icon={informationCircle}\r\n                style={{ minWidth: \"30px\" }}\r\n              />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.check}\r\n              fill=\"clear\"\r\n              onClick={HeaderParam.checkClick}\r\n            >\r\n              {/* <IonIcon slot=\"icon-only\" src=\"\" style={{minWidth:'30px'}}/> */}\r\n              <Icon iconProps={checkIconProps} />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.home}\r\n              fill=\"clear\"\r\n              onClick={(e) => homeButtonClicked()}\r\n            >\r\n              <Icon iconProps={homeIconProps} />\r\n            </IonButton>\r\n            <IonButton\r\n              hidden={actionType.close}\r\n              fill=\"clear\"\r\n              onClick={(e) => {\r\n                back(e);\r\n              }}\r\n            >\r\n              <IonIcon slot=\"icon-only\" icon={closeSharp} />\r\n            </IonButton>\r\n            <IonButton hidden={HeaderParam.action !== \"\"} fill=\"clear\">\r\n              <IonIcon />\r\n            </IonButton>\r\n          </div>\r\n        </div>\r\n        {userDetails.agents && HeaderParam.agentHeader && (\r\n          <IonToolbar className=\"agent-code-header\">\r\n            <IonSelect\r\n              value={userDetails.selectedAgent}\r\n              interface=\"popover\"\r\n              onIonChange={(e) => selectUserType(e)}\r\n              disabled={\r\n                !HeaderParam.showAgent || userDetails.agents.length == 1\r\n              }\r\n              style={\r\n                !HeaderParam.showAgent ? { backgroundColor: \"#DDF1FF\" } : {}\r\n              }\r\n              interfaceOptions={agentCodeoptions}\r\n            >\r\n              {userDetails.agents.map((item, index) => {\r\n                return (\r\n                  <IonSelectOption\r\n                    value={item}\r\n                    key={index}\r\n                    className=\"select-agent-opt\"\r\n                  >\r\n                    {item.agentCode + \"-\" + item.agentName}\r\n                  </IonSelectOption>\r\n                );\r\n              })}\r\n            </IonSelect>\r\n            <IonIcon\r\n              src=\"assets/icon/arrow-down.svg\"\r\n              className=\"arrow-down-icon\"\r\n              hidden={!HeaderParam.showAgent || userDetails.agents.length == 1}\r\n            />\r\n          </IonToolbar>\r\n        )}\r\n        {/* </IonImg> */}\r\n      </IonToolbar>\r\n    </IonHeader>\r\n  );\r\n};\r\nexport default Header;\r\n","import Store from \"../redux/Store\";\nimport * as LoginUserTypes from \"../redux/actionTypes/AllActionTypes\";\n\nexport default function ClearReduxStore() {\n  Store.dispatch({ type: LoginUserTypes.BOOK_TRUCK_CLEAR });\n  Store.dispatch({ type: LoginUserTypes.REMOVE_ALL_CONTAINERS });\n  Store.dispatch({ type: LoginUserTypes.REMOVE_ALL_TRUCK });\n}\n","import { REGEX_MAP } from \"./Constants\";\r\nimport moment from \"moment\";\r\nconst milliseconds = (h, m, s) => ((h * 60 * 60 + m * 60 + s) * 1000);\r\n\r\nvar disabledHr;\r\nexport const isEmpty = (data: any) => {\r\n  if(data===null){\r\n  data=\"\"}\r\n  return data.trim() === \"\";\r\n};\r\n\r\nexport const isValid = (dataType: any, data: any, delimiter?: string) => {\r\n  if (delimiter) {\r\n    data = data.replaceAll(delimiter, \"\");\r\n  }\r\n  return new RegExp(REGEX_MAP[dataType]).test(data);\r\n};\r\n\r\nexport const getPatternValue = (data: any, pattern: any, delimiter: any) => {\r\n  if (!data || !pattern || !delimiter) {\r\n    return data;\r\n  }\r\n  var cleaned = data.replaceAll(\" \", \"\").replaceAll(delimiter, \"\");\r\n  let finalstr = \"\";\r\n  let ctr = 0;\r\n\r\n  for (let i = 0; i < pattern.length && ctr < cleaned.length; i++) {\r\n    if (pattern[i] != delimiter) {\r\n      finalstr = finalstr + cleaned[ctr];\r\n      ctr = ctr + 1;\r\n    } else {\r\n      finalstr = finalstr + delimiter;\r\n    }\r\n  }\r\n  return finalstr;\r\n};\r\n\r\nexport const stringToColour = function(str) {\r\n  var hash = 0;\r\n  for (var i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n  var colour = '#';\r\n  for (var i = 0; i < 3; i++) {\r\n      var value = (hash >> (i * 8)) & 0xFF;\r\n      colour += ('00' + value.toString(16)).substr(-2);\r\n  }\r\n  return colour;\r\n}\r\n\r\nexport const validateEmail=(mail) =>{\r\n  return new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$/i).test(mail);\r\n}\r\n\r\nexport const validatePhone=(number) =>{\r\n  let regexp =  new RegExp(\"^\\\\d{8}$\");\r\n  var nameTest = regexp.test(number);\r\n  return nameTest;\r\n}\r\n\r\nexport const validateMobile=(number) =>{\r\n  let regexp =  new RegExp(\"^\\\\d{9}$\");\r\n  var nameTest = regexp.test(number);\r\n  return nameTest;\r\n}\r\n\r\nexport function addTimeToDateTime(date: any, timeToAdd: any) {\r\n  var d2 = new Date(date);\r\n  return new Date(d2.setMinutes(date.getMinutes() + timeToAdd));\r\n  //return updatedDate;\r\n}\r\n\r\nexport function setDisabledMinHr(disableHr) {\r\n  //testFun(testContent);\r\n  var disabledTime = addTimeToDateTime(new Date(), 1 * disableHr * 60 || 1);\r\n  disabledHr = disabledTime.toISOString();\r\n  return disabledHr;\r\n}\r\n\r\nexport function getDisabledMinHr() {\r\n  return disabledHr;\r\n}\r\n\r\nexport const convertToMillSeconds = (interval: string) => {\r\n  let timeParts = interval.split(\":\");\r\n  let result = milliseconds(timeParts[0], timeParts[1], 0);\r\n  // days\r\n  return result;\r\n}\r\n","import { IonIcon, IonInput, IonLabel, IonText } from \"@ionic/react\";\r\nimport { personOutline, pulseOutline } from \"ionicons/icons\";\r\nimport { TextInputType } from \"../../util/DataTypes\";\r\nimport React, { useState } from \"react\";\r\nimport \"./TxtInput.scss\";\r\nimport { getPatternValue, isValid, validateEmail } from \"../../util/Utilities\";\r\nimport { connect } from \"../../data/connect\";\r\nimport Icon from \"../Icon\";\r\ninterface TxtInputProps {\r\n  label?: string;\r\n  name: any;\r\n  type: any;\r\n  value?: any;\r\n  onChange?: any;\r\n  required?: any;\r\n  errors?: any;\r\n  pattern?: any;\r\n  datatype?: TextInputType;\r\n  description?: string;\r\n  placeholder: string;\r\n  icon?: any;\r\n  onBlur?: any;\r\n  readonly?: any;\r\n  contactForm?: any;\r\n  max?: number;\r\n}\r\nconst TxtInput: React.FC<TxtInputProps> = ({\r\n  label,\r\n  name,\r\n  type,\r\n  value,\r\n  onChange,\r\n  required,\r\n  errors,\r\n  pattern,\r\n  datatype,\r\n  description,\r\n  placeholder,\r\n  icon,\r\n  onBlur,\r\n  readonly,\r\n  contactForm,\r\n  max,\r\n}) => {\r\n  const [validation, setvalidation] = useState(false);\r\n  const checkKey = (e) => {\r\n    if (e.key.length > 1) return true;\r\n    setvalidation(!isValid(datatype, e.key));\r\n    if (!isValid(datatype, e.key)) {\r\n      e.preventDefault();\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const onInpChange = (e) => {\r\n    let val = e.target.value;\r\n    let validate;\r\n    if (e.target.pattern) {\r\n      val = getPatternValue(val, e.target.pattern, \"-\");\r\n    }\r\n    if (e.target.type === \"email\") {\r\n      validate = validateEmail(val);\r\n      setvalidation(!validate);\r\n    }\r\n    if (!readonly) onChange(e, val, validate);\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className=\"form-element-group\"\r\n      style={contactForm ? { width: \"350px\", padding: \"0\" } : {}}\r\n    >\r\n      <fieldset>\r\n        <legend>{label}</legend>\r\n        {type === \"tel\" ? (\r\n          <IonLabel className=\"regularFont-textInput\">971</IonLabel>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <IonInput\r\n          name={name}\r\n          type={type}\r\n          value={value}\r\n          spellCheck={false}\r\n          autocapitalize=\"off\"\r\n          //readonly={readonly}\r\n          onKeyDown={checkKey}\r\n          onIonChange={onInpChange}\r\n          clearInput={true}\r\n          required={required}\r\n          autocomplete=\"off\"\r\n          pattern={pattern}\r\n          placeholder={placeholder}\r\n          className=\"textInput\"\r\n          onIonBlur={(e) => {\r\n            if (onBlur) onBlur(e);\r\n            else {\r\n            }\r\n          }}\r\n          maxlength={max}\r\n          readonly={readonly ? readonly : false}\r\n        >\r\n          {icon && (\r\n            <Icon iconProps={icon} />\r\n            // <IonIcon slot=\"primary\" icon={pulseOutline} />\r\n          )}\r\n        </IonInput>\r\n      </fieldset>\r\n\r\n      <div className=\"\">\r\n        {errors && (\r\n          <IonText color=\"danger\" className=\"validation-message\">\r\n            <IonLabel className=\"ion-padding-start validation-message\">\r\n              {errors}\r\n            </IonLabel>\r\n          </IonText>\r\n        )}\r\n      </div>\r\n      {validation && description && (\r\n        <IonText color=\"danger\" className=\"validation-message\">\r\n          <IonLabel className=\"ion-padding-start validation-message\">\r\n            {description}\r\n          </IonLabel>\r\n        </IonText>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TxtInput;\r\n","import arrayWithHoles from \"./arrayWithHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableRest from \"./nonIterableRest\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","import { IonAlert, IonInput, IonIcon } from \"@ionic/react\";\r\nimport React, { useState } from \"react\";\r\nimport InappBrowser from \"../../components/InappBrowser\";\r\nimport \"./Alert.scss\";\r\n\r\nexport default function Alert(props: any) {\r\n  const [error, setError] = useState<boolean>(false);\r\n\r\n  function alertAction(item, actionType) {\r\n    props.alertProps.alertAction(item, actionType);\r\n  }\r\n  return (\r\n    <IonAlert\r\n      id=\"alert\"\r\n      isOpen={props.alertProps.isShow}\r\n      // onDidDismiss={() => !props.alertProps.isShow}\r\n      header={props.alertProps.header}\r\n      message={\r\n        \"<div class='text-style'> \" + props.alertProps.icon + \"<br/> Are you sure to  \" +\r\n        props.alertProps.content +\r\n        \"<div class='redColor'> \" +\r\n        props.alertProps.message +\r\n        \"</div>\" +\r\n        \"<div class='row message2-text'>\"+props.alertProps.itemName+\"</div>\"\r\n        + \"</div>\"\r\n      }\r\n      inputs={props.alertProps.inputs}\r\n      buttons={\r\n        [\r\n          {\r\n            text: \"Continue\",\r\n            role: \"confirm\",\r\n            handler: (e) => {\r\n              console.log(\"data\",e)\r\n              alertAction(e, true);\r\n            },\r\n          },\r\n          {\r\n            text: \"Cancel\",\r\n            role: \"cancel\",\r\n            handler: () => {\r\n              alertAction(\"\",false);\r\n            },\r\n          },\r\n        ]}\r\n    />\r\n  );\r\n}\r\n","import { IonContent, IonIcon, IonList, IonPage } from \"@ionic/react\";\r\nimport { arrowForwardOutline } from \"ionicons/icons\";\r\nimport React, { useState } from \"react\";\r\nimport TxtInput from \"../../components/txtinput/TxtInput\";\r\nimport { isEmpty } from \"../../util/Utilities\";\r\nimport \"./Profile.scss\";\r\n\r\nvar objectdefn = {\r\n  firstName: {},\r\n};\r\nfunction Profile() {\r\n  const [form, setForm] = useState({\r\n    firstName: \"\",\r\n    lastName: \"\",\r\n    email: \"\",\r\n    mobile: \"\",\r\n    submitted: false,\r\n    valid: false,\r\n  });\r\n  const [errors, setErrors] = useState<any>({});\r\n  //   let errors: any = {};\r\n\r\n  const login = () => {\r\n    let errs: any = {};\r\n    console.log(\"login\");\r\n    if (isEmpty(form.firstName)) {\r\n      errs.firstName = \"First Name is required\";\r\n    }\r\n    if (isEmpty(form.lastName)) {\r\n      errs.lastName = \"Last Name is required\";\r\n    }\r\n\r\n    if (isEmpty(form.email)) {\r\n      errs.email = \"Email is required\";\r\n    }\r\n    console.log(errs);\r\n    setErrors(errs);\r\n  };\r\n  const handleChange = (e: any, value: any) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: value,\r\n    });\r\n  };\r\n  return (\r\n    <IonPage id=\"profilePage\">\r\n      <IonContent>\r\n        <div className=\"main-container\">\r\n          <div className=\"login-logo\">\r\n            {/* <img src=\"assets/img/appicon.svg\" alt=\"Ionic logo\" /> */}\r\n          </div>\r\n          <div className=\"form-content\">\r\n            <div className=\"login-box-header\"></div>\r\n            <form noValidate onSubmit={login} autoComplete=\"off\">\r\n              <IonList className=\"form-section\">\r\n                <div className=\"login-header\">\r\n                  Profile\r\n                  <hr />\r\n                </div>\r\n                <TxtInput\r\n                  name={\"firstName\"}\r\n                  value={form.firstName}\r\n                  label=\"First Name\"\r\n                  errors={errors.firstName}\r\n                  type=\"text\"\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                  datatype=\"TEXT\"\r\n                  placeholder=\"First Name\"\r\n                />\r\n\r\n                <TxtInput\r\n                  name={\"lastName\"}\r\n                  value={form.lastName}\r\n                  label=\"Last Name\"\r\n                  errors={errors.lastName}\r\n                  type=\"text\"\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                  placeholder=\"Last Name\"\r\n                />\r\n\r\n                <TxtInput\r\n                  name={\"email\"}\r\n                  value={form.email}\r\n                  label=\"Email\"\r\n                  errors={errors.email}\r\n                  type=\"email\"\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                  description=\"Please enter email\"\r\n                  placeholder=\"Email\"\r\n                />\r\n\r\n                <TxtInput\r\n                  name={\"mobile\"}\r\n                  value={form.mobile}\r\n                  label=\"Mobile\"\r\n                  errors={errors.mobile}\r\n                  type=\"text\"\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                  datatype=\"TEL_NUM\"\r\n                  pattern=\"###-##-#######\"\r\n                  description=\"Tel Format 971-xx-xxxxxxx\"\r\n                  placeholder=\"Mobile\"\r\n                />\r\n              </IonList>\r\n              <div className=\"button-div\">\r\n                <div className=\"button-holder\" onClick={login}>\r\n                  <IonIcon slot=\"icon-only\" icon={arrowForwardOutline} />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import {\r\n  IonAlert,\r\n  IonBadge,\r\n  IonButton,\r\n  IonCard,\r\n  IonCardContent,\r\n  IonContent,\r\n  IonIcon,\r\n  IonImg,\r\n  IonLabel,\r\n  IonPage,\r\n  IonRow,\r\n} from \"@ionic/react\";\r\nimport { chevronForwardOutline } from \"ionicons/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { RouteComponentProps, useHistory } from \"react-router\";\r\nimport * as EndPointURL from \"../../util/EndPointURL\";\r\nimport {\r\n  httpGetCallWithoutHeader,\r\n  httpPatchCallWithoutHeaderAndBody,\r\n  loginWithAgent,\r\n} from \"../../services/EndPointApi\";\r\nimport \"./LandingPage.scss\";\r\nimport Store from \"../../redux/Store\";\r\nimport * as reduxActions from \"../../redux/actions/AllActions\";\r\n\r\ninterface LandingPageProps extends RouteComponentProps {}\r\nfunction LandingPage() {\r\n  let history = useHistory();\r\n  var userDetails = Store.getState().CheckUserStatus.user;\r\n  const [notficationCount, setNotificationCount] = useState(\"0\");\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [input, setInput] = useState([]);\r\n\r\n  useEffect(() => {\r\n    console.log(\"userDetails\", userDetails);\r\n    var response = httpGetCallWithoutHeader(\r\n      EndPointURL.fetchCountsOfUnreadNotificationsUrl\r\n    );\r\n    response.then((result) => {\r\n      if (result.success) setNotificationCount(result.data.data.dataItems[0]);\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (userDetails.userType === undefined || userDetails.agents === null) {\r\n      console.log(userDetails);\r\n    } else if (userDetails.agents.length > 1 && userDetails.selectedAgent == undefined) {\r\n      userDetails.agents.map((item: any, index: number) =>\r\n        input.push({\r\n          type: \"radio\",\r\n          label: item.agentCode + \"-\" + item.agentName,\r\n          value: item,\r\n        })\r\n      );\r\n      setInput(input);\r\n      if (showModal) {\r\n      } else {\r\n        console.log(\"showModal\", showModal);\r\n        setShowModal(true);\r\n      }\r\n      console.log(\"yes showmaodal\", showModal);\r\n    } else if (userDetails.agents.length == 1) {\r\n      let data = userDetails.agents.find((e) => true);\r\n      var selectedAgent = reduxActions.AddSelectedAgent(data);\r\n      if (selectedAgent) Store.dispatch(selectedAgent);\r\n    }\r\n  }, [userDetails]);\r\n\r\n  const clickedNotification = async () => {\r\n    if (notficationCount !== \"0\") {\r\n      var response = await httpPatchCallWithoutHeaderAndBody(\r\n        EndPointURL.fetchAllNotificationUrl\r\n      );\r\n      if (await response.success) {\r\n        setNotificationCount(\"0\");\r\n        history.push(\"/notifications\");\r\n      }\r\n    } else history.push(\"/notifications\");\r\n  };\r\n\r\n  const selectUserType = async (data: any) => {\r\n    setShowModal(false);\r\n    console.log(data);\r\n    let url =\r\n      EndPointURL.loginAgent +\r\n      \"?agentCode=\" +\r\n      data.agentCode +\r\n      \"&agentType=\" +\r\n      data.agentType;\r\n\r\n    var endPointHeader = {\r\n      userName: userDetails.userName,\r\n      userType: \"IMPORTER_APP\",\r\n    };\r\n\r\n    var response = await loginWithAgent(url, endPointHeader);\r\n    var result = response.data.data.dataItems[0];\r\n    if (await response.success) {\r\n      var accessToken = await reduxActions.AddAccessToKen(result.accessToken);\r\n      if (accessToken) Store.dispatch(accessToken);\r\n\r\n      var agentType = await reduxActions.AddAgentType(\r\n        // result.user.activeCompanyCode\r\n        result.user.userType\r\n      );\r\n      if (agentType) Store.dispatch(agentType);\r\n\r\n      // data.isAgentchanged = true;\r\n      var selectedAgent = await reduxActions.AddSelectedAgent(data);\r\n\r\n      if (selectedAgent) Store.dispatch(selectedAgent);\r\n\r\n      var test = Store.getState().CheckUserStatus;\r\n      console.log(\"*****\", test);\r\n    }\r\n    // }\r\n  };\r\n\r\n  return (\r\n    <IonPage className=\"landing-Page\">\r\n      <IonAlert\r\n        isOpen={showModal}\r\n        onDidDismiss={() => !showModal}\r\n        header={\"Select Agent Code\"}\r\n        subHeader={errorMessage}\r\n        backdropDismiss={false}\r\n        inputs={input}\r\n        cssClass=\"modal-alert\"\r\n        buttons={[\r\n          {\r\n            text: \"Continue\",\r\n            role: \"confirm\",\r\n            handler: (data) => {\r\n              console.log(\"data\", data);\r\n              if (data === undefined) {\r\n                setErrorMessage(\"Please Choose any to proceed\");\r\n                return false;\r\n              } else selectUserType(data);\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <IonContent>\r\n        <div className=\"main-container\">\r\n          <div className=\"page-header\">\r\n            <div className=\"page-head-not-button\">\r\n              <IonRow onClick={() => clickedNotification()}>\r\n                <IonBadge\r\n                  className={\r\n                    notficationCount === \"5+\" ? \"not-badge1\" : \"not-badge2\"\r\n                  }\r\n                  color=\"danger\"\r\n                >\r\n                  {notficationCount}\r\n                </IonBadge>\r\n                <IonIcon src=\"assets/icon/bell.svg\" />\r\n              </IonRow>\r\n            </div>\r\n            <div className=\"page-head-text\">\r\n              <span className=\"page-header-welcome-name\">\r\n                Hello <IonLabel>{userDetails.firstName}</IonLabel>!\r\n              </span>\r\n              <span>Welcome To Dubai Trade</span>\r\n            </div>\r\n            <div className=\"page-head-button\">\r\n              <IonButton\r\n                className=\"tube-button\"\r\n                onClick={() => {\r\n                  history.push(\"/quickBook\");\r\n                }}\r\n              >\r\n                Quick Book\r\n                <IonIcon slot=\"end\" icon={chevronForwardOutline} />\r\n              </IonButton>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"my-bookings\">\r\n            <IonCard className=\"page-card\">\r\n              <IonImg src=\"assets/img/home-declaration.png\" />\r\n              <IonCardContent>\r\n                <div className=\"my-booking-txt\">\r\n                  <div className=\"my-booking-txt-inner\">\r\n                    <span className=\"header-txt\">My Booking</span>\r\n                    <span className=\"sub-txt\">\r\n                      Select container and book truck\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"book-button\">\r\n                    <IonButton className=\"tube-button\">Book</IonButton>\r\n                  </div>\r\n                </div>\r\n              </IonCardContent>\r\n            </IonCard>\r\n          </div>\r\n\r\n          <div className=\"my-bookings\">\r\n            <IonCard className=\"page-card ion-text-center\">\r\n              <IonImg src=\"assets/img/home-status.png\" />\r\n              <IonCardContent>\r\n                <div className=\"my-booking-txt\">\r\n                  <div className=\"my-booking-txt-inner\">\r\n                    <span className=\"header-txt\">Status</span>\r\n                    <span className=\"sub-txt\">\r\n                      Check status of your bookings\r\n                    </span>\r\n                  </div>\r\n                  <div className=\"book-button\">\r\n                    <IonButton\r\n                      className=\"tube-button\"\r\n                      onClick={() => history.push(\"/tabs/status\")}\r\n                    >\r\n                      Book\r\n                    </IonButton>\r\n                  </div>\r\n                </div>\r\n              </IonCardContent>\r\n            </IonCard>\r\n          </div>\r\n        </div>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n}\r\n\r\nexport default LandingPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { IonCard, IonCardContent, IonCol, IonIcon, IonRow, IonText } from \"@ionic/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { addCircle } from \"ionicons/icons\";\r\nimport \"./AddressCard.scss\";\r\nimport Store from \"../../../redux/Store\";\r\nimport * as EndPointURL from \"../../../util/EndPointURL\";\r\nimport { httpGetCallWithoutHeader, httpPostCallWithoutHeaderAndBody } from \"../../../services/EndPointApi\";\r\nimport * as reduxActions from \"../../../redux/actions/AllActions\";\r\nimport Alert from \"../../../components/alert/Alert\";\r\n\r\nexport default function AddressCard(props: any) {\r\n  let history = useHistory();\r\n  const [address, setAddress] = useState([]);\r\n  const [agent, setAgent] = useState();\r\n  const [alertPopup, showAlertPopup] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [item, setItem] = useState({});\r\n\r\n  Store.subscribe(() => {\r\n    setAgent(Store.getState().CheckUserStatus.user.selectedAgent);\r\n    setAddress(Store.getState().Addresses);\r\n    console.log(\"calling store\");\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log('addressDB', Store.getState().Addresses);\r\n    getAddress();\r\n    console.log(\"add\", address)\r\n  }, [agent]);\r\n\r\n  const getAddress = async () => {\r\n    var response = await httpGetCallWithoutHeader(EndPointURL.getAddress);\r\n    var result = response;\r\n    if (await response?.success) {\r\n      var addressess = reduxActions.clearAllAddress();\r\n      if (addressess) Store.dispatch(addressess);\r\n\r\n      console.log(response.data.addressDtoList.length);\r\n\r\n      response.data.addressDtoList.forEach((element) => {\r\n        element.dropZone = element.selectedDropZone;\r\n      });\r\n      response.data.addressDtoList.disableHrs = response.data.disableHrs;\r\n      response.data.addressDtoList[0].isSelected = true;\r\n\r\n      var newAddressess = reduxActions.addAddress(response.data.addressDtoList);\r\n      if (newAddressess) Store.dispatch(newAddressess);\r\n      setAddress(newAddressess.payLoad);\r\n    } else if (response.data.data.dataItems[0].code == \"168\" || response.data.data.dataItems[0].error == \"No data available.\") {\r\n      var addressess = reduxActions.clearAllAddress();\r\n      if (addressess) Store.dispatch(addressess);\r\n      setAddress([]);\r\n\r\n    }\r\n  }\r\n\r\n  const updateAddress = (element) => {\r\n    element.createMode = false;\r\n    console.log(element);\r\n    history.push(\"/addAddress\", element);\r\n  }\r\n\r\n  function showAlert(item) {\r\n    showAlertPopup(true);\r\n    setMessage(item.addressNickname);\r\n    setItem(item);\r\n  }\r\n\r\n  function deleteAddress(item, actionType) {\r\n    showAlertPopup(false);\r\n    if (actionType) {\r\n      var response = httpPostCallWithoutHeaderAndBody(EndPointURL.deleteAddress + item.code);\r\n      response.then((result) => {\r\n        if (result.success) {\r\n          var newAddressess = reduxActions.deleteAddress(item.code);\r\n          if (newAddressess) Store.dispatch(newAddressess);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  const alertProps = {\r\n    isShow: alertPopup,\r\n    message: message,\r\n    alertAction: deleteAddress,\r\n    item: item,\r\n    content: \"remove contact of\",\r\n  };\r\n\r\n  const onAddressSelect = (e, index) => {\r\n    address.forEach(element => {\r\n      element.isSelected = false;\r\n    });\r\n    address[index].isSelected = true;\r\n    setAddress([...address]);\r\n  }\r\n\r\n  return (\r\n    <div id=\"address-card\">\r\n      <Alert alertProps={alertProps} />\r\n      <IonIcon\r\n        onClick={() =>\r\n          history.push(\"/addAddress\")\r\n        }\r\n        icon={addCircle}\r\n        className=\"addIcon\"\r\n      />\r\n      {address.length === 0 ? (<IonCard className=\"card emptyAddressCard\">\r\n        <IonCardContent>\r\n          <IonText className=\"emptyAddressText\">\r\n            Add new address\r\n          </IonText>\r\n        </IonCardContent>\r\n      </IonCard>) : (\r\n        <div className=\"cardTopMargin\">\r\n          {address.map((element: any, index: any) => (\r\n            <div className=\"addressCard\" key={index}>\r\n              <IonIcon\r\n                src={element.isSelected ? \"/assets/icon/addressBookBlue.svg\" : \"/assets/icon/addressBookGray.svg\"}\r\n                className=\"contactIcon\"\r\n              />\r\n              <IonCard className=\"card\" onClick={(e) => onAddressSelect(e, index)}>\r\n                <IonCardContent>\r\n                  <IonRow>\r\n                    <IonCol size=\"10\">\r\n                      <IonRow>\r\n                        {element.addressNickname}\r\n                      </IonRow>\r\n                      <IonRow>\r\n                        {element.selectedDropZoneLabel}\r\n                      </IonRow>\r\n                      <IonRow>\r\n                        {element.dropAddress}\r\n                      </IonRow>\r\n                      <IonRow>\r\n                        Ph: {element.consigneeContactNumber}\r\n                      </IonRow>\r\n                    </IonCol>\r\n                    {element.isSelected && <IonCol>\r\n                      <IonRow>\r\n                        <IonIcon\r\n                          onClick={() => updateAddress(element)}\r\n                          src=\"/assets/icon/edit-address.svg\"\r\n                          className=\"editIcon\"\r\n                        />\r\n                      </IonRow>\r\n                      <IonRow>\r\n                        <IonIcon\r\n                          onClick={() => showAlert(element)}\r\n                          src=\"/assets/icon/delete-address.svg\"\r\n                          className=\"editIcon\"\r\n                        />\r\n                      </IonRow>\r\n                    </IonCol>}\r\n                  </IonRow>\r\n                </IonCardContent>\r\n              </IonCard>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport { IonContent, IonPage, IonRow } from \"@ionic/react\";\r\nimport AddresCard from \"./addressCard/AddressCard\";\r\nimport Header from \"../../components/Header\";\r\nexport default function Address(props: any) {\r\n  return (\r\n    <IonPage id=\"address-page\">\r\n      <Header label=\"Addresses\" action=\"home\" locationProps={props} showAgent={true} agentHeader={true}/>\r\n      <IonContent class=\"pageContainer\" fullscreen>\r\n          <AddresCard editable={true} />\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  IonTabs,\r\n  IonRouterOutlet,\r\n  IonTabBar,\r\n  IonTabButton,\r\n  IonIcon,\r\n  IonLabel,\r\n} from \"@ionic/react\";\r\nimport { Route, Redirect, RouteComponentProps } from \"react-router\";\r\nimport \"./MainTab.scss\";\r\nimport LandingPage from \"./landingpage/LandingPage\";\r\nimport Status from \"./myBooking/status/Status\";\r\nimport Profile from \"./profile/Profile\";\r\nimport Address from \"./address/Address\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nexport default function MainTabs(props: any) {\r\n  let history = useHistory();\r\n  console.log(props.selected)\r\n  const [selected, setSelected] = useState(false);\r\n  const menutabClicked = (e) => {\r\n    console.log(e);\r\n    console.log(props);\r\n    history.push(\"/profilemenu\", { direction: \"none\" });\r\n  };\r\n\r\n  return (\r\n    <div className=\"ion-tabs\">\r\n      <div className=\"menu-button-div\" >\r\n        <div className=\"menu-button\" onClick={menutabClicked}>\r\n          <hr />\r\n          <hr />\r\n          <hr />\r\n        </div>\r\n      </div>\r\n      <IonTabs className=\"ion-tabs-bar\">\r\n        <IonRouterOutlet>\r\n          <Redirect exact path=\"/tabs\" to=\"/tabs/landing\" />\r\n          {/*\r\n          Using the render method prop cuts down the number of renders your components will have due to route changes.\r\n          Use the component prop when your component depends on the RouterComponentProps passed in automatically.\r\n        */}\r\n          <Route\r\n            path=\"/tabs/landing\"\r\n            render={() => <LandingPage />}\r\n            exact={true}\r\n          />\r\n          <Route\r\n            path=\"/tabs/status\"\r\n            render={() => <Status />}\r\n            exact={true}\r\n          />\r\n          <Route\r\n            path=\"/tabs/profile\"\r\n            render={() => <Profile />}\r\n            exact={true}\r\n          />\r\n          <Route\r\n            path=\"/tabs/addresses\"\r\n            exact\r\n            render={() => <Address/>}\r\n          />\r\n          {/* <Route path=\"/tabs/schedule/:id\" component={SessionDetail} />\r\n          <Route path=\"/tabs/speakers/sessions/:id\" component={SessionDetail} />\r\n          <Route path=\"/tabs/map\" render={() => <MapView />} exact={true} />\r\n          <Route path=\"/tabs/about\" render={() => <About />} exact={true} /> */}\r\n        </IonRouterOutlet>\r\n        <IonTabBar slot=\"bottom\">\r\n          <IonTabButton tab=\"landing\" href=\"/tabs/landing\">\r\n            <IonIcon src=\"assets/icon/home-new.svg\" className=\"button\"/>\r\n            <IonLabel>Home</IonLabel>\r\n          </IonTabButton>\r\n          <IonTabButton tab=\"addresses\" href=\"/tabs/addresses\">\r\n            <IonIcon src=\"assets/icon/address.svg\" className=\"button\"/>\r\n            <IonLabel>Addresses</IonLabel>\r\n          </IonTabButton>\r\n          <IonTabButton disabled={true}>\r\n          </IonTabButton>\r\n          <IonTabButton tab=\"status\" href=\"/tabs/status\">\r\n            <IonIcon src=\"assets/icon/status.svg\" className=\"button\"/>\r\n            <IonLabel>Status</IonLabel>\r\n          </IonTabButton>\r\n          <IonTabButton tab=\"profile\" href=\"/tabs/profile\">\r\n            <IonIcon src=\"assets/icon/profile.svg\" className=\"button\"/>\r\n            <IonLabel>Profile</IonLabel>\r\n          </IonTabButton>\r\n        </IonTabBar>\r\n      </IonTabs>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  IonText,\r\n  IonRow,\r\n  IonCard,\r\n  IonCol,\r\n  IonCardContent,\r\n  IonIcon,\r\n} from \"@ionic/react\";\r\nimport { chevronForwardOutline } from \"ionicons/icons\";\r\nimport \"../statusCard/StatusCard.scss\";\r\n\r\ninterface MenuParam {\r\n  type: string;\r\n  total: string;\r\n  handleClick?(e: any): void;\r\n}\r\n\r\nconst StatusCard: React.FC<MenuParam> = (MenuParam) => {\r\n  const [] = useState();\r\n\r\n  return (\r\n    <>\r\n      <IonRow id=\"status-card\">\r\n        <IonCol className=\"booking-card\">\r\n          <IonCard className=\"lightShadow\" onClick={MenuParam.handleClick}>\r\n            <IonCardContent className=\"booking-card-content\">\r\n              <IonRow className=\"booking-row\">\r\n                <IonCol size=\"8\" className=\"ion-align-self-center\">\r\n                  <div className=\"ion-float-left\">\r\n                    <IonText className=\"booking-menu-type\">\r\n                      {MenuParam.type}\r\n                    </IonText>{\" \"}\r\n                  </div>\r\n                </IonCol>\r\n                <IonCol size=\"2\" className=\"ion-align-self-center\">\r\n                  <div className=\"ion-float-right\">\r\n                    <IonText className=\"booking-menu-total\">\r\n                      {MenuParam.total || \"00\"}\r\n                    </IonText>{\" \"}\r\n                  </div>\r\n                </IonCol>\r\n                <IonCol size=\"2\" className=\"ion-align-self-center\">\r\n                  <div>\r\n                    <IonIcon\r\n                      className=\"booking-menu-icon\"\r\n                      icon={chevronForwardOutline}\r\n                      slot=\"icon-only\"\r\n                    ></IonIcon>{\" \"}\r\n                  </div>\r\n                </IonCol>\r\n              </IonRow>\r\n            </IonCardContent>\r\n          </IonCard>\r\n        </IonCol>\r\n      </IonRow>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default React.memo(StatusCard);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { IonPage, IonContent, IonGrid } from \"@ionic/react\";\r\nimport StatusCard from \"./statusCard/StatusCard\";\r\nimport * as EndPointURL from \"../../../util/EndPointURL\";\r\nimport Header from \"../../../components/Header\";\r\nimport { httpGetCallWithoutHeader } from \"../../../services/EndPointApi\";\r\nimport Store from \"../../../redux/Store\";\r\n\r\nexport default function Status(props) {\r\n  console.log(props);\r\n  let history = useHistory();\r\n  const [countsRequest, setCountsRequest] = useState<any>({}); \r\n  const [agent, setAgent] = useState(); \r\n  Store.subscribe(() => {\r\n    setAgent(Store.getState().CheckUserStatus.user.selectedAgent);\r\n    console.log(\"calling store\");\r\n  });\r\n\r\n  useEffect(() => {\r\n    getCountRequest();\r\n    console.log('call status' , agent);\r\n  }, [agent]);\r\n\r\n  const onBookingClick = () => {\r\n    history.push(\"/bookingDetails/ALL\");\r\n  };\r\n  const onPODClick = () => {\r\n    history.push(\"/bookingDetails/PODUPL\");\r\n  };\r\n  const onInvoiceClick = () => {\r\n    history.push(\"/bookingDetails/INVAPPR\");\r\n  };\r\n\r\n\r\n  const getCountRequest = async () => {\r\n    var response = await httpGetCallWithoutHeader(EndPointURL.fetchRequestStatusCountsUrl);\r\n    if (await response.success) {\r\n      var respObj = response.data.data.dataItems[0];\r\n        Object.keys(respObj).forEach(function (key) {\r\n          respObj[key] = respObj[key] < 10 ? \"0\" + respObj[key] : respObj[key];\r\n        });\r\n  \r\n        await setCountsRequest({\r\n          ...countsRequest,\r\n          result: respObj,\r\n        });\r\n    }\r\n  };\r\n\r\n  const onSearchClick = () => {\r\n    history.push(\"/search-booking\");\r\n  };\r\n\r\n  const goBack = () => {\r\n    history.push(\"/tabs/landing\");\r\n  }\r\n\r\n  return (\r\n      <IonPage id=\"status-page\">\r\n        <Header\r\n          label=\"Status\"\r\n          action=\"search\"\r\n          searchClick={onSearchClick}\r\n          showAgent={true}\r\n          customBack={true} \r\n          backClick={goBack}\r\n          agentHeader={true}\r\n        />\r\n        <IonContent fullscreen padding-top className=\"page-content\">\r\n          <IonGrid margin-top>\r\n            <StatusCard\r\n              type=\"All Bookings\"\r\n              total= {countsRequest?.result?.ALL}\r\n              handleClick={onBookingClick}\r\n            />\r\n            <StatusCard\r\n              type=\"Verify POD's\"\r\n              total={countsRequest.result?.PODUPL}\r\n              handleClick={onPODClick}\r\n            />\r\n            <StatusCard\r\n              type=\"Verify Invoices\"\r\n              total={countsRequest.result?.INVAPPR}\r\n              handleClick={onInvoiceClick}\r\n            />\r\n          </IonGrid>\r\n        </IonContent>\r\n      </IonPage>\r\n  );\r\n}\r\n"],"sourceRoot":""}