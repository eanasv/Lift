{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport Store from \"../redux/Store\";\nimport * as LoginUser from \"../redux/actionTypes/AllActionTypes\";\nimport { Plugins, Capacitor } from \"@capacitor/core\";\nimport * as EndPointURL from \"../util/EndPointURL\";\nimport \"@capacitor-community/http\";\nvar Http = Plugins.Http;\nexport function HttpGetRequest(_x) {\n  return _HttpGetRequest.apply(this, arguments);\n}\n\nfunction _HttpGetRequest() {\n  _HttpGetRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(data) {\n    var httprequestStatus, successData;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            successData = \"\"; //let handler = Network.addListener('networkStatusChange', (status) => {\n\n            _context3.next = 3;\n            return getAccessToken(data.url.includes(\"auth/mobilelogin\")).then(function (result) {\n              /*  I add result.token to resolved tempraly token issue   */\n              var access_token = result.access_token;\n              var config = {\n                headers: data.header // headers: {\n                //   access_token: access_token,\n                //   \"Content-Type\": \"application/json\",\n                //   mobile: \"yes\",\n                // },\n\n              };\n              console.log(config); // let config = {};\n\n              // let config = {};\n              config[\"headers\"][\"access_token\"] = access_token;\n              config[\"headers\"][\"Content-Type\"] = \"application/json\";\n              config[\"headers\"][\"mobile\"] = \"YES\"; //*********************Commented Code start ************\n              //get access token\n\n              //*********************Commented Code start ************\n              //get access token\n              return Store.dispatch( /*#__PURE__*/function () {\n                var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch) {\n                  return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                    while (1) {\n                      switch (_context2.prev = _context2.next) {\n                        case 0:\n                          dispatch({\n                            type: LoginUser.API_REQUEST_STARTED\n                          }); // let status = await Network.getStatus();\n                          // console.log(\"Network status before \", JSON.stringify(status));\n                          // return await axios\n                          //   .get(data.url, config)\n\n                          _context2.next = 3;\n                          return Http.request({\n                            method: \"GET\",\n                            url: data.url,\n                            headers: config.headers //params: data.header,\n\n                          }).then(function (response) {\n                            console.log(response);\n\n                            if (response.data.status === \"FAIL\" || response.data.status === \"fail\" || response.data.status === \"error\" || response.status === \"error\" || response.data.status === \"Error\" || response.status === 500 || response.status === 404) {\n                              successData = {\n                                success: false,\n                                data: response.data\n                              };\n                              dispatch({\n                                type: LoginUser.API_REQUEST_FAILURE,\n                                payLoad: response.data.message\n                              });\n                            } else if (response.status == 401) {\n                              handleUnAutharisedCall(data, \"get\");\n                            } else {\n                              successData = {\n                                success: true,\n                                data: response.data\n                              };\n                            } // if (\n                            //   response.data.status == \"FAIL\" ||\n                            //   response.data.status == \"fail\" ||\n                            //   response.data.status == \"error\"\n                            // ) {\n                            //   successData = { success: false, data: response.data };\n                            //   dispatch({\n                            //     type: LoginUser.API_REQUEST_FAILURE,\n                            //     payLoad: response.data.message,\n                            //   });\n                            // } else if (response.status === 401) {\n                            //   console.log(44444444000001111);\n                            //   httprequestStatus = getAccessToken(\n                            //     data.url.includes(\"mobile/api/auth\")\n                            //   );\n                            //   successData = { success: \"401\", data: \"\" };\n                            // } else {\n                            //   successData = { success: true, data: response.data };\n                            // }\n\n\n                            // if (\n                            //   response.data.status == \"FAIL\" ||\n                            //   response.data.status == \"fail\" ||\n                            //   response.data.status == \"error\"\n                            // ) {\n                            //   successData = { success: false, data: response.data };\n                            //   dispatch({\n                            //     type: LoginUser.API_REQUEST_FAILURE,\n                            //     payLoad: response.data.message,\n                            //   });\n                            // } else if (response.status === 401) {\n                            //   console.log(44444444000001111);\n                            //   httprequestStatus = getAccessToken(\n                            //     data.url.includes(\"mobile/api/auth\")\n                            //   );\n                            //   successData = { success: \"401\", data: \"\" };\n                            // } else {\n                            //   successData = { success: true, data: response.data };\n                            // }\n                            dispatch({\n                              type: LoginUser.API_REQUEST_SUCCESS\n                            }); //const successData = { success: true, data: response.data };\n\n                            //const successData = { success: true, data: response.data };\n                            return successData;\n                          }).catch(function (error) {\n                            // handle error\n                            var errorData = {\n                              success: false,\n                              data: error\n                            };\n\n                            if (!error.success) {\n                              dispatch({\n                                type: LoginUser.API_REQUEST_FAILURE,\n                                payLoad: error.message\n                              });\n                            } else {\n                              dispatch({\n                                type: LoginUser.API_REQUEST_FAILURE,\n                                payLoad: error.errorMessage\n                              });\n                            }\n\n                            console.error(\"error on \", JSON.stringify(error));\n                            return errorData;\n                          });\n\n                        case 3:\n                          return _context2.abrupt(\"return\", _context2.sent);\n\n                        case 4:\n                        case \"end\":\n                          return _context2.stop();\n                      }\n                    }\n                  }, _callee2);\n                }));\n\n                return function (_x5) {\n                  return _ref2.apply(this, arguments);\n                };\n              }()); //************End */\n            });\n\n          case 3:\n            httprequestStatus = _context3.sent;\n            return _context3.abrupt(\"return\", httprequestStatus);\n\n          case 5:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _HttpGetRequest.apply(this, arguments);\n}\n\nexport function httpPostRequest(_x2) {\n  return _httpPostRequest.apply(this, arguments);\n}\n\nfunction _httpPostRequest() {\n  _httpPostRequest = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(content) {\n    var contenData, successData, httprequestStatus;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            contenData = {};\n            console.log(content.url);\n            successData = \"\";\n            _context5.next = 5;\n            return getAccessToken(content.url.includes(\"auth/mobilelogin\")).then(function (result) {\n              var access_token = result.access_token;\n              var config = {\n                headers: {\n                  headers: {\n                    access_token: access_token,\n                    mobile: \"YES\",\n                    \"Content-Type\": \"application/json\"\n                  }\n                }\n              }; // config[\"headers\"][\"Content-Type\"] = \"application/json\";\n              // config[\"headers\"][\"Access-Control-Allow-Origin\"] = \"*\";\n              //get access token\n\n              // config[\"headers\"][\"Content-Type\"] = \"application/json\";\n              // config[\"headers\"][\"Access-Control-Allow-Origin\"] = \"*\";\n              //get access token\n              return Store.dispatch( /*#__PURE__*/function () {\n                var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch) {\n                  return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n                    while (1) {\n                      switch (_context4.prev = _context4.next) {\n                        case 0:\n                          dispatch({\n                            type: LoginUser.API_REQUEST_STARTED\n                          });\n                          contenData = content.data; // return await axios\n                          //   .post(content.url, content.data, config.headers)\n\n                          _context4.next = 4;\n                          return Http.request({\n                            method: \"POST\",\n                            url: content.url,\n                            headers: config.headers.headers,\n                            data: content.data // data: JSON.parse(JSON.stringify(content.data)),\n\n                          }).then(function (response) {\n                            console.info(response);\n                            dispatch({\n                              type: LoginUser.API_REQUEST_SUCCESS\n                            });\n                            console.log(response.data.status);\n\n                            if (response.data.status === \"FAIL\" || response.data.status === \"fail\" || response.data.status === \"error\" || response.status === \"error\" || response.data.status === \"Error\" || response.status === 500 || response.status === 404) {\n                              successData = {\n                                success: false,\n                                data: response.data\n                              };\n                            } else {\n                              successData = {\n                                success: true,\n                                data: response.data\n                              };\n                            }\n\n                            return successData;\n                          }).catch(function (error) {\n                            console.info(error); // handle error\n\n                            // handle error\n                            dispatch({\n                              type: LoginUser.API_REQUEST_FAILURE\n                            });\n                            console.error(\"Error on \", JSON.stringify(error));\n                            var errorData = {\n                              success: false,\n                              data: error\n                            };\n                            return errorData;\n                          });\n\n                        case 4:\n                          return _context4.abrupt(\"return\", _context4.sent);\n\n                        case 5:\n                        case \"end\":\n                          return _context4.stop();\n                      }\n                    }\n                  }, _callee4);\n                }));\n\n                return function (_x6) {\n                  return _ref3.apply(this, arguments);\n                };\n              }());\n            });\n\n          case 5:\n            httprequestStatus = _context5.sent;\n            return _context5.abrupt(\"return\", httprequestStatus);\n\n          case 7:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n  return _httpPostRequest.apply(this, arguments);\n}\n\nexport function getAccessToken(_x3) {\n  return _getAccessToken.apply(this, arguments);\n}\n\nfunction _getAccessToken() {\n  _getAccessToken = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(authUrl) {\n    var data, isAccessToken, _user$activeCompanyCo, _user$activeCompanyCo2, user, agentType, agentCode;\n\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            console.log(Store.getState().CheckAccessToken);\n\n            if (authUrl) {\n              _context7.next = 17;\n              break;\n            }\n\n            if (!Store.getState().CheckAccessToken.status) {\n              _context7.next = 9;\n              break;\n            }\n\n            _context7.next = 5;\n            return Store.getState().CheckAccessToken;\n\n          case 5:\n            isAccessToken = _context7.sent;\n            return _context7.abrupt(\"return\", isAccessToken.user);\n\n          case 9:\n            console.log(\"api call for access-token\");\n            user = Store.getState().CheckUserStatus.user;\n            agentType = (_user$activeCompanyCo = user.activeCompanyCode) === null || _user$activeCompanyCo === void 0 ? void 0 : _user$activeCompanyCo.split(\"-\")[0];\n            agentCode = (_user$activeCompanyCo2 = user.activeCompanyCode) === null || _user$activeCompanyCo2 === void 0 ? void 0 : _user$activeCompanyCo2.split(\"-\")[1];\n\n            if (!(agentCode && agentType && user.userName)) {\n              _context7.next = 16;\n              break;\n            }\n\n            _context7.next = 16;\n            return Store.dispatch( /*#__PURE__*/function () {\n              var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(dispatch) {\n                var url;\n                return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        dispatch({\n                          type: LoginUser.API_REQUEST_STARTED\n                        }); // let url =\n                        //   EndPointURL.tokenUrl + \"&agentCode=F7100&agentType=F&userName=fzuser\";\n\n                        // let url =\n                        //   EndPointURL.tokenUrl + \"&agentCode=F7100&agentType=F&userName=fzuser\";\n                        url = EndPointURL.tokenUrl + \"&agentCode=\" + agentCode + \"&agentType=\" + agentType + \"&userName=\" + user.userName; // data = await axios\n                        // .get(url) // access token api\n\n                        _context6.next = 4;\n                        return Http.request({\n                          method: \"GET\",\n                          url: url\n                        }).then(function (response) {\n                          dispatch({\n                            type: LoginUser.API_REQUEST_SUCCESS\n                          });\n\n                          if (response.status == 500) {\n                            dispatch({\n                              type: LoginUser.REMOVE_ACCESS_TOKEN\n                            });\n                          } else {\n                            dispatch({\n                              type: LoginUser.ADD_ACCESS_TOKEN,\n                              data: {\n                                access_token: response.data.token,\n                                refresh_token: \"00\"\n                              }\n                            });\n                            return {\n                              access_token: response.data.token,\n                              refresh_token: \"00\"\n                            };\n                          }\n                        }).catch(function (error) {\n                          // handle error\n                          dispatch({\n                            type: LoginUser.API_REQUEST_FAILURE\n                          });\n                          console.error(\"Error on \", JSON.stringify(error));\n                          return \"error\";\n                        });\n\n                      case 4:\n                        data = _context6.sent;\n\n                      case 5:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6);\n              }));\n\n              return function (_x7) {\n                return _ref4.apply(this, arguments);\n              };\n            }());\n\n          case 16:\n            return _context7.abrupt(\"return\", data);\n\n          case 17:\n            return _context7.abrupt(\"return\", {\n              access_token: \"\"\n            });\n\n          case 18:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n  return _getAccessToken.apply(this, arguments);\n}\n\nexport function handleUnAutharisedCall(data, type) {\n  Store.dispatch( /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: LoginUser.REMOVE_ACCESS_TOKEN\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x4) {\n      return _ref.apply(this, arguments);\n    };\n  }());\n  getAccessToken(data.url.includes(\"auth/mobilelogin\")).then(function (result) {\n    if (type === \"get\") {\n      HttpGetRequest(data);\n    } else {\n      httpPostRequest(data);\n    }\n  });\n}","map":{"version":3,"sources":["D:/SVN-folder/New-BRANCH-PUSH/New folder/src/services/HttpsServices.js"],"names":["Store","LoginUser","Plugins","Capacitor","EndPointURL","Http","HttpGetRequest","data","successData","getAccessToken","url","includes","then","result","access_token","config","headers","header","console","log","dispatch","type","API_REQUEST_STARTED","request","method","response","status","success","API_REQUEST_FAILURE","payLoad","message","handleUnAutharisedCall","API_REQUEST_SUCCESS","catch","error","errorData","errorMessage","JSON","stringify","httprequestStatus","httpPostRequest","content","contenData","mobile","info","authUrl","getState","CheckAccessToken","isAccessToken","user","CheckUserStatus","agentType","activeCompanyCode","split","agentCode","userName","tokenUrl","REMOVE_ACCESS_TOKEN","ADD_ACCESS_TOKEN","token","refresh_token"],"mappings":"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","sourcesContent":["import Store from \"../redux/Store\";\r\nimport * as LoginUser from \"../redux/actionTypes/AllActionTypes\";\r\nimport { Plugins, Capacitor } from \"@capacitor/core\";\r\nimport * as EndPointURL from \"../util/EndPointURL\";\r\n\r\nimport \"@capacitor-community/http\";\r\nconst { Http } = Plugins;\r\n\r\nexport async function HttpGetRequest(data) {\r\n  var httprequestStatus;\r\n  var successData = \"\";\r\n  //let handler = Network.addListener('networkStatusChange', (status) => {\r\n\r\n  httprequestStatus = await getAccessToken(\r\n    data.url.includes(\"auth/mobilelogin\")\r\n  ).then((result) => {\r\n    /*  I add result.token to resolved tempraly token issue   */\r\n    let access_token = result.access_token;\r\n    let config = {\r\n      headers: data.header,\r\n      // headers: {\r\n      //   access_token: access_token,\r\n      //   \"Content-Type\": \"application/json\",\r\n      //   mobile: \"yes\",\r\n      // },\r\n    };\r\n    console.log(config);\r\n    // let config = {};\r\n    config[\"headers\"][\"access_token\"] = access_token;\r\n    config[\"headers\"][\"Content-Type\"] = \"application/json\";\r\n    config[\"headers\"][\"mobile\"] = \"YES\";\r\n    //*********************Commented Code start ************\r\n    //get access token\r\n    return Store.dispatch(async (dispatch) => {\r\n      dispatch({\r\n        type: LoginUser.API_REQUEST_STARTED,\r\n      });\r\n      // let status = await Network.getStatus();\r\n      // console.log(\"Network status before \", JSON.stringify(status));\r\n\r\n      // return await axios\r\n      //   .get(data.url, config)\r\n      return await Http.request({\r\n        method: \"GET\",\r\n        url: data.url,\r\n        headers: config.headers,\r\n        //params: data.header,\r\n      })\r\n\r\n        .then((response) => {\r\n          console.log(response);\r\n          if (\r\n            response.data.status === \"FAIL\" ||\r\n            response.data.status === \"fail\" ||\r\n            response.data.status === \"error\" ||\r\n            response.status === \"error\" ||\r\n            response.data.status === \"Error\" ||\r\n            response.status === 500 ||\r\n            response.status === 404\r\n          ) {\r\n            successData = { success: false, data: response.data };\r\n            dispatch({\r\n              type: LoginUser.API_REQUEST_FAILURE,\r\n              payLoad: response.data.message,\r\n            });\r\n          } else if (response.status == 401) {\r\n            handleUnAutharisedCall(data, \"get\");\r\n          } else {\r\n            successData = { success: true, data: response.data };\r\n          }\r\n          // if (\r\n          //   response.data.status == \"FAIL\" ||\r\n          //   response.data.status == \"fail\" ||\r\n          //   response.data.status == \"error\"\r\n          // ) {\r\n          //   successData = { success: false, data: response.data };\r\n          //   dispatch({\r\n          //     type: LoginUser.API_REQUEST_FAILURE,\r\n          //     payLoad: response.data.message,\r\n          //   });\r\n          // } else if (response.status === 401) {\r\n          //   console.log(44444444000001111);\r\n          //   httprequestStatus = getAccessToken(\r\n          //     data.url.includes(\"mobile/api/auth\")\r\n          //   );\r\n          //   successData = { success: \"401\", data: \"\" };\r\n          // } else {\r\n          //   successData = { success: true, data: response.data };\r\n          // }\r\n          dispatch({\r\n            type: LoginUser.API_REQUEST_SUCCESS,\r\n          });\r\n          //const successData = { success: true, data: response.data };\r\n          return successData;\r\n        })\r\n        .catch(function (error) {\r\n          // handle error\r\n          const errorData = { success: false, data: error };\r\n          if (!error.success) {\r\n            dispatch({\r\n              type: LoginUser.API_REQUEST_FAILURE,\r\n              payLoad: error.message,\r\n            });\r\n          } else {\r\n            dispatch({\r\n              type: LoginUser.API_REQUEST_FAILURE,\r\n              payLoad: error.errorMessage,\r\n            });\r\n          }\r\n          console.error(\"error on \", JSON.stringify(error));\r\n          return errorData;\r\n        });\r\n      //************End */\r\n    });\r\n    //************End */\r\n  });\r\n  return httprequestStatus;\r\n}\r\n\r\nexport async function httpPostRequest(content) {\r\n  var contenData = {};\r\n  console.log(content.url);\r\n  var successData = \"\";\r\n  var httprequestStatus;\r\n\r\n  httprequestStatus = await getAccessToken(\r\n    content.url.includes(\"auth/mobilelogin\")\r\n  ).then((result) => {\r\n    let access_token = result.access_token;\r\n    let config = {\r\n      headers: {\r\n        headers: {\r\n          access_token: access_token,\r\n          mobile: \"YES\",\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n      },\r\n    };\r\n    // config[\"headers\"][\"Content-Type\"] = \"application/json\";\r\n    // config[\"headers\"][\"Access-Control-Allow-Origin\"] = \"*\";\r\n    //get access token\r\n    return Store.dispatch(async (dispatch) => {\r\n      dispatch({\r\n        type: LoginUser.API_REQUEST_STARTED,\r\n      });\r\n\r\n      contenData = content.data;\r\n      // return await axios\r\n      //   .post(content.url, content.data, config.headers)\r\n      return await Http.request({\r\n        method: \"POST\",\r\n        url: content.url,\r\n        headers: config.headers.headers,\r\n        data: content.data,\r\n        // data: JSON.parse(JSON.stringify(content.data)),\r\n      })\r\n        .then((response) => {\r\n          console.info(response);\r\n          dispatch({\r\n            type: LoginUser.API_REQUEST_SUCCESS,\r\n          });\r\n          console.log(response.data.status);\r\n          if (\r\n            response.data.status === \"FAIL\" ||\r\n            response.data.status === \"fail\" ||\r\n            response.data.status === \"error\" ||\r\n            response.status === \"error\" ||\r\n            response.data.status === \"Error\" ||\r\n            response.status === 500 ||\r\n            response.status === 404\r\n          ) {\r\n            successData = { success: false, data: response.data };\r\n          } else {\r\n            successData = { success: true, data: response.data };\r\n          }\r\n\r\n          return successData;\r\n        })\r\n        .catch(function (error) {\r\n          console.info(error);\r\n          // handle error\r\n          dispatch({\r\n            type: LoginUser.API_REQUEST_FAILURE,\r\n          });\r\n          console.error(\"Error on \", JSON.stringify(error));\r\n          const errorData = { success: false, data: error };\r\n          return errorData;\r\n        });\r\n    });\r\n  });\r\n  return httprequestStatus;\r\n}\r\nexport async function getAccessToken(authUrl) {\r\n  var data;\r\n  console.log(Store.getState().CheckAccessToken);\r\n  if (!authUrl) {\r\n    if (Store.getState().CheckAccessToken.status) {\r\n      let isAccessToken = await Store.getState().CheckAccessToken;\r\n\r\n      return isAccessToken.user;\r\n    } else {\r\n      console.log(\"api call for access-token\");\r\n      let user = Store.getState().CheckUserStatus.user;\r\n\r\n      var agentType = user.activeCompanyCode?.split(\"-\")[0];\r\n      var agentCode = user.activeCompanyCode?.split(\"-\")[1];\r\n      if (agentCode && agentType && user.userName) {\r\n        await Store.dispatch(async (dispatch) => {\r\n          dispatch({\r\n            type: LoginUser.API_REQUEST_STARTED,\r\n          });\r\n          // let url =\r\n          //   EndPointURL.tokenUrl + \"&agentCode=F7100&agentType=F&userName=fzuser\";\r\n          let url =\r\n            EndPointURL.tokenUrl +\r\n            \"&agentCode=\" +\r\n            agentCode +\r\n            \"&agentType=\" +\r\n            agentType +\r\n            \"&userName=\" +\r\n            user.userName;\r\n          // data = await axios\r\n          // .get(url) // access token api\r\n          data = await Http.request({\r\n            method: \"GET\",\r\n            url: url,\r\n          })\r\n            .then((response) => {\r\n              dispatch({\r\n                type: LoginUser.API_REQUEST_SUCCESS,\r\n              });\r\n              if (response.status == 500) {\r\n                dispatch({\r\n                  type: LoginUser.REMOVE_ACCESS_TOKEN,\r\n                });\r\n              } else {\r\n                dispatch({\r\n                  type: LoginUser.ADD_ACCESS_TOKEN,\r\n                  data: {\r\n                    access_token: response.data.token,\r\n                    refresh_token: \"00\",\r\n                  },\r\n                });\r\n                return {\r\n                  access_token: response.data.token,\r\n                  refresh_token: \"00\",\r\n                };\r\n              }\r\n            })\r\n\r\n            .catch(function (error) {\r\n              // handle error\r\n              dispatch({\r\n                type: LoginUser.API_REQUEST_FAILURE,\r\n              });\r\n              console.error(\"Error on \", JSON.stringify(error));\r\n              return \"error\";\r\n            });\r\n        });\r\n      }\r\n      return data;\r\n    }\r\n  }\r\n  return { access_token: \"\" };\r\n}\r\n\r\nexport function handleUnAutharisedCall(data, type) {\r\n  Store.dispatch(async (dispatch) => {\r\n    dispatch({\r\n      type: LoginUser.REMOVE_ACCESS_TOKEN,\r\n    });\r\n  });\r\n  getAccessToken(data.url.includes(\"auth/mobilelogin\")).then((result) => {\r\n    if (type === \"get\") {\r\n      HttpGetRequest(data);\r\n    } else {\r\n      httpPostRequest(data);\r\n    }\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}