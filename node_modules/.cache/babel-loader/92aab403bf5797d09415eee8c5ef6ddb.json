{"ast":null,"code":"import _defineProperty from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\src\\\\pages\\\\login\\\\Login.tsx\";\n\nimport React, { useState } from \"react\";\nimport { IonContent, IonPage, IonList, IonLabel, IonText, IonIcon } from \"@ionic/react\";\nimport { arrowForwardOutline } from \"ionicons/icons\";\nimport \"./Login.scss\";\nimport { setIsLoggedIn, setUsername } from \"../../data/user/user.actions\";\nimport { connect } from \"../../data/connect\";\nimport { doLogin, fetchAllDeclaration } from \"../../services/EndPointApi\";\nimport * as EndPoints from \"../../util/EndPointURL\";\nimport TxtInput from \"../../components/txtinput/TxtInput\";\nimport InappBrowser from \"../../components/InappBrowser\";\nimport { termsAndConditionUrl } from \"../../util/Constants\";\nimport * as reduxActions from \"../../redux/actions/AllActions\";\nimport Store from \"../../redux/Store\";\n\nvar Login = function Login(_ref) {\n  var setIsLoggedIn = _ref.setIsLoggedIn,\n      history = _ref.history;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      formSubmitted = _useState2[0],\n      setFormSubmitted = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState({\n    username: \"\",\n    password: \"\",\n    submitted: false,\n    valid: false\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      form = _useState6[0],\n      setForm = _useState6[1];\n\n  var loginClicked = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(e) {\n      var errs, endPointHeader, response, result, accessToken, agentType, addUser, userDetails;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              errs = {};\n              e.preventDefault();\n              setFormSubmitted(true);\n\n              if (!form.username) {\n                errs.username = \"Username is required\";\n              }\n\n              if (!form.password) {\n                errs.password = \"Password is required\";\n              }\n\n              if (!(form.username && form.password)) {\n                _context.next = 36;\n                break;\n              }\n\n              endPointHeader = {\n                userName: form.username,\n                password: form.password,\n                userType: \"IMPORTER_APP\"\n              };\n              _context.next = 9;\n              return doLogin(EndPoints.loginUrl, endPointHeader);\n\n            case 9:\n              response = _context.sent;\n              _context.next = 12;\n              return response.success;\n\n            case 12:\n              if (!_context.sent) {\n                _context.next = 34;\n                break;\n              }\n\n              result = response.data.data.dataItems[0];\n              _context.next = 16;\n              return reduxActions.AddAccessToKen(result.accessToken);\n\n            case 16:\n              accessToken = _context.sent;\n              if (accessToken) Store.dispatch(accessToken);\n              _context.next = 20;\n              return reduxActions.AddAgentType( // result.user.activeCompanyCode\n              result.user.userType);\n\n            case 20:\n              agentType = _context.sent;\n              if (agentType) Store.dispatch(agentType);\n              _context.next = 24;\n              return reduxActions.AddUser(result.user);\n\n            case 24:\n              addUser = _context.sent;\n              if (addUser) Store.dispatch(addUser); // if (result.user.agents && result.user.agents.length > 0) {\n              //   history.push(\"/tabs\", result);\n              // } else {\n\n              _context.next = 28;\n              return fetchAllDeclaration(EndPoints.fetchConfirmDetails + form.username);\n\n            case 28:\n              response = _context.sent;\n\n              if (response.success) {\n                userDetails = response.data.data.dataItems[0];\n\n                if (!response.data.data.dataItems[0].confirmDetails) {\n                  history.push(\"/tabs/\", response);\n                } else {\n                  history.push(\"/confirmDetails\", userDetails); //history.push(\"/tabs/\", userDetails);\n                }\n              } else {\n                errs.errorGeneral = response.data.message;\n              } // }\n\n\n              _context.next = 32;\n              return setIsLoggedIn(true);\n\n            case 32:\n              _context.next = 36;\n              break;\n\n            case 34:\n              errs.errorGeneral = response.data.message || response.data.error;\n              setError(errs);\n\n            case 36:\n              setError(errs);\n\n            case 37:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function loginClicked(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleChange = function handleChange(e, value) {\n    setForm(_objectSpread(_objectSpread({}, form), {}, _defineProperty({}, e.target.name, value)));\n    setError(_objectSpread(_objectSpread({}, error), {}, _defineProperty({}, e.target.name, \"\")));\n  };\n\n  var userNmaeIcon = {\n    name: \"username\",\n    slot: \"start\",\n    login: true,\n    class: \"zoom12\"\n  };\n  var passwordIcon = {\n    name: \"password\",\n    slot: \"start\",\n    login: true,\n    class: \"zoom12\"\n  };\n  return /*#__PURE__*/React.createElement(IonPage, {\n    id: \"login-page\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"main-container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-logo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: \"assets/img/dubai_trade_logo.png\",\n    alt: \"Ionic logo\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-box-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"form\", {\n    noValidate: true,\n    onSubmit: loginClicked,\n    autoComplete: \"off\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(IonList, {\n    className: \"form-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 17\n    }\n  }, \"Login\", /*#__PURE__*/React.createElement(\"hr\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(TxtInput, {\n    name: \"username\",\n    value: form.username,\n    label: \"Username\",\n    errors: error.username,\n    type: \"text\",\n    required: true,\n    onChange: handleChange,\n    datatype: \"TEXT\",\n    placeholder: \"Username\",\n    icon: userNmaeIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TxtInput, {\n    name: \"password\",\n    value: form.password,\n    label: \"Password\",\n    errors: error.password,\n    type: \"password\",\n    required: true,\n    onChange: handleChange,\n    datatype: \"TEXT\",\n    placeholder: \"Password\",\n    icon: passwordIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 17\n    }\n  }, error.errorGeneral && /*#__PURE__*/React.createElement(IonText, {\n    color: \"danger\",\n    className: \"validation-message genralError\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    className: \"ion-padding-start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 23\n    }\n  }, error.errorGeneral))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"login-tnc\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 19\n    }\n  }, \"by clicking \\\"submit\\\" you agree to our\"), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: function onClick() {\n      return InappBrowser(termsAndConditionUrl);\n    },\n    className: \"tnc\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 19\n    }\n  }, \"terms and conditions\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-div\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"button-holder\",\n    onClick: loginClicked,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    slot: \"icon-only\",\n    icon: arrowForwardOutline,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }\n  }))))))));\n};\n\nexport default connect({\n  mapDispatchToProps: {\n    setIsLoggedIn: setIsLoggedIn,\n    setUsername: setUsername\n  },\n  component: Login\n});","map":{"version":3,"sources":["D:/SVN-folder/New-BRANCH-PUSH/New folder/src/pages/login/Login.tsx"],"names":["React","useState","IonContent","IonPage","IonList","IonLabel","IonText","IonIcon","arrowForwardOutline","setIsLoggedIn","setUsername","connect","doLogin","fetchAllDeclaration","EndPoints","TxtInput","InappBrowser","termsAndConditionUrl","reduxActions","Store","Login","history","formSubmitted","setFormSubmitted","error","setError","username","password","submitted","valid","form","setForm","loginClicked","e","errs","preventDefault","endPointHeader","userName","userType","loginUrl","response","success","result","data","dataItems","AddAccessToKen","accessToken","dispatch","AddAgentType","user","agentType","AddUser","addUser","fetchConfirmDetails","userDetails","confirmDetails","push","errorGeneral","message","handleChange","value","target","name","userNmaeIcon","slot","login","class","passwordIcon","mapDispatchToProps","component"],"mappings":"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","sourcesContent":["import React, { useState, Suspense, lazy } from \"react\";\r\n\r\nimport {\r\n  IonContent,\r\n  IonPage,\r\n  IonList,\r\n  IonLabel,\r\n  IonText,\r\n  IonIcon,\r\n} from \"@ionic/react\";\r\nimport {\r\n  add,\r\n  arrowForwardOutline,\r\n  lockClosedOutline,\r\n  personOutline,\r\n} from \"ionicons/icons\";\r\nimport \"./Login.scss\";\r\nimport { setIsLoggedIn, setUsername } from \"../../data/user/user.actions\";\r\nimport { connect } from \"../../data/connect\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { doLogin, fetchAllDeclaration } from \"../../services/EndPointApi\";\r\nimport * as EndPoints from \"../../util/EndPointURL\";\r\nimport TxtInput from \"../../components/txtinput/TxtInput\";\r\nimport InappBrowser from \"../../components/InappBrowser\";\r\nimport { termsAndConditionUrl } from \"../../util/Constants\";\r\nimport * as reduxActions from \"../../redux/actions/AllActions\";\r\nimport Store from \"../../redux/Store\";\r\n\r\ninterface OwnProps extends RouteComponentProps { }\r\n\r\ninterface DispatchProps {\r\n  setIsLoggedIn: typeof setIsLoggedIn;\r\n  setUsername: typeof setUsername;\r\n}\r\n\r\ninterface LoginProps extends OwnProps, DispatchProps { }\r\n\r\nconst Login: React.FC<LoginProps> = ({\r\n  setIsLoggedIn,\r\n  history,\r\n  //setUsername: setUsernameAction,\r\n}) => {\r\n  const [formSubmitted, setFormSubmitted] = useState(false);\r\n\r\n  const [error, setError] = useState<any>({});\r\n  const [form, setForm] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    submitted: false,\r\n    valid: false,\r\n  });\r\n\r\n  const loginClicked = async (e: React.FormEvent) => {\r\n    let errs: any = {};\r\n    e.preventDefault();\r\n    setFormSubmitted(true);\r\n\r\n    if (!form.username) {\r\n      errs.username = \"Username is required\";\r\n    }\r\n    if (!form.password) {\r\n      errs.password = \"Password is required\";\r\n    }\r\n    if (form.username && form.password) {\r\n      var endPointHeader = {\r\n        userName: form.username,\r\n        password: form.password,\r\n        userType: \"IMPORTER_APP\",\r\n      };\r\n\r\n      var response = await doLogin(EndPoints.loginUrl, endPointHeader);\r\n      if (await response.success) {\r\n        var result = response.data.data.dataItems[0];\r\n        var accessToken = await reduxActions.AddAccessToKen(result.accessToken);\r\n        if (accessToken) Store.dispatch(accessToken);\r\n\r\n        var agentType = await reduxActions.AddAgentType(\r\n          // result.user.activeCompanyCode\r\n          result.user.userType\r\n        );\r\n        if (agentType) Store.dispatch(agentType);\r\n        var addUser = await reduxActions.AddUser(result.user);\r\n        if (addUser) Store.dispatch(addUser);\r\n        // if (result.user.agents && result.user.agents.length > 0) {\r\n        //   history.push(\"/tabs\", result);\r\n        // } else {\r\n        var response = await fetchAllDeclaration(\r\n          EndPoints.fetchConfirmDetails + form.username\r\n        );\r\n        if (response.success) {\r\n          var userDetails = response.data.data.dataItems[0];\r\n\r\n          if (!response.data.data.dataItems[0].confirmDetails) {\r\n            history.push(\"/tabs/\", response);\r\n          } else {\r\n            history.push(\"/confirmDetails\", userDetails);\r\n            //history.push(\"/tabs/\", userDetails);\r\n          }\r\n        } else {\r\n          errs.errorGeneral = response.data.message;\r\n        }\r\n        // }\r\n        await setIsLoggedIn(true);\r\n\r\n        //await setUsernameAction(form.username);\r\n        //history.push(\"/tabs/\", { direction: \"none\" });\r\n      } else {\r\n        errs.errorGeneral = response.data.message || response.data.error;\r\n        setError(errs);\r\n      }\r\n    }\r\n    setError(errs);\r\n  };\r\n  const handleChange = (e: any, value: any) => {\r\n    setForm({\r\n      ...form,\r\n      [e.target.name]: value,\r\n    });\r\n    setError({ ...error, [e.target.name]: \"\" });\r\n  };\r\n  var userNmaeIcon = {\r\n    name: \"username\",\r\n    slot: \"start\",\r\n    login: true,\r\n    class: \"zoom12\",\r\n  };\r\n  var passwordIcon = {\r\n    name: \"password\",\r\n    slot: \"start\",\r\n    login: true,\r\n    class: \"zoom12\",\r\n  };\r\n  return (\r\n    <IonPage id=\"login-page\">\r\n      <IonContent>\r\n        <div className=\"main-container\">\r\n          <div className=\"login-logo\">\r\n            <img src=\"assets/img/dubai_trade_logo.png\" alt=\"Ionic logo\" />\r\n          </div>\r\n          <div className=\"form-content\">\r\n            <div className=\"login-box-header\"></div>\r\n            <form noValidate onSubmit={loginClicked} autoComplete=\"off\">\r\n              <IonList className=\"form-section\">\r\n                <div className=\"login-header\">\r\n                  Login\r\n                  <hr />\r\n                </div>\r\n                <TxtInput\r\n                  name={\"username\"}\r\n                  value={form.username}\r\n                  label=\"Username\"\r\n                  errors={error.username}\r\n                  type=\"text\"\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                  datatype=\"TEXT\"\r\n                  placeholder=\"Username\"\r\n                  icon={userNmaeIcon}\r\n                />\r\n\r\n                <TxtInput\r\n                  name={\"password\"}\r\n                  value={form.password}\r\n                  label=\"Password\"\r\n                  errors={error.password}\r\n                  type=\"password\"\r\n                  required={true}\r\n                  onChange={handleChange}\r\n                  datatype=\"TEXT\"\r\n                  placeholder=\"Password\"\r\n                  icon={passwordIcon}\r\n                />\r\n                <div className=\"\">\r\n                  {error.errorGeneral && (\r\n                    <IonText\r\n                      color=\"danger\"\r\n                      className=\"validation-message genralError\"\r\n                    >\r\n                      <IonLabel className=\"ion-padding-start\">\r\n                        {error.errorGeneral}\r\n                      </IonLabel>\r\n                    </IonText>\r\n                  )}\r\n                </div>\r\n\r\n                <div className=\"login-tnc\">\r\n                  <div>by clicking \"submit\" you agree to our</div>\r\n                  <div\r\n                    onClick={() => InappBrowser(termsAndConditionUrl)}\r\n                    className=\"tnc\"\r\n                  >\r\n                    terms and conditions\r\n                  </div>\r\n                </div>\r\n              </IonList>\r\n              <div className=\"button-div\">\r\n                <div className=\"button-holder\" onClick={loginClicked}>\r\n                  <IonIcon slot=\"icon-only\" icon={arrowForwardOutline} />\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </IonContent>\r\n    </IonPage>\r\n  );\r\n};\r\n\r\nexport default connect<OwnProps, {}, DispatchProps>({\r\n  mapDispatchToProps: {\r\n    setIsLoggedIn,\r\n    setUsername,\r\n  },\r\n  component: Login,\r\n});\r\n"]},"metadata":{},"sourceType":"module"}