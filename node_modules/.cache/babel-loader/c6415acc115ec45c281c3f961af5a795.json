{"ast":null,"code":"import _toConsumableArray from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport * as LoginUserTypes from \"../actionTypes/AllActionTypes\"; // var initialState = [];\n// const Cart = (state = initialState, action) => {\n//   switch (action.type) {\n//     case LoginUserTypes.ADD_TO_CART:\n//       console.log(\"&&&&&\", state);\n//       state.push(action.payLoad);\n//       console.log(state);\n//       return state;\n//     default:\n//       return state;\n//   }\n// };\n\nvar Cart = function Cart() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LoginUserTypes.ADD_TO_CART:\n      state.concat(action.payLoad);\n      console.log(action.payLoad);\n      return state.concat(action.payLoad);\n\n    case LoginUserTypes.UPDATE_BOE_IN_CART:\n      var updatedState = _toConsumableArray(state);\n\n      updatedState.map(function (item, index) {\n        if (item.referenceNumber === action.payLoad.referenceNumber) {\n          updatedState[index] = action.payLoad;\n        }\n      });\n      return updatedState;\n\n    case LoginUserTypes.UPDATE_CONTAINER_IN_CART:\n      var update = _toConsumableArray(state);\n\n      update.map(function (item, index) {\n        if (item.referenceNumber === action.payLoad.boeNumber) {\n          item.containerList.map(function (container, index) {\n            container.container_number === action.payLoad.container_number ? item = action.payLoad : console.log(\"no\");\n          });\n        }\n      });\n      update.push(1);\n      update.pop();\n      return update;\n\n    case LoginUserTypes.CLEAR_CART:\n      return state = [];\n\n    default:\n      return state;\n  }\n};\n\nexport default Cart;","map":{"version":3,"sources":["D:/SVN-folder/New-BRANCH-PUSH/New folder/src/redux/reducers/Cart.tsx"],"names":["LoginUserTypes","Cart","state","action","type","ADD_TO_CART","concat","payLoad","console","log","UPDATE_BOE_IN_CART","updatedState","map","item","index","referenceNumber","UPDATE_CONTAINER_IN_CART","update","boeNumber","containerList","container","container_number","push","pop","CLEAR_CART"],"mappings":";AAAA,OAAO,KAAKA,cAAZ,MAAgC,+BAAhC,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AACnC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,cAAc,CAACK,WAApB;AACEH,MAAAA,KAAK,CAACI,MAAN,CAAaH,MAAM,CAACI,OAApB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYN,MAAM,CAACI,OAAnB;AACA,aAAOL,KAAK,CAACI,MAAN,CAAaH,MAAM,CAACI,OAApB,CAAP;;AAEF,SAAKP,cAAc,CAACU,kBAApB;AACE,UAAIC,YAAY,sBAAOT,KAAP,CAAhB;;AACAS,MAAAA,YAAY,CAACC,GAAb,CAAiB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAChC,YAAID,IAAI,CAACE,eAAL,KAAyBZ,MAAM,CAACI,OAAP,CAAeQ,eAA5C,EAA6D;AAC3DJ,UAAAA,YAAY,CAACG,KAAD,CAAZ,GAAsBX,MAAM,CAACI,OAA7B;AACD;AACF,OAJD;AAKA,aAAOI,YAAP;;AAEF,SAAKX,cAAc,CAACgB,wBAApB;AACE,UAAIC,MAAM,sBAAOf,KAAP,CAAV;;AACAe,MAAAA,MAAM,CAACL,GAAP,CAAW,UAACC,IAAD,EAAOC,KAAP,EAAiB;AAC1B,YAAID,IAAI,CAACE,eAAL,KAAyBZ,MAAM,CAACI,OAAP,CAAeW,SAA5C,EAAuD;AACrDL,UAAAA,IAAI,CAACM,aAAL,CAAmBP,GAAnB,CAAuB,UAACQ,SAAD,EAAYN,KAAZ,EAAsB;AAC3CM,YAAAA,SAAS,CAACC,gBAAV,KAA+BlB,MAAM,CAACI,OAAP,CAAec,gBAA9C,GACKR,IAAI,GAAGV,MAAM,CAACI,OADnB,GAEIC,OAAO,CAACC,GAAR,CAAY,IAAZ,CAFJ;AAGD,WAJD;AAKD;AACF,OARD;AASAQ,MAAAA,MAAM,CAACK,IAAP,CAAY,CAAZ;AACAL,MAAAA,MAAM,CAACM,GAAP;AACA,aAAON,MAAP;;AACF,SAAKjB,cAAc,CAACwB,UAApB;AACE,aAAQtB,KAAK,GAAG,EAAhB;;AAEF;AACE,aAAOA,KAAP;AAjCJ;AAmCD,CApCD;;AAsCA,eAAeD,IAAf","sourcesContent":["import * as LoginUserTypes from \"../actionTypes/AllActionTypes\";\r\n// var initialState = [];\r\n// const Cart = (state = initialState, action) => {\r\n//   switch (action.type) {\r\n//     case LoginUserTypes.ADD_TO_CART:\r\n//       console.log(\"&&&&&\", state);\r\n//       state.push(action.payLoad);\r\n//       console.log(state);\r\n//       return state;\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nconst Cart = (state = [], action) => {\r\n  switch (action.type) {\r\n    case LoginUserTypes.ADD_TO_CART:\r\n      state.concat(action.payLoad);\r\n      console.log(action.payLoad);\r\n      return state.concat(action.payLoad);\r\n\r\n    case LoginUserTypes.UPDATE_BOE_IN_CART:\r\n      let updatedState = [...state];\r\n      updatedState.map((item, index) => {\r\n        if (item.referenceNumber === action.payLoad.referenceNumber) {\r\n          updatedState[index] = action.payLoad;\r\n        }\r\n      });\r\n      return updatedState;\r\n\r\n    case LoginUserTypes.UPDATE_CONTAINER_IN_CART:\r\n      let update = [...state];\r\n      update.map((item, index) => {\r\n        if (item.referenceNumber === action.payLoad.boeNumber) {\r\n          item.containerList.map((container, index) => {\r\n            container.container_number === action.payLoad.container_number\r\n              ? (item = action.payLoad)\r\n              : console.log(\"no\");\r\n          });\r\n        }\r\n      });\r\n      update.push(1);\r\n      update.pop();\r\n      return update;\r\n    case LoginUserTypes.CLEAR_CART:\r\n      return (state = []);\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default Cart;\r\n"]},"metadata":{},"sourceType":"module"}