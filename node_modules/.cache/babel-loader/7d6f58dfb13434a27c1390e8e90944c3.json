{"ast":null,"code":"import _slicedToArray from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\src\\\\components\\\\CartNumber.tsx\";\n\nimport { IonBadge, IonPopover } from \"@ionic/react\";\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport Store from \"../redux/Store\";\nimport \"./CartNumber.scss\";\nimport * as reduxActions from \"../redux/actionTypes/AllActionTypes\";\n\nvar CartNumber = function CartNumber(_ref) {\n  var numberOfContainers = _ref.numberOfContainers,\n      updateCartNumber = _ref.updateCartNumber;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      number = _useState2[0],\n      setnumber = _useState2[1];\n\n  var _useState3 = useState({\n    showPopover: false,\n    event: undefined\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      popoverState = _useState4[0],\n      setShowPopover = _useState4[1];\n\n  useEffect(function () {\n    countContainerNumberSelected(0);\n  }, [numberOfContainers]);\n\n  function countContainerNumberSelected(count) {\n    setnumber(count);\n    numberOfContainers.map(function (item, index) {\n      item.containerList.map(function (container) {\n        if (container.selected) {\n          count++;\n          setnumber(count);\n          updateCartNumber(count); //setShowPopover({ showPopover: true, event: \"\" });\n        } else {\n          setnumber(count);\n          updateCartNumber(count);\n        }\n      });\n    }); //setTimeout(() => {\n    //setShowPopover({ showPopover: true, event: \"\" });\n    // }, 1000);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonPopover, {\n    cssClass: \"my-custom-class\",\n    event: popoverState.event,\n    isOpen: popoverState.showPopover,\n    onDidDismiss: function onDidDismiss() {\n      return setShowPopover({\n        showPopover: false,\n        event: undefined\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, number, \" containers added\")), /*#__PURE__*/React.createElement(IonBadge, {\n    className: \"blueBg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \" \", number));\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    numberOfContainers: state.Cart\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps() {\n  return {\n    updateCartNumber: function updateCartNumber(item) {\n      Store.dispatch({\n        type: reduxActions.UPDATE_VARIABLE,\n        payLoad: item\n      });\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CartNumber);","map":{"version":3,"sources":["D:/SVN-folder/New-BRANCH-PUSH/New folder/src/components/CartNumber.tsx"],"names":["IonBadge","IonPopover","React","useEffect","useState","connect","Store","reduxActions","CartNumber","numberOfContainers","updateCartNumber","number","setnumber","showPopover","event","undefined","popoverState","setShowPopover","countContainerNumberSelected","count","map","item","index","containerList","container","selected","mapStateToProps","state","Cart","mapDispatchToProps","dispatch","type","UPDATE_VARIABLE","payLoad"],"mappings":";;;;;AAAA,SAASA,QAAT,EAAmBC,UAAnB,QAAqC,cAArC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAO,mBAAP;AACA,OAAO,KAAKC,YAAZ,MAA8B,qCAA9B;;AAUA,IAAMC,UAAqC,GAAG,SAAxCA,UAAwC,OAGxC;AAAA,MAFJC,kBAEI,QAFJA,kBAEI;AAAA,MADJC,gBACI,QADJA,gBACI;;AACJ,kBAA4BN,QAAQ,CAAC,CAAD,CAApC;AAAA;AAAA,MAAOO,MAAP;AAAA,MAAeC,SAAf;;AACA,mBAAuCR,QAAQ,CAAC;AAC9CS,IAAAA,WAAW,EAAE,KADiC;AAE9CC,IAAAA,KAAK,EAAEC;AAFuC,GAAD,CAA/C;AAAA;AAAA,MAAOC,YAAP;AAAA,MAAqBC,cAArB;;AAIAd,EAAAA,SAAS,CAAC,YAAM;AACde,IAAAA,4BAA4B,CAAC,CAAD,CAA5B;AACD,GAFQ,EAEN,CAACT,kBAAD,CAFM,CAAT;;AAGA,WAASS,4BAAT,CAAsCC,KAAtC,EAA6C;AAC3CP,IAAAA,SAAS,CAACO,KAAD,CAAT;AACAV,IAAAA,kBAAkB,CAACW,GAAnB,CAAuB,UAACC,IAAD,EAAOC,KAAP,EAAiB;AACtCD,MAAAA,IAAI,CAACE,aAAL,CAAmBH,GAAnB,CAAuB,UAACI,SAAD,EAAe;AACpC,YAAIA,SAAS,CAACC,QAAd,EAAwB;AACtBN,UAAAA,KAAK;AACLP,UAAAA,SAAS,CAACO,KAAD,CAAT;AACAT,UAAAA,gBAAgB,CAACS,KAAD,CAAhB,CAHsB,CAItB;AACD,SALD,MAKO;AACLP,UAAAA,SAAS,CAACO,KAAD,CAAT;AACAT,UAAAA,gBAAgB,CAACS,KAAD,CAAhB;AACD;AACF,OAVD;AAWD,KAZD,EAF2C,CAe3C;AACA;AACA;AACD;;AACD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAC,iBADX;AAEE,IAAA,KAAK,EAAEH,YAAY,CAACF,KAFtB;AAGE,IAAA,MAAM,EAAEE,YAAY,CAACH,WAHvB;AAIE,IAAA,YAAY,EAAE;AAAA,aACZI,cAAc,CAAC;AAAEJ,QAAAA,WAAW,EAAE,KAAf;AAAsBC,QAAAA,KAAK,EAAEC;AAA7B,OAAD,CADF;AAAA,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIJ,MAAJ,sBARF,CADF,eAWE,oBAAC,QAAD;AAAU,IAAA,SAAS,EAAC,QAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAA+BA,MAA/B,CAXF,CADF;AAeD,CA9CD;;AAgDA,IAAMe,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAgB;AACtC,SAAO;AACLlB,IAAAA,kBAAkB,EAAEkB,KAAK,CAACC;AADrB,GAAP;AAGD,CAJD;;AAMA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/B,SAAO;AACLnB,IAAAA,gBAAgB,EAAE,0BAACW,IAAD,EAAe;AAC/Bf,MAAAA,KAAK,CAACwB,QAAN,CAAe;AACbC,QAAAA,IAAI,EAAExB,YAAY,CAACyB,eADN;AAEbC,QAAAA,OAAO,EAAEZ;AAFI,OAAf;AAID;AANI,GAAP;AAQD,CATD;;AAUA,eAAehB,OAAO,CAACqB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CrB,UAA7C,CAAf","sourcesContent":["import { IonBadge, IonPopover } from \"@ionic/react\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Store from \"../redux/Store\";\r\nimport \"./CartNumber.scss\";\r\nimport * as reduxActions from \"../redux/actionTypes/AllActionTypes\";\r\n\r\ninterface stateProps {}\r\n\r\ninterface ownProps {\r\n  numberOfContainers;\r\n  updateCartNumber;\r\n}\r\n\r\ntype cartNumberProps = stateProps & ownProps;\r\nconst CartNumber: React.FC<cartNumberProps> = ({\r\n  numberOfContainers,\r\n  updateCartNumber,\r\n}) => {\r\n  const [number, setnumber] = useState(0);\r\n  const [popoverState, setShowPopover] = useState({\r\n    showPopover: false,\r\n    event: undefined,\r\n  });\r\n  useEffect(() => {\r\n    countContainerNumberSelected(0);\r\n  }, [numberOfContainers]);\r\n  function countContainerNumberSelected(count) {\r\n    setnumber(count);\r\n    numberOfContainers.map((item, index) => {\r\n      item.containerList.map((container) => {\r\n        if (container.selected) {\r\n          count++;\r\n          setnumber(count);\r\n          updateCartNumber(count);\r\n          //setShowPopover({ showPopover: true, event: \"\" });\r\n        } else {\r\n          setnumber(count);\r\n          updateCartNumber(count);\r\n        }\r\n      });\r\n    });\r\n    //setTimeout(() => {\r\n    //setShowPopover({ showPopover: true, event: \"\" });\r\n    // }, 1000);\r\n  }\r\n  return (\r\n    <div>\r\n      <IonPopover\r\n        cssClass=\"my-custom-class\"\r\n        event={popoverState.event}\r\n        isOpen={popoverState.showPopover}\r\n        onDidDismiss={() =>\r\n          setShowPopover({ showPopover: false, event: undefined })\r\n        }\r\n      >\r\n        <p>{number} containers added</p>\r\n      </IonPopover>\r\n      <IonBadge className=\"blueBg\"> {number}</IonBadge>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state: any) => {\r\n  return {\r\n    numberOfContainers: state.Cart,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = () => {\r\n  return {\r\n    updateCartNumber: (item: any) => {\r\n      Store.dispatch({\r\n        type: reduxActions.UPDATE_VARIABLE,\r\n        payLoad: item,\r\n      });\r\n    },\r\n  };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CartNumber);\r\n"]},"metadata":{},"sourceType":"module"}