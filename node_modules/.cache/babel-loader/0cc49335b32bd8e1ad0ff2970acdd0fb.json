{"ast":null,"code":"import * as LoginUserTypes from \"../actionTypes/AllActionTypes\";\nvar initialState = {\n  user: {\n    access_token: \"\",\n    refresh_token: \"\",\n    expires_in_second: 900000,\n    created_Time: new Date()\n  },\n  status: false\n};\n\nvar CheckAccessToken = function CheckAccessToken() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LoginUserTypes.ADD_ACCESS_TOKEN:\n      console.log(action.data.access_token);\n      state = {\n        user: {\n          access_token: action.data.access_token,\n          refresh_token: action.data.refresh_token,\n          expires_in_second: 900000,\n          created_Time: new Date()\n        },\n        status: true\n      };\n      return state;\n\n    case LoginUserTypes.REMOVE_ACCESS_TOKEN:\n      console.log(\"accesstoken removed\", initialState);\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nexport default CheckAccessToken;","map":{"version":3,"sources":["D:/SVN-folder/New-BRANCH-PUSH/New folder/src/redux/reducers/CheckAccessToken.js"],"names":["LoginUserTypes","initialState","user","access_token","refresh_token","expires_in_second","created_Time","Date","status","CheckAccessToken","state","action","type","ADD_ACCESS_TOKEN","console","log","data","REMOVE_ACCESS_TOKEN"],"mappings":"AAAA,OAAO,KAAKA,cAAZ,MAAgC,+BAAhC;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,YAAY,EAAE,EADV;AAEJC,IAAAA,aAAa,EAAE,EAFX;AAGJC,IAAAA,iBAAiB,EAAE,MAHf;AAIJC,IAAAA,YAAY,EAAE,IAAIC,IAAJ;AAJV,GADW;AAOjBC,EAAAA,MAAM,EAAE;AAPS,CAAnB;;AAUA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBT,YAAyB;AAAA,MAAXU,MAAW;;AACzD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKZ,cAAc,CAACa,gBAApB;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAM,CAACK,IAAP,CAAYb,YAAxB;AACAO,MAAAA,KAAK,GAAG;AACNR,QAAAA,IAAI,EAAE;AACJC,UAAAA,YAAY,EAAEQ,MAAM,CAACK,IAAP,CAAYb,YADtB;AAEJC,UAAAA,aAAa,EAAEO,MAAM,CAACK,IAAP,CAAYZ,aAFvB;AAGJC,UAAAA,iBAAiB,EAAE,MAHf;AAIJC,UAAAA,YAAY,EAAE,IAAIC,IAAJ;AAJV,SADA;AAONC,QAAAA,MAAM,EAAE;AAPF,OAAR;AAUA,aAAOE,KAAP;;AAEF,SAAKV,cAAc,CAACiB,mBAApB;AACEH,MAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCd,YAAnC;AAEA,aAAOA,YAAP;;AACF;AACE,aAAOS,KAAP;AApBJ;AAsBD,CAvBD;;AAyBA,eAAeD,gBAAf","sourcesContent":["import * as LoginUserTypes from \"../actionTypes/AllActionTypes\";\n\nvar initialState = {\n  user: {\n    access_token: \"\",\n    refresh_token: \"\",\n    expires_in_second: 900000,\n    created_Time: new Date(),\n  },\n  status: false,\n};\n\nconst CheckAccessToken = (state = initialState, action) => {\n  switch (action.type) {\n    case LoginUserTypes.ADD_ACCESS_TOKEN:\n      console.log(action.data.access_token);\n      state = {\n        user: {\n          access_token: action.data.access_token,\n          refresh_token: action.data.refresh_token,\n          expires_in_second: 900000,\n          created_Time: new Date(),\n        },\n        status: true,\n      };\n\n      return state;\n\n    case LoginUserTypes.REMOVE_ACCESS_TOKEN:\n      console.log(\"accesstoken removed\", initialState);\n\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport default CheckAccessToken;\n"]},"metadata":{},"sourceType":"module"}