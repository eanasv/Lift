{"ast":null,"code":"import _toConsumableArray from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nexport var sessionsReducer = function sessionsReducer(state, action) {\n  switch (action.type) {\n    case 'set-conf-loading':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          loading: action.isLoading\n        });\n      }\n\n    case 'set-conf-data':\n      {\n        return _objectSpread(_objectSpread({}, state), action.data);\n      }\n\n    case 'add-favorite':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          favorites: [].concat(_toConsumableArray(state.favorites), [action.sessionId])\n        });\n      }\n\n    case 'remove-favorite':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          favorites: _toConsumableArray(state.favorites.filter(function (x) {\n            return x !== action.sessionId;\n          }))\n        });\n      }\n\n    case 'update-filtered-tracks':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          filteredTracks: action.filteredTracks\n        });\n      }\n\n    case 'set-search-text':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          searchText: action.searchText\n        });\n      }\n\n    case 'set-menu-enabled':\n      {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          menuEnabled: action.menuEnabled\n        });\n      }\n  }\n};","map":{"version":3,"sources":["D:/SVN-folder/New-BRANCH-PUSH/New folder/src/data/sessions/sessions.reducer.ts"],"names":["sessionsReducer","state","action","type","loading","isLoading","data","favorites","sessionId","filter","x","filteredTracks","searchText","menuEnabled"],"mappings":";;AAGA,OAAO,IAAMA,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAmBC,MAAnB,EAA0D;AACvF,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,kBAAL;AAAyB;AACvB,+CAAYF,KAAZ;AAAmBG,UAAAA,OAAO,EAAEF,MAAM,CAACG;AAAnC;AACD;;AACD,SAAK,eAAL;AAAsB;AACpB,+CAAYJ,KAAZ,GAAsBC,MAAM,CAACI,IAA7B;AACD;;AACD,SAAK,cAAL;AAAqB;AACnB,+CAAYL,KAAZ;AAAmBM,UAAAA,SAAS,+BAAON,KAAK,CAACM,SAAb,IAAyBL,MAAM,CAACM,SAAhC;AAA5B;AACD;;AACD,SAAK,iBAAL;AAAwB;AACtB,+CAAYP,KAAZ;AAAmBM,UAAAA,SAAS,qBAAON,KAAK,CAACM,SAAP,CAAkBE,MAAlB,CAAyB,UAAAC,CAAC;AAAA,mBAAIA,CAAC,KAAKR,MAAM,CAACM,SAAjB;AAAA,WAA1B,CAAN;AAA5B;AACD;;AACD,SAAK,wBAAL;AAA+B;AAC7B,+CAAYP,KAAZ;AAAmBU,UAAAA,cAAc,EAAET,MAAM,CAACS;AAA1C;AACD;;AACD,SAAK,iBAAL;AAAwB;AACtB,+CAAYV,KAAZ;AAAmBW,UAAAA,UAAU,EAAEV,MAAM,CAACU;AAAtC;AACD;;AACD,SAAK,kBAAL;AAAyB;AACvB,+CAAYX,KAAZ;AAAmBY,UAAAA,WAAW,EAAEX,MAAM,CAACW;AAAvC;AACD;AArBH;AAuBD,CAxBM","sourcesContent":["import { SessionsActions } from './sessions.actions';\r\nimport { ConfState } from './conf.state';\r\n\r\nexport const sessionsReducer = (state: ConfState, action: SessionsActions): ConfState => {\r\n  switch (action.type) {\r\n    case 'set-conf-loading': {\r\n      return { ...state, loading: action.isLoading };\r\n    }\r\n    case 'set-conf-data': {\r\n      return { ...state, ...action.data };\r\n    }\r\n    case 'add-favorite': {\r\n      return { ...state, favorites: [...(state.favorites), action.sessionId] };\r\n    }\r\n    case 'remove-favorite': {\r\n      return { ...state, favorites: [...(state.favorites).filter(x => x !== action.sessionId)] };\r\n    }\r\n    case 'update-filtered-tracks': {\r\n      return { ...state, filteredTracks: action.filteredTracks };\r\n    }\r\n    case 'set-search-text': {\r\n      return { ...state, searchText: action.searchText };\r\n    }\r\n    case 'set-menu-enabled': {\r\n      return { ...state, menuEnabled: action.menuEnabled };\r\n    }\r\n  }\r\n}"]},"metadata":{},"sourceType":"module"}