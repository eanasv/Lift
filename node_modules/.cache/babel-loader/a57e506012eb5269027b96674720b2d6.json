{"ast":null,"code":"import _slicedToArray from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\src\\\\components\\\\dropdownInput\\\\DrpdownInput.tsx\";\n\nimport { IonLabel, IonSelect, IonSelectOption, IonText } from \"@ionic/react\";\nimport React, { useEffect, useState } from \"react\";\nimport \"./DrpdownInput.scss\";\nimport { useHistory } from \"react-router-dom\";\n\nvar DrpdownInput = function DrpdownInput(_ref) {\n  var label = _ref.label,\n      name = _ref.name,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      errors = _ref.errors,\n      description = _ref.description,\n      placeholder = _ref.placeholder,\n      listValues = _ref.listValues,\n      disabled = _ref.disabled,\n      selectedName = _ref.selectedName,\n      type = _ref.type;\n\n  // const [selectedName, setselectedName] = useState();\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      valueD = _useState2[0],\n      setValueD = _useState2[1];\n\n  var history = useHistory();\n  useEffect(function () {\n    setValueD({\n      label: selectedName,\n      value: value\n    });\n  }, []);\n\n  var onInpChange = function onInpChange(e) {\n    var val = e.target.value;\n    setValueD(val);\n\n    if (val === \"addAddress\") {\n      history.push(\"/addAddress\");\n    } else {\n      onChange(e, val);\n    }\n  };\n\n  var options = {\n    cssClass: \"my-custom-interface\"\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-element-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, label), /*#__PURE__*/React.createElement(IonSelect // selectedText={selectedName}\n  , {\n    name: name,\n    placeholder: placeholder,\n    value: value || valueD,\n    onIonChange: onInpChange,\n    \"cancel-text\": true,\n    interface: \"popover\",\n    className: \"dropdownInput\",\n    interfaceOptions: options,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, type === \"address\" && /*#__PURE__*/React.createElement(IonSelectOption, {\n    value: \"addAddress\",\n    class: \"selectAddAddr\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }\n  }, \"Add new Address\", /*#__PURE__*/React.createElement(\"img\", {\n    src: \"/assets/icon/eye.svg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 15\n    }\n  })), listValues === null || listValues === void 0 ? void 0 : listValues.map(function (item, index) {\n    return type === \"address\" ? /*#__PURE__*/React.createElement(IonSelectOption, {\n      key: index,\n      value: item,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 15\n      }\n    }, item.consigneeName, \" \", item.dropAddress, item.email) : /*#__PURE__*/React.createElement(IonSelectOption, {\n      key: index,\n      value: item.value,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 15\n      }\n    }, item.label);\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, errors && /*#__PURE__*/React.createElement(IonText, {\n    color: \"danger\",\n    className: \"validation-message\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    className: \"ion-padding-start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, errors))), /*#__PURE__*/React.createElement(IonText, {\n    color: \"danger\",\n    className: \"validation-message\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    className: \"ion-padding-start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, description)));\n};\n\nexport default DrpdownInput;","map":{"version":3,"sources":["D:/SVN-folder/New-BRANCH-PUSH/New folder/src/components/dropdownInput/DrpdownInput.tsx"],"names":["IonLabel","IonSelect","IonSelectOption","IonText","React","useEffect","useState","useHistory","DrpdownInput","label","name","value","onChange","errors","description","placeholder","listValues","disabled","selectedName","type","valueD","setValueD","history","onInpChange","e","val","target","push","options","cssClass","map","item","index","consigneeName","dropAddress","email"],"mappings":"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","sourcesContent":["import {\r\n  IonIcon,\r\n  IonLabel,\r\n  IonSelect,\r\n  IonSelectOption,\r\n  IonText,\r\n} from \"@ionic/react\";\r\nimport { addCircle } from \"ionicons/icons\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./DrpdownInput.scss\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\ninterface DrpDownInputProps {\r\n  label?: string;\r\n  name: any;\r\n  type?: any;\r\n  value?: any;\r\n  onChange: any;\r\n  required?: any;\r\n  errors?: any;\r\n  pattern?: any;\r\n  datatype?: any;\r\n  description?: string;\r\n  placeholder: string;\r\n  icon?: any;\r\n  onBlur?: any;\r\n  listValues?: Array<any>;\r\n  disabled?: any;\r\n  selectedName?: any;\r\n}\r\nconst DrpdownInput: React.FC<DrpDownInputProps> = ({\r\n  label,\r\n  name,\r\n  value,\r\n  onChange,\r\n  errors,\r\n  description,\r\n  placeholder,\r\n  listValues,\r\n  disabled,\r\n  selectedName,\r\n  type,\r\n}) => {\r\n  // const [selectedName, setselectedName] = useState();\r\n  const [valueD, setValueD] = useState({});\r\n  let history = useHistory();\r\n  useEffect(() => {\r\n    setValueD({ label: selectedName, value: value });\r\n  }, []);\r\n\r\n  const onInpChange = (e) => {\r\n    let val = e.target.value;\r\n    setValueD(val);\r\n    if (val === \"addAddress\") {\r\n      history.push(\"/addAddress\");\r\n    } else {\r\n      onChange(e, val);\r\n    }\r\n  };\r\n\r\n  const options = {\r\n    cssClass: \"my-custom-interface\",\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-element-group\">\r\n      <fieldset>\r\n        <legend>{label}</legend>\r\n        <IonSelect\r\n          // selectedText={selectedName}\r\n          name={name}\r\n          placeholder={placeholder}\r\n          value={value || valueD}\r\n          onIonChange={onInpChange}\r\n          cancel-text\r\n          interface=\"popover\"\r\n          className=\"dropdownInput\"\r\n          interfaceOptions={options}\r\n        >\r\n          {type === \"address\" && (\r\n            <IonSelectOption value=\"addAddress\" class=\"selectAddAddr\">\r\n              Add new Address\r\n              {/* <IonIcon icon={addCircle} className=\"addIcon\" /> */}\r\n              <img src=\"/assets/icon/eye.svg\" />\r\n            </IonSelectOption>\r\n          )}\r\n          {listValues?.map((item, index) =>\r\n            type === \"address\" ? (\r\n              <IonSelectOption key={index} value={item}>\r\n                {item.consigneeName} {item.dropAddress}\r\n                {item.email}\r\n              </IonSelectOption>\r\n            ) : (\r\n              <IonSelectOption key={index} value={item.value}>\r\n                {item.label}\r\n              </IonSelectOption>\r\n            )\r\n          )}\r\n        </IonSelect>\r\n      </fieldset>\r\n\r\n      <div className=\"\">\r\n        {errors && (\r\n          <IonText color=\"danger\" className=\"validation-message\">\r\n            <IonLabel className=\"ion-padding-start\">{errors}</IonLabel>\r\n          </IonText>\r\n        )}\r\n      </div>\r\n      {/* {validation && description && ( */}\r\n      <IonText color=\"danger\" className=\"validation-message\">\r\n        <IonLabel className=\"ion-padding-start\">{description}</IonLabel>\r\n      </IonText>\r\n      {/* )} */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DrpdownInput;\r\n"]},"metadata":{},"sourceType":"module"}