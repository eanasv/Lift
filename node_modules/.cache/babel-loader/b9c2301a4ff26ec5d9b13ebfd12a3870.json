{"ast":null,"code":"import _regeneratorRuntime from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\src\\\\pages\\\\address\\\\addAddress\\\\AddNewAddress.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport { IonPage, IonLabel, IonCard, IonIcon } from \"@ionic/react\";\nimport Store from \"../../../redux/Store\";\nimport Header from \"../../../components/Header\";\nimport TxtInput from \"../../../components/txtinput/TxtInput\";\nimport MapView from \"../../MapView\";\nimport * as EndPointURL from \"../../../util/EndPointURL\";\nimport DropDownInput from \"../../../components/dropdownInput/DrpdownInput\";\nimport * as Utils from \"../../../util/Utilities\";\nimport { closeOutline } from \"ionicons/icons\";\nimport { httpGetCallWithoutHeader, httpPostCallWithoutHeaderAndWithBody } from \"../../../services/EndPointApi\";\nimport * as reduxActions from \"../../../redux/actions/AllActions\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./AddNewAddress.scss\";\nexport default function AddNewAddress(props) {\n  var _props$history$locati3, _props$history$locati4, _props$history$locati5, _props$history$locati6, _address$phoneNumber, _address$phoneNumber2, _address$consigneeCon, _address$consigneeCon2;\n\n  var history = useHistory();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      allZones = _useState2[0],\n      setAllZones = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMessage = _useState4[0],\n      setErrorMessage = _useState4[1];\n\n  var _useState5 = useState({\n    consigneeContactName: \"\",\n    consigneeContactNumber: \"\",\n    dropAddress: \"\",\n    selectedDropZoneLabel: \"Jafza North\",\n    dropZone: \"JAFZAN\",\n    addressNickname: \"\",\n    addressLine1: \"\",\n    phoneNumber: \"\",\n    createMode: true,\n    latLng: \"\"\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      address = _useState6[0],\n      setAddress = _useState6[1];\n\n  var _useState7 = useState({\n    errorName: \"\",\n    errorMobile: \"\",\n    errorDropAddr: \"\",\n    errorDropZone: \"\",\n    errorNickName: \"\",\n    errorAddrLine: \"\",\n    errorPhone: \"\",\n    mapError: \"\"\n  }),\n      _useState8 = _slicedToArray(_useState7, 2),\n      error = _useState8[0],\n      setError = _useState8[1];\n\n  useEffect(function () {\n    var _props$history$locati;\n\n    var add;\n    console.log('props', props.history.location.state);\n\n    if ((_props$history$locati = props.history.location.state) === null || _props$history$locati === void 0 ? void 0 : _props$history$locati.isContainerEdit) {\n      var _props$history$locati2;\n\n      add = (_props$history$locati2 = props.history.location.state) === null || _props$history$locati2 === void 0 ? void 0 : _props$history$locati2.contact;\n      setAddress(add);\n    } else {\n      props.history.location.state ? setAddress(props.history.location.state) : setAddress(address);\n    }\n\n    var response = httpGetCallWithoutHeader(EndPointURL.allZone);\n    response.then(function (result) {\n      if (result.success) {\n        // if(props.history.location.state?.isContainerEdit) {\n        //     var dZ = result.data.data.dataItems.find((element) => {\n        //         return element.value === add.dropZone;\n        //       });\n        //     console.log(\"DZ\", dZ);\n        //     add.selectedDropZoneLabel = dZ.label;\n        //     console.log(add);\n        //     setAddress(add);\n        // } \n        setAllZones(result.data.data.dataItems);\n      }\n    });\n  }, []);\n\n  function getZone(e, value) {\n    console.log(e.target.name, e.target.value);\n    console.log(e.target.name, value);\n    setError(_objectSpread(_objectSpread({}, error), {}, {\n      errorDropZone: \"\"\n    }));\n    console.log(\"add\", address);\n    setAddress(_objectSpread(_objectSpread({}, address), {}, {\n      dropZone: value === null || value === void 0 ? void 0 : value.value,\n      selectedDropZoneLabel: value === null || value === void 0 ? void 0 : value.label,\n      dropAddress: \"\",\n      latLng: \"\"\n    }));\n  }\n\n  function handlePhoneNumber(e, value) {\n    setAddress(_objectSpread(_objectSpread({}, address), {}, {\n      phoneNumber: value ? \"971\" + value * 1 : \"\"\n    }));\n    var nameTest = Utils.validatePhone(value);\n\n    if (value) {\n      if (!nameTest) {\n        setError(_objectSpread(_objectSpread({}, error), {}, {\n          errorPhone: \"Please Enter 8 digit number\"\n        }));\n      } else {\n        setError(_objectSpread(_objectSpread({}, error), {}, {\n          errorPhone: \"\"\n        }));\n      }\n\n      setErrorMessage(\"\");\n    }\n  }\n\n  function handleContactName(e, value) {\n    setAddress(_objectSpread(_objectSpread({}, address), {}, {\n      consigneeContactName: value\n    }));\n    setError(_objectSpread(_objectSpread({}, error), {}, {\n      errorName: \"\"\n    }));\n  }\n\n  function handleMobileNumber(e, value) {\n    setAddress(_objectSpread(_objectSpread({}, address), {}, {\n      consigneeContactNumber: value ? \"971\" + value * 1 : \"\"\n    }));\n    var nameTest = Utils.validateMobile(value);\n\n    if (value) {\n      if (!nameTest) {\n        setError(_objectSpread(_objectSpread({}, error), {}, {\n          errorMobile: \"Please Enter 9 digit number\"\n        }));\n      } else {\n        setError(_objectSpread(_objectSpread({}, error), {}, {\n          errorMobile: \"\"\n        }));\n      }\n\n      setErrorMessage(\"\");\n    }\n  }\n\n  function handleLandMark(e, value) {\n    setAddress(_objectSpread(_objectSpread({}, address), {}, {\n      addressLine1: value\n    }));\n    setError(_objectSpread(_objectSpread({}, error), {}, {\n      errorAddrLine: \"\"\n    }));\n  }\n\n  function handleAddressNickName(e, value) {\n    setAddress(_objectSpread(_objectSpread({}, address), {}, {\n      addressNickname: value\n    }));\n    setError(_objectSpread(_objectSpread({}, error), {}, {\n      errorNickName: \"\"\n    }));\n  }\n\n  function addOrUpdate() {\n    var validate = true;\n\n    for (var key in address) {\n      if ((address[key] === \"\" || address[key] === null || address[key] === \"9710\") && key != \"isActive\") {\n        if (key != \"addressLine1\") {\n          validate = false;\n\n          if (key == \"consigneeContactName\") {\n            error.errorName = \"Contact Name is blank\";\n          }\n\n          if (key == \"dropAddress\" || key == \"latLng\") {\n            error.errorDropAddr = \"Drop address is blank\";\n          }\n\n          if (key == \"dropZone\") {\n            error.errorDropZone = \"Drop Zone is blank\";\n          }\n\n          if (key == \"addressNickname\") {\n            error.errorNickName = \"Nick name is blank\";\n          }\n\n          if (key == \"consigneeContactNumber\") {\n            error.errorMobile = \"Mobile Number is blank\";\n          }\n\n          if (key == \"phoneNumber\") {\n            error.errorPhone = \"Phone Number is blank\";\n          }\n\n          setError(_objectSpread({}, error));\n          setErrorMessage(\"Please Fill all the fields\");\n        }\n      }\n    }\n\n    if (validate) {\n      if (address.createMode) {\n        saveAddress();\n      } else {\n        props.history.location.state.isContainerEdit ? updateContainerContact() : updateAddress();\n      }\n    }\n  }\n\n  var updateContainerContact = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var data, cont, request, response, _data$booking, _data$booking2, _data$booking3, booking;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              data = props.history.location.state;\n              data.booking.containers.map(function (c) {\n                if (c.container_number == address.ctnNumber) {\n                  c.consigneeContactName = address.consigneeContactName;\n                  c.addressLine1 = address.addressLine1;\n                  c.phoneNumber = address.phoneNumber;\n                  c.consigneeContactNumber = address.consigneeContactNumber;\n                }\n              });\n              cont = data.booking.containers;\n              console.log(\"cont\", cont);\n              request = {\n                consigneeContactNumber: address.consigneeContactNumber,\n                phoneNumber: address.phoneNumber,\n                addressLine1: address.addressLine1,\n                consigneeContactName: address.consigneeContactName,\n                container_number: address.ctnNumber,\n                dpwTransactionId: address.dpwTransactionId,\n                requestDetailsNumber: address.requestDetailsNumber\n              };\n              _context.next = 7;\n              return httpPostCallWithoutHeaderAndWithBody(EndPointURL.contacDetailsUpdateUrl, request);\n\n            case 7:\n              response = _context.sent;\n              _context.next = 10;\n              return response.success;\n\n            case 10:\n              if (!_context.sent) {\n                _context.next = 15;\n                break;\n              }\n\n              console.log('bookingData', data.booking);\n              booking = {\n                booking: (_data$booking = data.booking) === null || _data$booking === void 0 ? void 0 : _data$booking.booking,\n                containers: cont,\n                userType: (_data$booking2 = data.booking) === null || _data$booking2 === void 0 ? void 0 : _data$booking2.userType,\n                status: (_data$booking3 = data.booking) === null || _data$booking3 === void 0 ? void 0 : _data$booking3.status\n              };\n              console.log('booking', booking);\n              history.push(\"/containerDetails\", booking);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function updateContainerContact() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  function updateAddress() {\n    var newAddress = address;\n    var response = httpPostCallWithoutHeaderAndWithBody(EndPointURL.updateAddress, newAddress);\n    response.then(function (result) {\n      if (result.success) {\n        var address = reduxActions.updateAddress(newAddress);\n        if (address) Store.dispatch(address);\n        props.history.goBack();\n      }\n    });\n  }\n\n  function saveAddress() {\n    var newAddress = address;\n    var response = httpPostCallWithoutHeaderAndWithBody(EndPointURL.addAddress, newAddress);\n    response.then(function (result) {\n      if (result.success) {\n        var address = reduxActions.addAddress(newAddress);\n        if (address) Store.dispatch(address);\n        props.history.goBack();\n      }\n    });\n  }\n\n  function handleAddress(e) {\n    console.log('loc', JSON.stringify(e.loc));\n    setAddress(_objectSpread(_objectSpread({}, address), {}, {\n      dropAddress: e.add,\n      latLng: JSON.stringify(e.loc)\n    }));\n    setError(_objectSpread(_objectSpread({}, error), {}, {\n      errorDropAddr: \"\"\n    }));\n  }\n\n  var mapViewProps = {\n    getAddressFromMap: handleAddress,\n    zone: address.dropZone,\n    latLng: address.latLng ? JSON.parse(address.latLng) : address.latLng,\n    selectedAdd: address.dropAddress,\n    isContainerEdit: (_props$history$locati3 = props.history.location.state) === null || _props$history$locati3 === void 0 ? void 0 : _props$history$locati3.isContainerEdit,\n    handleError: function handleError(e) {\n      setError(_objectSpread(_objectSpread({}, error), {}, {\n        mapError: e\n      }));\n    }\n  };\n  return /*#__PURE__*/React.createElement(IonPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    label: address.createMode ? \"Add address\" : \"Edit Address\",\n    action: \"check\",\n    checkClick: function checkClick() {\n      addOrUpdate();\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(IonCard, {\n    className: \"mapCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MapView, {\n    mapViewProps: mapViewProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IonLabel, {\n    className: \"redColor\",\n    hidden: error.mapError == \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 13\n    }\n  }, error.mapError, /*#__PURE__*/React.createElement(IonIcon, {\n    icon: closeOutline,\n    slot: \"icon-only\",\n    className: \"closeIconMap\",\n    onClick: function onClick() {\n      setError(_objectSpread(_objectSpread({}, error), {}, {\n        mapError: \"\"\n      }));\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 323,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(IonLabel, {\n    className: \"redColor\",\n    hidden: errorMessage == \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 335,\n      columnNumber: 13\n    }\n  }, errorMessage), /*#__PURE__*/React.createElement(IonCard, {\n    className: \"scrollCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(DropDownInput, {\n    name: \"dropZone\",\n    value: address.dropZone,\n    label: \"Zone\",\n    errors: error.errorDropZone,\n    type: \"text\",\n    required: true,\n    onChange: getZone,\n    datatype: \"TEXT\",\n    placeholder: \"Zone\",\n    listValues: allZones,\n    selectedName: address.selectedDropZoneLabel,\n    disabled: (_props$history$locati4 = props.history.location.state) === null || _props$history$locati4 === void 0 ? void 0 : _props$history$locati4.isContainerEdit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TxtInput, {\n    name: \"dropAddress\",\n    value: address.dropAddress,\n    label: \"Drop Address\",\n    errors: error.errorDropAddr,\n    type: \"text\",\n    required: true,\n    readonly: true,\n    datatype: \"TEXT\",\n    placeholder: \"Select Location\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 353,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TxtInput, {\n    name: \"addressLine1\",\n    value: address.addressLine1,\n    label: \"Addresss Line 1\",\n    errors: error.errorAddrLine,\n    type: \"text\",\n    required: true,\n    readonly: (_props$history$locati5 = props.history.location.state) === null || _props$history$locati5 === void 0 ? void 0 : _props$history$locati5.isContainerEdit,\n    onChange: handleLandMark,\n    datatype: \"TEXT\",\n    placeholder: \"Addresss Line 1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 364,\n      columnNumber: 25\n    }\n  }), !((_props$history$locati6 = props.history.location.state) === null || _props$history$locati6 === void 0 ? void 0 : _props$history$locati6.isContainerEdit) && /*#__PURE__*/React.createElement(TxtInput, {\n    name: \"nickName\",\n    value: address.addressNickname,\n    label: \"Nick Name\",\n    errors: error.errorNickName,\n    type: \"text\",\n    required: true,\n    onChange: handleAddressNickName,\n    datatype: \"TEXT\",\n    placeholder: \"Nick Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 376,\n      columnNumber: 76\n    }\n  }), /*#__PURE__*/React.createElement(TxtInput, {\n    name: \"contactName\",\n    value: address.consigneeContactName,\n    label: \"Contact Person\",\n    errors: error.errorName,\n    type: \"text\",\n    required: true,\n    onChange: handleContactName,\n    datatype: \"TEXT\",\n    placeholder: \"Contact Person\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 387,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TxtInput, {\n    name: \"phoneNumber\",\n    value: ((_address$phoneNumber = address.phoneNumber) === null || _address$phoneNumber === void 0 ? void 0 : _address$phoneNumber.split(\"971\")[1]) ? address === null || address === void 0 ? void 0 : (_address$phoneNumber2 = address.phoneNumber) === null || _address$phoneNumber2 === void 0 ? void 0 : _address$phoneNumber2.split(\"971\")[1] : address.phoneNumber,\n    label: \"Phone Number\",\n    errors: error.errorPhone,\n    type: \"tel\",\n    required: true,\n    onChange: handlePhoneNumber,\n    datatype: \"TEXT\",\n    placeholder: \"Phone Number\",\n    max: 8,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 398,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(TxtInput, {\n    name: \"mobileNumber\",\n    value: (address === null || address === void 0 ? void 0 : (_address$consigneeCon = address.consigneeContactNumber) === null || _address$consigneeCon === void 0 ? void 0 : _address$consigneeCon.split(\"971\")[1]) ? address === null || address === void 0 ? void 0 : (_address$consigneeCon2 = address.consigneeContactNumber) === null || _address$consigneeCon2 === void 0 ? void 0 : _address$consigneeCon2.split(\"971\")[1] : address.consigneeContactNumber,\n    label: \"Mobile Number\",\n    errors: error.errorMobile,\n    type: \"tel\",\n    required: true,\n    onChange: handleMobileNumber,\n    datatype: \"TEXT\",\n    placeholder: \"Mobile Number\",\n    max: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 412,\n      columnNumber: 25\n    }\n  })));\n}","map":{"version":3,"sources":["D:/SVN-folder/New-BRANCH-PUSH/New folder/src/pages/address/addAddress/AddNewAddress.tsx"],"names":["React","useState","useEffect","IonPage","IonLabel","IonCard","IonIcon","Store","Header","TxtInput","MapView","EndPointURL","DropDownInput","Utils","closeOutline","httpGetCallWithoutHeader","httpPostCallWithoutHeaderAndWithBody","reduxActions","useHistory","AddNewAddress","props","history","allZones","setAllZones","errorMessage","setErrorMessage","consigneeContactName","consigneeContactNumber","dropAddress","selectedDropZoneLabel","dropZone","addressNickname","addressLine1","phoneNumber","createMode","latLng","address","setAddress","errorName","errorMobile","errorDropAddr","errorDropZone","errorNickName","errorAddrLine","errorPhone","mapError","error","setError","add","console","log","location","state","isContainerEdit","contact","response","allZone","then","result","success","data","dataItems","getZone","e","value","target","name","label","handlePhoneNumber","nameTest","validatePhone","handleContactName","handleMobileNumber","validateMobile","handleLandMark","handleAddressNickName","addOrUpdate","validate","key","saveAddress","updateContainerContact","updateAddress","booking","containers","map","c","container_number","ctnNumber","cont","request","dpwTransactionId","requestDetailsNumber","contacDetailsUpdateUrl","userType","status","push","newAddress","dispatch","goBack","addAddress","handleAddress","JSON","stringify","loc","mapViewProps","getAddressFromMap","zone","parse","selectedAdd","handleError","split"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport {\r\n    IonPage,\r\n    IonLabel,\r\n    IonCard,\r\n    IonIcon,\r\n} from \"@ionic/react\";\r\nimport Store from \"../../../redux/Store\";\r\nimport Header from \"../../../components/Header\";\r\nimport TxtInput from \"../../../components/txtinput/TxtInput\";\r\nimport MapView from \"../../MapView\";\r\nimport * as EndPointURL from \"../../../util/EndPointURL\";\r\nimport DropDownInput from \"../../../components/dropdownInput/DrpdownInput\";\r\nimport * as Utils from \"../../../util/Utilities\";\r\nimport { closeOutline } from \"ionicons/icons\";\r\nimport { httpGetCallWithoutHeader, httpPostCallWithoutHeaderAndWithBody } from \"../../../services/EndPointApi\";\r\nimport * as reduxActions from \"../../../redux/actions/AllActions\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./AddNewAddress.scss\";\r\n\r\nexport default function AddNewAddress(props: any) {\r\n    let history = useHistory();\r\n    const [allZones, setAllZones] = useState([]);\r\n    const [errorMessage, setErrorMessage] = useState(\"\");\r\n    const [address, setAddress] = useState<any>({\r\n        consigneeContactName: \"\",\r\n        consigneeContactNumber: \"\",\r\n        dropAddress: \"\",\r\n        selectedDropZoneLabel: \"Jafza North\",\r\n        dropZone: \"JAFZAN\",\r\n        addressNickname: \"\",\r\n        addressLine1: \"\",\r\n        phoneNumber: \"\",\r\n        createMode: true,\r\n        latLng:\"\",\r\n    });\r\n    const [error, setError] = useState({\r\n        errorName: \"\",\r\n        errorMobile: \"\",\r\n        errorDropAddr: \"\",\r\n        errorDropZone: \"\",\r\n        errorNickName: \"\",\r\n        errorAddrLine: \"\",\r\n        errorPhone: \"\",\r\n        mapError: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        var add;\r\n        console.log('props',props.history.location.state);\r\n        if(props.history.location.state?.isContainerEdit){\r\n            add = props.history.location.state?.contact;\r\n            setAddress(add)\r\n        } else {\r\n            props.history.location.state\r\n            ? setAddress(props.history.location.state)\r\n            : setAddress(address);\r\n        }\r\n        \r\n        var response = httpGetCallWithoutHeader(\r\n            EndPointURL.allZone\r\n        );\r\n        response.then((result) => {\r\n            if (result.success) {\r\n\r\n                // if(props.history.location.state?.isContainerEdit) {\r\n                //     var dZ = result.data.data.dataItems.find((element) => {\r\n                //         return element.value === add.dropZone;\r\n                //       });\r\n                //     console.log(\"DZ\", dZ);\r\n                //     add.selectedDropZoneLabel = dZ.label;\r\n                //     console.log(add);\r\n                //     setAddress(add);\r\n                // } \r\n\r\n                setAllZones(result.data.data.dataItems);\r\n            } \r\n        });\r\n    }, []);\r\n\r\n    function getZone(e: any, value: any) {\r\n        console.log(e.target.name, e.target.value);\r\n        console.log(e.target.name, value);\r\n        setError({\r\n            ...error,\r\n            errorDropZone:\"\"\r\n        });\r\n        console.log(\"add\",address);\r\n        setAddress({\r\n            ...address,\r\n            dropZone:value?.value,\r\n            selectedDropZoneLabel:value?.label,\r\n            dropAddress:\"\",\r\n            latLng:\"\"\r\n        })\r\n    }\r\n\r\n    function handlePhoneNumber(e: any, value:any) {\r\n        setAddress({\r\n            ...address,\r\n            phoneNumber: value ? \"971\" + value * 1 : \"\"\r\n        })\r\n        var nameTest = Utils.validatePhone(value);\r\n        if (value) {\r\n            if (!nameTest) {\r\n                setError({\r\n                    ...error,\r\n                    errorPhone:\"Please Enter 8 digit number\"\r\n                });\r\n            } else {\r\n                setError({\r\n                    ...error,\r\n                    errorPhone:\"\"\r\n                });\r\n            }\r\n            setErrorMessage(\"\");\r\n        }\r\n    }\r\n\r\n    function handleContactName(e: any, value: any) {\r\n        setAddress({\r\n            ...address,\r\n            consigneeContactName:value\r\n        })\r\n        setError({\r\n            ...error,\r\n            errorName:\"\"\r\n        });\r\n    }\r\n\r\n    function handleMobileNumber(e: any, value:any) {\r\n        setAddress({\r\n            ...address,\r\n            consigneeContactNumber: value ? \"971\" + value * 1 : \"\"\r\n        })\r\n        var nameTest = Utils.validateMobile(value);\r\n        if (value) {\r\n            if (!nameTest) {\r\n                setError({\r\n                    ...error,\r\n                    errorMobile:\"Please Enter 9 digit number\"\r\n                });\r\n            } else {\r\n                setError({\r\n                    ...error,\r\n                    errorMobile:\"\"\r\n                });\r\n            }\r\n            setErrorMessage(\"\");\r\n        }\r\n    }\r\n\r\n    function handleLandMark(e: any, value:any) {\r\n        setAddress({\r\n            ...address,\r\n            addressLine1:value\r\n        })\r\n        setError({\r\n            ...error,\r\n            errorAddrLine:\"\"\r\n        });\r\n    }\r\n\r\n    function handleAddressNickName(e: any, value:any) {\r\n        setAddress({\r\n            ...address,\r\n            addressNickname:value\r\n        })\r\n        setError({\r\n            ...error,\r\n            errorNickName:\"\"\r\n        });\r\n    }\r\n\r\n    function addOrUpdate() {\r\n        var validate = true;\r\n        for (var key in address) {\r\n            if (\r\n                (address[key] === \"\" ||\r\n                    address[key] === null ||\r\n                    address[key] === \"9710\") &&\r\n                key != \"isActive\"\r\n            ) {\r\n                if (key != \"addressLine1\") {\r\n                    validate = false;\r\n                    if (key == \"consigneeContactName\") {\r\n                        error.errorName = \"Contact Name is blank\";\r\n                    }\r\n                    if (key == \"dropAddress\" || key == \"latLng\") {\r\n                        error.errorDropAddr = \"Drop address is blank\";\r\n                    }\r\n                    if (key == \"dropZone\") {\r\n                        error.errorDropZone = \"Drop Zone is blank\";\r\n                    }\r\n                    if (key == \"addressNickname\") {\r\n                        error.errorNickName = \"Nick name is blank\";\r\n                    }\r\n                    if (key == \"consigneeContactNumber\") {\r\n                        error.errorMobile = \"Mobile Number is blank\"\r\n                    }\r\n                    if (key == \"phoneNumber\") {\r\n                        error.errorPhone=\"Phone Number is blank\"\r\n                    }\r\n                    setError({...error});\r\n                    setErrorMessage(\"Please Fill all the fields\");\r\n                }\r\n            }\r\n        }\r\n\r\n        if (validate) {\r\n            if (address.createMode) {\r\n                saveAddress();\r\n            } else {\r\n                props.history.location.state.isContainerEdit ? updateContainerContact() : updateAddress();\r\n            }\r\n        }\r\n    }\r\n\r\n    const updateContainerContact = async() => {\r\n        var data = props.history.location.state;\r\n       data.booking.containers.map(c => {\r\n            if(c.container_number == address.ctnNumber) {\r\n                c.consigneeContactName = address.consigneeContactName; \r\n                c.addressLine1 = address.addressLine1;\r\n                c.phoneNumber = address.phoneNumber;\r\n                c.consigneeContactNumber = address.consigneeContactNumber;\r\n            }\r\n        } )\r\n        var cont = data.booking.containers;\r\n        console.log(\"cont\", cont)\r\n            var request = {\r\n              consigneeContactNumber : address.consigneeContactNumber,\r\n              phoneNumber : address.phoneNumber,\r\n              addressLine1: address.addressLine1,\r\n              consigneeContactName: address.consigneeContactName,\r\n              container_number: address.ctnNumber,\r\n              dpwTransactionId: address.dpwTransactionId,\r\n              requestDetailsNumber: address.requestDetailsNumber\r\n            }\r\n            let response = await httpPostCallWithoutHeaderAndWithBody(EndPointURL.contacDetailsUpdateUrl , request);\r\n            if (await response.success) {\r\n                console.log('bookingData',data.booking)\r\n                  let booking = {\r\n                    booking: data.booking?.booking,\r\n                    containers: cont,\r\n                    userType: data.booking?.userType,\r\n                    status: data.booking?.status\r\n                  };\r\n                  console.log('booking', booking);\r\n                  history.push(\"/containerDetails\", booking);\r\n              }\r\n        };\r\n\r\n    function updateAddress() {\r\n        let newAddress = address;\r\n        var response = httpPostCallWithoutHeaderAndWithBody(\r\n            EndPointURL.updateAddress, newAddress\r\n        );\r\n        response.then((result) => {\r\n            if (result.success) {\r\n                var address = reduxActions.updateAddress(newAddress);\r\n                if (address) Store.dispatch(address);\r\n                props.history.goBack();\r\n            }\r\n        });\r\n    }\r\n\r\n    function saveAddress() {\r\n        let newAddress = address;\r\n        var response = httpPostCallWithoutHeaderAndWithBody(\r\n            EndPointURL.addAddress, newAddress\r\n        );\r\n        response.then((result) => {\r\n            if (result.success) {\r\n                var address = reduxActions.addAddress(newAddress);\r\n                if (address) Store.dispatch(address);\r\n                props.history.goBack();\r\n            }\r\n        });\r\n    }\r\n\r\n    function handleAddress(e: any) {\r\n        console.log('loc',JSON.stringify(e.loc) );\r\n        setAddress({\r\n            ...address,\r\n            dropAddress:e.add,\r\n            latLng: JSON.stringify(e.loc)\r\n        })\r\n        setError({\r\n            ...error,\r\n            errorDropAddr:\"\"\r\n        });\r\n    }\r\n\r\n    const mapViewProps = {\r\n        getAddressFromMap: handleAddress,\r\n        zone: address.dropZone,\r\n        latLng: address.latLng ? JSON.parse(address.latLng) : address.latLng,\r\n        selectedAdd: address.dropAddress,\r\n        isContainerEdit: props.history.location.state?.isContainerEdit,\r\n        handleError: (e) => {\r\n            setError({\r\n                ...error,\r\n                mapError:e\r\n            });\r\n        },\r\n    };\r\n\r\n    return (\r\n        <IonPage>\r\n            <Header\r\n                label={address.createMode ? \"Add address\" : \"Edit Address\"}\r\n                action=\"check\"\r\n                checkClick={() => {\r\n                    addOrUpdate();\r\n                }}\r\n            />\r\n            <IonCard className=\"mapCard\">\r\n                <MapView mapViewProps={mapViewProps} />\r\n            </IonCard>\r\n            <IonLabel className=\"redColor\" hidden={error.mapError == \"\"}>\r\n                {error.mapError}\r\n                <IonIcon\r\n                    icon={closeOutline}\r\n                    slot=\"icon-only\"\r\n                    className=\"closeIconMap\"\r\n                    onClick={() => {\r\n                        setError({\r\n                            ...error,\r\n                            mapError:\"\"\r\n                    });\r\n                }}\r\n                />\r\n            </IonLabel>\r\n            <IonLabel className=\"redColor\" hidden={errorMessage == \"\"}>\r\n                {errorMessage}\r\n            </IonLabel>\r\n            <IonCard className=\"scrollCard\">\r\n                        <DropDownInput\r\n                            name={\"dropZone\"}\r\n                            value={address.dropZone}\r\n                            label=\"Zone\"\r\n                            errors={error.errorDropZone}\r\n                            type=\"text\"\r\n                            required={true}\r\n                            onChange={getZone}\r\n                            datatype=\"TEXT\"\r\n                            placeholder=\"Zone\"\r\n                            listValues={allZones}\r\n                            selectedName={address.selectedDropZoneLabel}\r\n                            disabled={props.history.location.state?.isContainerEdit}\r\n                        />\r\n                        <TxtInput\r\n                            name={\"dropAddress\"}\r\n                            value={address.dropAddress}\r\n                            label=\"Drop Address\"\r\n                            errors={error.errorDropAddr}\r\n                            type=\"text\"\r\n                            required={true}\r\n                            readonly={true}\r\n                            datatype=\"TEXT\"\r\n                            placeholder=\"Select Location\"\r\n                        />\r\n                        <TxtInput\r\n                            name={\"addressLine1\"}\r\n                            value={address.addressLine1}\r\n                            label=\"Addresss Line 1\"\r\n                            errors={error.errorAddrLine}\r\n                            type=\"text\"\r\n                            required={true}\r\n                            readonly={props.history.location.state?.isContainerEdit}\r\n                            onChange={handleLandMark}\r\n                            datatype=\"TEXT\"\r\n                            placeholder=\"Addresss Line 1\"\r\n                        />\r\n                        {!props.history.location.state?.isContainerEdit && <TxtInput\r\n                            name={\"nickName\"}\r\n                            value={address.addressNickname}\r\n                            label=\"Nick Name\"\r\n                            errors={error.errorNickName}\r\n                            type=\"text\"\r\n                            required={true}\r\n                            onChange={handleAddressNickName}\r\n                            datatype=\"TEXT\"\r\n                            placeholder=\"Nick Name\"\r\n                        />}\r\n                        <TxtInput\r\n                            name={\"contactName\"}\r\n                            value={address.consigneeContactName}\r\n                            label=\"Contact Person\"\r\n                            errors={error.errorName}\r\n                            type=\"text\"\r\n                            required={true}\r\n                            onChange={handleContactName}\r\n                            datatype=\"TEXT\"\r\n                            placeholder=\"Contact Person\"\r\n                        />\r\n                        <TxtInput\r\n                            name={\"phoneNumber\"}\r\n                            value={address.phoneNumber?.split(\"971\")[1]\r\n                                ? address?.phoneNumber?.split(\"971\")[1]\r\n                                : address.phoneNumber}\r\n                            label=\"Phone Number\"\r\n                            errors={error.errorPhone}\r\n                            type=\"tel\"\r\n                            required={true}\r\n                            onChange={handlePhoneNumber}\r\n                            datatype=\"TEXT\"\r\n                            placeholder=\"Phone Number\"\r\n                            max={8}\r\n                        />\r\n                        <TxtInput\r\n                            name={\"mobileNumber\"}\r\n                            value={address?.consigneeContactNumber?.split(\"971\")[1]\r\n                                ? address?.consigneeContactNumber?.split(\"971\")[1]\r\n                                : address.consigneeContactNumber}\r\n                            label=\"Mobile Number\"\r\n                            errors={error.errorMobile}\r\n                            type=\"tel\"\r\n                            required={true}\r\n                            onChange={handleMobileNumber}\r\n                            datatype=\"TEXT\"\r\n                            placeholder=\"Mobile Number\"\r\n                            max={9}\r\n                        />\r\n            </IonCard>\r\n        </IonPage>\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}