{"ast":null,"code":"import _toConsumableArray from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport * as LoginUserTypes from \"../actionTypes/AllActionTypes\";\n\nvar ContainerCart = function ContainerCart() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LoginUserTypes.ADD_CONTAINER_CART:\n      state = state.concat(action.payLoad.containerList);\n      var state1 = state;\n      state1.selectedNumber = action.payLoad.selectedNumber;\n      return state1;\n\n    case LoginUserTypes.REMOVE_CONTAINER_CART:\n      return state.filter(function (i) {\n        return i.container_number !== action.payLoad;\n      });\n\n    case LoginUserTypes.REMOVE_DECLARATION_CART:\n      var state1 = state.filter(function (item) {\n        return action.payLoad.containerList.indexOf(item) === -1;\n      });\n      state1.selectedNumber = action.payLoad.selectedNumber;\n      return state1;\n\n    case LoginUserTypes.UPDATE_CONTAINER_CART:\n      var update = _toConsumableArray(state);\n\n      update.map(function (item, index) {\n        item.container_number == action.payLoad.container_number ? item = action.payLoad : console.log('no');\n      });\n      update.push(1); //state = action.payLoad;\n\n      update.pop();\n      update.selectedNumber = action.payLoad.selectedNumber;\n      return update;\n\n    case LoginUserTypes.REMOVE_ALL_CONTAINERS:\n      return state = [];\n\n    default:\n      return state;\n  }\n};\n\nexport default ContainerCart;","map":{"version":3,"sources":["D:/SVN-folder/New-BRANCH-PUSH/New folder/src/redux/reducers/ContainerCart.js"],"names":["LoginUserTypes","ContainerCart","state","action","type","ADD_CONTAINER_CART","concat","payLoad","containerList","state1","selectedNumber","REMOVE_CONTAINER_CART","filter","i","container_number","REMOVE_DECLARATION_CART","item","indexOf","UPDATE_CONTAINER_CART","update","map","index","console","log","push","pop","REMOVE_ALL_CONTAINERS"],"mappings":";AAAA,OAAO,KAAKA,cAAZ,MAAgC,+BAAhC;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAwB;AAAA,MAAvBC,KAAuB,uEAAf,EAAe;AAAA,MAAXC,MAAW;;AAC5C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKJ,cAAc,CAACK,kBAApB;AAEGH,MAAAA,KAAK,GAAGA,KAAK,CAACI,MAAN,CAAaH,MAAM,CAACI,OAAP,CAAeC,aAA5B,CAAR;AACD,UAAIC,MAAM,GAACP,KAAX;AACAO,MAAAA,MAAM,CAACC,cAAP,GAAsBP,MAAM,CAACI,OAAP,CAAeG,cAArC;AACA,aAAOD,MAAP;;AACF,SAAKT,cAAc,CAACW,qBAApB;AACE,aAAOT,KAAK,CAACU,MAAN,CAAa,UAAAC,CAAC;AAAA,eAAIA,CAAC,CAACC,gBAAF,KAAuBX,MAAM,CAACI,OAAlC;AAAA,OAAd,CAAP;;AACF,SAAKP,cAAc,CAACe,uBAApB;AACI,UAAIN,MAAM,GAAGP,KAAK,CAACU,MAAN,CAAa,UAAUI,IAAV,EAAgB;AAEvC,eAAQb,MAAM,CAACI,OAAP,CAAeC,aAAf,CAA6BS,OAA7B,CAAqCD,IAArC,MAA+C,CAAC,CAAxD;AACH,OAHa,CAAb;AAIDP,MAAAA,MAAM,CAACC,cAAP,GAAsBP,MAAM,CAACI,OAAP,CAAeG,cAArC;AACD,aAAOD,MAAP;;AACF,SAAKT,cAAc,CAACkB,qBAApB;AACI,UAAIC,MAAM,sBAAOjB,KAAP,CAAV;;AACAiB,MAAAA,MAAM,CAACC,GAAP,CAAW,UAACJ,IAAD,EAAOK,KAAP,EAAiB;AAC1BL,QAAAA,IAAI,CAACF,gBAAL,IAAuBX,MAAM,CAACI,OAAP,CAAeO,gBAAtC,GACDE,IAAI,GAACb,MAAM,CAACI,OADX,GAEDe,OAAO,CAACC,GAAR,CAAY,IAAZ,CAFC;AAGH,OAJC;AAKFJ,MAAAA,MAAM,CAACK,IAAP,CAAY,CAAZ,EAPF,CAQE;;AACAL,MAAAA,MAAM,CAACM,GAAP;AAEAN,MAAAA,MAAM,CAACT,cAAP,GAAsBP,MAAM,CAACI,OAAP,CAAeG,cAArC;AACE,aAAOS,MAAP;;AACJ,SAAKnB,cAAc,CAAC0B,qBAApB;AACE,aAAOxB,KAAK,GAAC,EAAb;;AACF;AACE,aAAOA,KAAP;AAhCJ;AAkCD,CAnCD;;AAqCA,eAAeD,aAAf","sourcesContent":["import * as LoginUserTypes from \"../actionTypes/AllActionTypes\";\n\nconst ContainerCart = (state = [], action) => {\n  switch (action.type) {\n    case LoginUserTypes.ADD_CONTAINER_CART:\n     \n       state = state.concat(action.payLoad.containerList);\n      var state1=state\n      state1.selectedNumber=action.payLoad.selectedNumber;\n      return state1;\n    case LoginUserTypes.REMOVE_CONTAINER_CART:\n      return state.filter(i => i.container_number !== action.payLoad)\n    case LoginUserTypes.REMOVE_DECLARATION_CART:\n        var state1=  state.filter(function (item) {\n          \n           return  action.payLoad.containerList.indexOf(item) === -1;\n       });\n       state1.selectedNumber=action.payLoad.selectedNumber;\n      return state1\n    case LoginUserTypes.UPDATE_CONTAINER_CART:\n        let update = [...state];\n        update.map((item, index) => {\n          item.container_number==action.payLoad.container_number?\n         item=action.payLoad\n        :console.log('no')\n      })\n      update.push(1);\n      //state = action.payLoad;\n      update.pop();\n      \n      update.selectedNumber=action.payLoad.selectedNumber;\n        return update;\n    case LoginUserTypes.REMOVE_ALL_CONTAINERS:\n      return state=[]  \n    default:\n      return state;\n  }\n};\n\nexport default ContainerCart;\n"]},"metadata":{},"sourceType":"module"}