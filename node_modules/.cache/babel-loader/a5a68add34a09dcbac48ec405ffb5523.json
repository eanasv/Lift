{"ast":null,"code":"import _slicedToArray from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\src\\\\components\\\\topMenu\\\\TopMenu.tsx\";\nimport { IonButton, IonIcon, IonRow, IonSelect, IonSelectOption } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport \"./TopMenu.scss\";\nexport default function TopMenu(props) {\n  var _this = this;\n\n  var agentCodeoptions = {\n    cssClass: \"agent-interface-class\"\n  };\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  return /*#__PURE__*/React.createElement(IonRow, {\n    className: \"horizontal-scroll\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filter-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, props.topMenuProps.map(function (item, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, item.type == \"button\" && /*#__PURE__*/React.createElement(IonButton, {\n      className: \"circ-button\",\n      size: \"small\",\n      onClick: function onClick() {\n        return item.clickedOnTopMenu();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 15\n      }\n    }, item.icon && /*#__PURE__*/React.createElement(IonIcon, {\n      icon: item.icon,\n      slot: item.slot,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 31\n      }\n    }), item.src && /*#__PURE__*/React.createElement(IonIcon, {\n      slot: item.slot,\n      src: \"/assets/icon/\" + item.src + \".svg\",\n      style: {\n        fontSize: item.size,\n        paddingLeft: \"5px\",\n        paddingRight: \"5px\",\n        transform: item.rotate\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 19\n      }\n    }), item.name && item.name), item.type == \"dropDown\" && /*#__PURE__*/React.createElement(\"div\", {\n      id: \"drop-down-css\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"fieldset\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IonSelect, {\n      value: value,\n      selectedText: value.label,\n      interface: \"popover\",\n      onIonChange: function onIonChange(e) {\n        var val = e.detail.value;\n        setValue(val);\n        console.log(item.selected);\n        item.clickedOnTopMenu(val);\n      },\n      \"cancel-text\": true,\n      placeholder: item.name,\n      interfaceOptions: agentCodeoptions,\n      className: \"circ-button\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 19\n      }\n    }, item.list.map(function (opt, index) {\n      return /*#__PURE__*/React.createElement(IonSelectOption, {\n        value: opt,\n        key: index,\n        className: \"select-opt\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, opt.label);\n    })))));\n  })));\n}","map":{"version":3,"sources":["D:/SVN-folder/New-BRANCH-PUSH/New folder/src/components/topMenu/TopMenu.tsx"],"names":["IonButton","IonIcon","IonRow","IonSelect","IonSelectOption","React","useState","TopMenu","props","agentCodeoptions","cssClass","value","setValue","topMenuProps","map","item","index","type","clickedOnTopMenu","icon","slot","src","fontSize","size","paddingLeft","paddingRight","transform","rotate","name","label","e","val","detail","console","log","selected","list","opt"],"mappings":"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","sourcesContent":["import {\r\n  IonButton,\r\n  IonIcon,\r\n  IonRow,\r\n  IonSelect,\r\n  IonSelectOption,\r\n} from \"@ionic/react\";\r\nimport React, { useState } from \"react\";\r\nimport \"./TopMenu.scss\";\r\n\r\nexport default function TopMenu(props) {\r\n  const agentCodeoptions = {\r\n    cssClass: \"agent-interface-class\",\r\n  };\r\n  const [value, setValue] = useState<any>({});\r\n\r\n  return (\r\n    <IonRow className=\"horizontal-scroll\">\r\n      <div className=\"filter-buttons\">\r\n        {props.topMenuProps.map((item, index) => (\r\n          <div key={index}>\r\n            {item.type == \"button\" && (\r\n              <IonButton\r\n                className=\"circ-button\"\r\n                size=\"small\"\r\n                onClick={() => item.clickedOnTopMenu()}\r\n              >\r\n                {item.icon && <IonIcon icon={item.icon} slot={item.slot} />}\r\n                {item.src && (\r\n                  <IonIcon\r\n                    slot={item.slot}\r\n                    src={\"/assets/icon/\" + item.src + \".svg\"}\r\n                    style={{\r\n                      fontSize: item.size,\r\n                      paddingLeft: \"5px\",\r\n                      paddingRight: \"5px\",\r\n                      transform:item.rotate\r\n                    }}\r\n                  />\r\n                )}\r\n                {item.name && item.name}\r\n              </IonButton>\r\n            )}\r\n            {item.type == \"dropDown\" && (\r\n              <div id=\"drop-down-css\">\r\n                <fieldset>\r\n                  <IonSelect\r\n                    value={value}\r\n                    selectedText={value.label}\r\n                    interface=\"popover\"\r\n                    onIonChange={(e) => {\r\n                      let val = e.detail.value;\r\n                      setValue(val);\r\n                      console.log(item.selected);\r\n                      item.clickedOnTopMenu(val);\r\n                    }}\r\n                    cancel-text\r\n                    placeholder={item.name}\r\n                    interfaceOptions={agentCodeoptions}\r\n                    className=\"circ-button\"\r\n                  >\r\n                    {item.list.map((opt, index) => {\r\n                      return (\r\n                        <IonSelectOption\r\n                          value={opt}\r\n                          key={index}\r\n                          className=\"select-opt\"\r\n                        >\r\n                          {opt.label}\r\n                        </IonSelectOption>\r\n                      );\r\n                    })}\r\n                  </IonSelect>\r\n                </fieldset>\r\n              </div>\r\n            )}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </IonRow>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}