{"ast":null,"code":"import _slicedToArray from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\src\\\\components\\\\alert\\\\Alert.tsx\";\nimport { IonAlert } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport \"./Alert.scss\";\nexport default function Alert(props) {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      error = _useState2[0],\n      setError = _useState2[1];\n\n  function alertAction(item, actionType) {\n    props.alertProps.alertAction(item, actionType);\n  }\n\n  return /*#__PURE__*/React.createElement(IonAlert, {\n    id: \"alert\",\n    isOpen: props.alertProps.isShow // onDidDismiss={() => !props.alertProps.isShow}\n    ,\n    header: props.alertProps.header,\n    message: \"<div class='text-style'> \" + props.alertProps.icon + \"<br/> Are you sure to  \" + props.alertProps.content + \"<div class='redColor'> \" + props.alertProps.message + \"</div>\" + \"<div class='row message2-text'>\" + props.alertProps.itemName + \"</div>\" + \"</div>\",\n    inputs: props.alertProps.inputs,\n    buttons: [{\n      text: \"Continue\",\n      role: \"confirm\",\n      handler: function handler(e) {\n        console.log(\"data\", e);\n        alertAction(e, true);\n      }\n    }, {\n      text: \"Cancel\",\n      role: \"cancel\",\n      handler: function handler() {\n        alertAction(\"\", false);\n      }\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  });\n}","map":{"version":3,"sources":["D:/SVN-folder/New-BRANCH-PUSH/New folder/src/components/alert/Alert.tsx"],"names":["IonAlert","React","useState","Alert","props","error","setError","alertAction","item","actionType","alertProps","isShow","header","icon","content","message","itemName","inputs","text","role","handler","e","console","log"],"mappings":";;AAAA,SAASA,QAAT,QAA4C,cAA5C;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,cAAP;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAA2B;AACxC,kBAA0BF,QAAQ,CAAU,KAAV,CAAlC;AAAA;AAAA,MAAOG,KAAP;AAAA,MAAcC,QAAd;;AAEA,WAASC,WAAT,CAAqBC,IAArB,EAA2BC,UAA3B,EAAuC;AACrCL,IAAAA,KAAK,CAACM,UAAN,CAAiBH,WAAjB,CAA6BC,IAA7B,EAAmCC,UAAnC;AACD;;AACD,sBACE,oBAAC,QAAD;AACE,IAAA,EAAE,EAAC,OADL;AAEE,IAAA,MAAM,EAAEL,KAAK,CAACM,UAAN,CAAiBC,MAF3B,CAGE;AAHF;AAIE,IAAA,MAAM,EAAEP,KAAK,CAACM,UAAN,CAAiBE,MAJ3B;AAKE,IAAA,OAAO,EACL,8BAA8BR,KAAK,CAACM,UAAN,CAAiBG,IAA/C,GAAsD,yBAAtD,GACAT,KAAK,CAACM,UAAN,CAAiBI,OADjB,GAEA,yBAFA,GAGAV,KAAK,CAACM,UAAN,CAAiBK,OAHjB,GAIA,QAJA,GAKA,iCALA,GAKkCX,KAAK,CAACM,UAAN,CAAiBM,QALnD,GAK4D,QAL5D,GAME,QAZN;AAcE,IAAA,MAAM,EAAEZ,KAAK,CAACM,UAAN,CAAiBO,MAd3B;AAeE,IAAA,OAAO,EACL,CACE;AACEC,MAAAA,IAAI,EAAE,UADR;AAEEC,MAAAA,IAAI,EAAE,SAFR;AAGEC,MAAAA,OAAO,EAAE,iBAACC,CAAD,EAAO;AACdC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBF,CAAnB;AACAd,QAAAA,WAAW,CAACc,CAAD,EAAI,IAAJ,CAAX;AACD;AANH,KADF,EASE;AACEH,MAAAA,IAAI,EAAE,QADR;AAEEC,MAAAA,IAAI,EAAE,QAFR;AAGEC,MAAAA,OAAO,EAAE,mBAAM;AACbb,QAAAA,WAAW,CAAC,EAAD,EAAI,KAAJ,CAAX;AACD;AALH,KATF,CAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAoCD","sourcesContent":["import { IonAlert, IonInput, IonIcon } from \"@ionic/react\";\r\nimport React, { useState } from \"react\";\r\nimport InappBrowser from \"../../components/InappBrowser\";\r\nimport \"./Alert.scss\";\r\n\r\nexport default function Alert(props: any) {\r\n  const [error, setError] = useState<boolean>(false);\r\n\r\n  function alertAction(item, actionType) {\r\n    props.alertProps.alertAction(item, actionType);\r\n  }\r\n  return (\r\n    <IonAlert\r\n      id=\"alert\"\r\n      isOpen={props.alertProps.isShow}\r\n      // onDidDismiss={() => !props.alertProps.isShow}\r\n      header={props.alertProps.header}\r\n      message={\r\n        \"<div class='text-style'> \" + props.alertProps.icon + \"<br/> Are you sure to  \" +\r\n        props.alertProps.content +\r\n        \"<div class='redColor'> \" +\r\n        props.alertProps.message +\r\n        \"</div>\" +\r\n        \"<div class='row message2-text'>\"+props.alertProps.itemName+\"</div>\"\r\n        + \"</div>\"\r\n      }\r\n      inputs={props.alertProps.inputs}\r\n      buttons={\r\n        [\r\n          {\r\n            text: \"Continue\",\r\n            role: \"confirm\",\r\n            handler: (e) => {\r\n              console.log(\"data\",e)\r\n              alertAction(e, true);\r\n            },\r\n          },\r\n          {\r\n            text: \"Cancel\",\r\n            role: \"cancel\",\r\n            handler: () => {\r\n              alertAction(\"\",false);\r\n            },\r\n          },\r\n        ]}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}