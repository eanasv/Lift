{"ast":null,"code":"import _objectSpread from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport { todayDate } from \"../../services/Common\";\nimport * as LoginUserTypes from \"../actionTypes/AllActionTypes\";\nvar initialState = {\n  containerList: [],\n  multiLocAndTime: false,\n  truckNumber: 0,\n  date_time: todayDate\n};\n\nvar TruckBook = function TruckBook() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LoginUserTypes.BOOK_TRUCK_MULTILOCATION:\n      state.containerList = action.payLoad;\n      state.multiLocAndTime = true;\n      return state;\n\n    case LoginUserTypes.BOOK_TRUCK_SINGLE_LOCATION:\n      state.containerList = action.payLoad;\n      state.multiLocAndTime = false;\n      return state;\n\n    case LoginUserTypes.BOOK_TRUCK_UPDATE_ADDRESS:\n      console.log(action.payLoad);\n\n      var updatedState = _objectSpread({}, state);\n\n      updatedState.containerList.forEach(function (element, index) {\n        updatedState.containerList[index] = _objectSpread(_objectSpread({}, element), action.payLoad);\n      });\n      return updatedState;\n\n    case LoginUserTypes.BOOK_TRUCK_UPDATE_OTHER_DATA:\n      var updatedState = _objectSpread({}, state);\n\n      console.log(\"%%%%%%\", action.payLoad);\n      updatedState.containerList.forEach(function (element, index) {\n        if (element.container_number === action.payLoad.containerNumber) {\n          updatedState.containerList[index] = _objectSpread(_objectSpread({}, element), action.payLoad.element);\n        }\n      });\n      console.log(\"***********\", updatedState);\n      return updatedState;\n\n    case LoginUserTypes.BOOK_TRUCK_UPDATE_COMMON_DATA:\n      var updatedState = _objectSpread({}, state);\n\n      console.log(action.payLoad);\n      updatedState = _objectSpread(_objectSpread({}, updatedState), action.payLoad);\n      console.log(updatedState);\n      return updatedState;\n\n    case LoginUserTypes.BOOK_TRUCK_CLEAR:\n      return initialState;\n\n    default:\n      return state;\n  }\n};\n\nexport default TruckBook;","map":{"version":3,"sources":["D:/SVN-folder/New-BRANCH-PUSH/New folder/src/redux/reducers/TruckBook.tsx"],"names":["todayDate","LoginUserTypes","initialState","containerList","multiLocAndTime","truckNumber","date_time","TruckBook","state","action","type","BOOK_TRUCK_MULTILOCATION","payLoad","BOOK_TRUCK_SINGLE_LOCATION","BOOK_TRUCK_UPDATE_ADDRESS","console","log","updatedState","forEach","element","index","BOOK_TRUCK_UPDATE_OTHER_DATA","container_number","containerNumber","BOOK_TRUCK_UPDATE_COMMON_DATA","BOOK_TRUCK_CLEAR"],"mappings":";AAAA,SAASA,SAAT,QAA0B,uBAA1B;AACA,OAAO,KAAKC,cAAZ,MAAgC,+BAAhC;AACA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,aAAa,EAAE,EADE;AAEjBC,EAAAA,eAAe,EAAE,KAFA;AAGjBC,EAAAA,WAAW,EAAE,CAHI;AAIjBC,EAAAA,SAAS,EAAEN;AAJM,CAAnB;;AAOA,IAAMO,SAAS,GAAG,SAAZA,SAAY,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBN,YAAyB;AAAA,MAAXO,MAAW;;AAClD,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKT,cAAc,CAACU,wBAApB;AACEH,MAAAA,KAAK,CAACL,aAAN,GAAsBM,MAAM,CAACG,OAA7B;AACAJ,MAAAA,KAAK,CAACJ,eAAN,GAAwB,IAAxB;AACA,aAAOI,KAAP;;AACF,SAAKP,cAAc,CAACY,0BAApB;AACEL,MAAAA,KAAK,CAACL,aAAN,GAAsBM,MAAM,CAACG,OAA7B;AACAJ,MAAAA,KAAK,CAACJ,eAAN,GAAwB,KAAxB;AACA,aAAOI,KAAP;;AACF,SAAKP,cAAc,CAACa,yBAApB;AACEC,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACG,OAAnB;;AACA,UAAIK,YAAY,qBAAQT,KAAR,CAAhB;;AACAS,MAAAA,YAAY,CAACd,aAAb,CAA2Be,OAA3B,CAAmC,UAACC,OAAD,EAAUC,KAAV,EAAoB;AACrDH,QAAAA,YAAY,CAACd,aAAb,CAA2BiB,KAA3B,oCAAyCD,OAAzC,GAAqDV,MAAM,CAACG,OAA5D;AACD,OAFD;AAGA,aAAOK,YAAP;;AAEF,SAAKhB,cAAc,CAACoB,4BAApB;AACE,UAAIJ,YAAY,qBAAQT,KAAR,CAAhB;;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBP,MAAM,CAACG,OAA7B;AACAK,MAAAA,YAAY,CAACd,aAAb,CAA2Be,OAA3B,CAAmC,UAACC,OAAD,EAAUC,KAAV,EAAoB;AACrD,YAAID,OAAO,CAACG,gBAAR,KAA6Bb,MAAM,CAACG,OAAP,CAAeW,eAAhD,EAAiE;AAC/DN,UAAAA,YAAY,CAACd,aAAb,CAA2BiB,KAA3B,oCACKD,OADL,GAEKV,MAAM,CAACG,OAAP,CAAeO,OAFpB;AAID;AACF,OAPD;AAQAJ,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BC,YAA3B;AACA,aAAOA,YAAP;;AAEF,SAAKhB,cAAc,CAACuB,6BAApB;AACE,UAAIP,YAAY,qBAAQT,KAAR,CAAhB;;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYP,MAAM,CAACG,OAAnB;AACAK,MAAAA,YAAY,mCACPA,YADO,GAEPR,MAAM,CAACG,OAFA,CAAZ;AAIAG,MAAAA,OAAO,CAACC,GAAR,CAAYC,YAAZ;AACA,aAAOA,YAAP;;AACF,SAAKhB,cAAc,CAACwB,gBAApB;AACE,aAAOvB,YAAP;;AACF;AACE,aAAOM,KAAP;AA3CJ;AA6CD,CA9CD;;AAgDA,eAAeD,SAAf","sourcesContent":["import { todayDate } from \"../../services/Common\";\nimport * as LoginUserTypes from \"../actionTypes/AllActionTypes\";\nvar initialState = {\n  containerList: [],\n  multiLocAndTime: false,\n  truckNumber: 0,\n  date_time: todayDate,\n};\n\nconst TruckBook = (state = initialState, action) => {\n  switch (action.type) {\n    case LoginUserTypes.BOOK_TRUCK_MULTILOCATION:\n      state.containerList = action.payLoad;\n      state.multiLocAndTime = true;\n      return state;\n    case LoginUserTypes.BOOK_TRUCK_SINGLE_LOCATION:\n      state.containerList = action.payLoad;\n      state.multiLocAndTime = false;\n      return state;\n    case LoginUserTypes.BOOK_TRUCK_UPDATE_ADDRESS:\n      console.log(action.payLoad);\n      var updatedState = { ...state };\n      updatedState.containerList.forEach((element, index) => {\n        updatedState.containerList[index] = { ...element, ...action.payLoad };\n      });\n      return updatedState;\n\n    case LoginUserTypes.BOOK_TRUCK_UPDATE_OTHER_DATA:\n      var updatedState = { ...state };\n      console.log(\"%%%%%%\", action.payLoad);\n      updatedState.containerList.forEach((element, index) => {\n        if (element.container_number === action.payLoad.containerNumber) {\n          updatedState.containerList[index] = {\n            ...element,\n            ...action.payLoad.element,\n          };\n        }\n      });\n      console.log(\"***********\", updatedState);\n      return updatedState;\n\n    case LoginUserTypes.BOOK_TRUCK_UPDATE_COMMON_DATA:\n      var updatedState = { ...state };\n      console.log(action.payLoad);\n      updatedState = {\n        ...updatedState,\n        ...action.payLoad,\n      };\n      console.log(updatedState);\n      return updatedState;\n    case LoginUserTypes.BOOK_TRUCK_CLEAR:\n      return initialState;\n    default:\n      return state;\n  }\n};\n\nexport default TruckBook;\n"]},"metadata":{},"sourceType":"module"}