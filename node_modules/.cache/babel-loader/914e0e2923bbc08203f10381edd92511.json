{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\src\\\\components\\\\MultiLocationCard\\\\MultiLocationCard.tsx\";\n\nimport { IonCard, IonCardContent } from \"@ionic/react\";\nimport moment from \"moment\";\nimport React from \"react\"; //import { containerType } from \"../../data\";\n\nimport { minDate, todayDate } from \"../../services/Common\";\nimport AddressLink from \"../Address/AddressLink\";\nimport Calendar from \"../calendar/Calendar\";\nimport SimpleDropdown from \"../dropdownInput/SimpleDropdown\";\nimport Icon from \"../Icon\";\nimport UnderLineOnly from \"../InputBorders/UnderLineOnly\";\nimport \"./MultiLocationCard.scss\";\nvar calenderIcon = {\n  name: \"calendar\",\n  slot: \"start\",\n  class: \"calenderMargin absolutePosition zoom12\"\n};\n\nvar MultiLocationCard = function MultiLocationCard(_ref) {\n  var icon = _ref.icon,\n      arrowDownIcon = _ref.arrowDownIcon,\n      item = _ref.item,\n      containerList = _ref.containerList,\n      updateDate = _ref.updateDate;\n\n  function updateTime(arg1, arg2) {\n    var value = moment(new Date(arg2)).format(\"DD/MM/YYYY H:mm\");\n    console.log(value);\n    updateDate(arg1, value);\n  }\n\n  return /*#__PURE__*/React.createElement(IonCard, {\n    className: \"multi-card \",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IonCardContent, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"top-part border-bottom\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cont-icon\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    iconProps: icon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"second-col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"first-row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 15\n    }\n  }, item.container_number), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sec-row\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(UnderLineOnly, {\n    className: \"black-underLine\",\n    content: /*#__PURE__*/React.createElement(SimpleDropdown, {\n      name: \"containerType\",\n      value: item.containerType // errors={errors.dropInterval}\n      ,\n      type: \"text\",\n      required: true,\n      onChange: function onChange(arg1, arg2) {\n        return updateDate(arg1, arg2);\n      },\n      datatype: \"TEXT\",\n      placeholder: \"Container Type\",\n      listValues: containerList // || containerType}\n      ,\n      icon2: arrowDownIcon,\n      className: \"firstElement rightGap\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"third-col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(UnderLineOnly, {\n    className: \"black-underLine\",\n    content: /*#__PURE__*/React.createElement(Calendar, {\n      name: \"date_time\",\n      value: item.displayTime || todayDate,\n      label: \"Date\" //errors={errors.dateAndTime}\n      ,\n      type: \"text\",\n      required: true,\n      onChange: updateDate,\n      placeholder: \"text\",\n      minDate: minDate,\n      icon: calenderIcon,\n      displayFormat: \"DD-MMM-YYYY HH:mm\",\n      className: \"leftGap \",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bottom-part\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"second-col\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(AddressLink, {\n    setAddress: updateDate,\n    value: item.address,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 15\n    }\n  }))))));\n};\n\nexport default MultiLocationCard;","map":{"version":3,"sources":["D:/SVN-folder/New-BRANCH-PUSH/New folder/src/components/MultiLocationCard/MultiLocationCard.tsx"],"names":["IonCard","IonCardContent","moment","React","minDate","todayDate","AddressLink","Calendar","SimpleDropdown","Icon","UnderLineOnly","calenderIcon","name","slot","class","MultiLocationCard","icon","arrowDownIcon","item","containerList","updateDate","updateTime","arg1","arg2","value","Date","format","console","log","container_number","containerType","displayTime","address"],"mappings":";;;AAAA,SAASA,OAAT,EAAkBC,cAAlB,QAAkD,cAAlD;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;AACA,SAASC,OAAT,EAAkBC,SAAlB,QAAmC,uBAAnC;AAEA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,OAAOC,cAAP,MAA2B,iCAA3B;AACA,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,aAAP,MAA0B,+BAA1B;AACA,OAAO,0BAAP;AASA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,UADa;AAEnBC,EAAAA,IAAI,EAAE,OAFa;AAGnBC,EAAAA,KAAK,EAAE;AAHY,CAArB;;AAMA,IAAMC,iBAAmD,GAAG,SAAtDA,iBAAsD,OAMtD;AAAA,MALJC,IAKI,QALJA,IAKI;AAAA,MAJJC,aAII,QAJJA,aAII;AAAA,MAHJC,IAGI,QAHJA,IAGI;AAAA,MAFJC,aAEI,QAFJA,aAEI;AAAA,MADJC,UACI,QADJA,UACI;;AACJ,WAASC,UAAT,CAAoBC,IAApB,EAA0BC,IAA1B,EAAgC;AAC9B,QAAIC,KAAK,GAAGtB,MAAM,CAAC,IAAIuB,IAAJ,CAASF,IAAT,CAAD,CAAN,CAAuBG,MAAvB,CAA8B,iBAA9B,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACAJ,IAAAA,UAAU,CAACE,IAAD,EAAOE,KAAP,CAAV;AACD;;AACD,sBACE,oBAAC,OAAD;AAAS,IAAA,SAAS,EAAC,aAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAER,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA4BE,IAAI,CAACW,gBAAjC,CADF,eAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,IAAA,OAAO,eACL,oBAAC,cAAD;AACE,MAAA,IAAI,EAAE,eADR;AAEE,MAAA,KAAK,EAAEX,IAAI,CAACY,aAFd,CAGE;AAHF;AAIE,MAAA,IAAI,EAAC,MAJP;AAKE,MAAA,QAAQ,EAAE,IALZ;AAME,MAAA,QAAQ,EAAE,kBAACR,IAAD,EAAOC,IAAP;AAAA,eAAgBH,UAAU,CAACE,IAAD,EAAOC,IAAP,CAA1B;AAAA,OANZ;AAOE,MAAA,QAAQ,EAAC,MAPX;AAQE,MAAA,WAAW,EAAC,gBARd;AASE,MAAA,UAAU,EAAEJ,aATd,CAS6B;AAT7B;AAUE,MAAA,KAAK,EAAEF,aAVT;AAWE,MAAA,SAAS,EAAC,uBAXZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,CAJF,eA2BE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,IAAA,OAAO,eACL,oBAAC,QAAD;AACE,MAAA,IAAI,EAAE,WADR;AAEE,MAAA,KAAK,EAAEC,IAAI,CAACa,WAAL,IAAoB1B,SAF7B;AAGE,MAAA,KAAK,EAAC,MAHR,CAIE;AAJF;AAKE,MAAA,IAAI,EAAC,MALP;AAME,MAAA,QAAQ,EAAE,IANZ;AAOE,MAAA,QAAQ,EAAEe,UAPZ;AAQE,MAAA,WAAW,EAAC,MARd;AASE,MAAA,OAAO,EAAEhB,OATX;AAUE,MAAA,IAAI,EAAEO,YAVR;AAWE,MAAA,aAAa,EAAC,mBAXhB;AAYE,MAAA,SAAS,EAAC,UAZZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA3BF,CADF,eAkDE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAa,IAAA,UAAU,EAAES,UAAzB;AAAqC,IAAA,KAAK,EAAEF,IAAI,CAACc,OAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAlDF,CADF,CADF,CADF;AA8DD,CA1ED;;AA2EA,eAAejB,iBAAf","sourcesContent":["import { IonCard, IonCardContent, IonLabel } from \"@ionic/react\";\r\nimport moment from \"moment\";\r\nimport React from \"react\";\r\n//import { containerType } from \"../../data\";\r\nimport { minDate, todayDate } from \"../../services/Common\";\r\nimport { dropIntervals } from \"../../util/Constants\";\r\nimport AddressLink from \"../Address/AddressLink\";\r\nimport Calendar from \"../calendar/Calendar\";\r\nimport SimpleDropdown from \"../dropdownInput/SimpleDropdown\";\r\nimport Icon from \"../Icon\";\r\nimport UnderLineOnly from \"../InputBorders/UnderLineOnly\";\r\nimport \"./MultiLocationCard.scss\";\r\n\r\ninterface MultiLocationCardProps {\r\n  icon: any;\r\n  arrowDownIcon?: any;\r\n  item: any;\r\n  containerList?: any;\r\n  updateDate: (arg1, arg2) => any;\r\n}\r\nconst calenderIcon = {\r\n  name: \"calendar\",\r\n  slot: \"start\",\r\n  class: \"calenderMargin absolutePosition zoom12\",\r\n};\r\n\r\nconst MultiLocationCard: React.FC<MultiLocationCardProps> = ({\r\n  icon,\r\n  arrowDownIcon,\r\n  item,\r\n  containerList,\r\n  updateDate,\r\n}) => {\r\n  function updateTime(arg1, arg2) {\r\n    var value = moment(new Date(arg2)).format(\"DD/MM/YYYY H:mm\");\r\n    console.log(value);\r\n    updateDate(arg1, value);\r\n  }\r\n  return (\r\n    <IonCard className=\"multi-card \">\r\n      <IonCardContent>\r\n        <div className=\"container\">\r\n          <div className=\"top-part border-bottom\">\r\n            <div className=\"cont-icon\">\r\n              <Icon iconProps={icon} />\r\n            </div>\r\n            <div className=\"second-col\">\r\n              <div className=\"first-row\">{item.container_number}</div>\r\n              <div className=\"sec-row\">\r\n                <UnderLineOnly\r\n                  className=\"black-underLine\"\r\n                  content={\r\n                    <SimpleDropdown\r\n                      name={\"containerType\"}\r\n                      value={item.containerType}\r\n                      // errors={errors.dropInterval}\r\n                      type=\"text\"\r\n                      required={true}\r\n                      onChange={(arg1, arg2) => updateDate(arg1, arg2)}\r\n                      datatype=\"TEXT\"\r\n                      placeholder=\"Container Type\"\r\n                      listValues={containerList} // || containerType}\r\n                      icon2={arrowDownIcon}\r\n                      className=\"firstElement rightGap\"\r\n                    />\r\n                  }\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"third-col\">\r\n              <UnderLineOnly\r\n                className=\"black-underLine\"\r\n                content={\r\n                  <Calendar\r\n                    name={\"date_time\"}\r\n                    value={item.displayTime || todayDate}\r\n                    label=\"Date\"\r\n                    //errors={errors.dateAndTime}\r\n                    type=\"text\"\r\n                    required={true}\r\n                    onChange={updateDate}\r\n                    placeholder=\"text\"\r\n                    minDate={minDate}\r\n                    icon={calenderIcon}\r\n                    displayFormat=\"DD-MMM-YYYY HH:mm\"\r\n                    className=\"leftGap \"\r\n                  />\r\n                }\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"bottom-part\">\r\n            <div className=\"second-col\">\r\n              <AddressLink setAddress={updateDate} value={item.address} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </IonCardContent>\r\n    </IonCard>\r\n  );\r\n};\r\nexport default MultiLocationCard;\r\n"]},"metadata":{},"sourceType":"module"}