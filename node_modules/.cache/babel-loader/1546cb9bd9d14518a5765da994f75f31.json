{"ast":null,"code":"import _slicedToArray from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\src\\\\components\\\\txtinput\\\\UnderLinedInput.tsx\";\n\nimport { IonInput, IonLabel, IonText } from \"@ionic/react\";\nimport React, { useState } from \"react\";\nimport \"./TxtInput.scss\";\n\nvar UnderLinedInput = function UnderLinedInput(_ref) {\n  var label = _ref.label,\n      name = _ref.name,\n      type = _ref.type,\n      value = _ref.value,\n      onChange = _ref.onChange,\n      required = _ref.required,\n      errors = _ref.errors,\n      pattern = _ref.pattern,\n      datatype = _ref.datatype,\n      description = _ref.description,\n      placeholder = _ref.placeholder,\n      icon = _ref.icon,\n      onBlur = _ref.onBlur,\n      readonly = _ref.readonly;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      validation = _useState2[0],\n      setvalidation = _useState2[1];\n\n  var checkKey = function checkKey(e) {\n    if (e.key.length > 1) return true; // setvalidation(!isValid(datatype, e.key));\n    // if (!isValid(datatype, e.key)) {\n    //   e.preventDefault();\n    //   return false;\n    // }\n  };\n\n  var onInpChange = function onInpChange(e) {\n    var val = e.target.value;\n    var validate;\n\n    if (e.target.pattern) {// val = getPatternValue(val, e.target.pattern, \"-\");\n    }\n\n    if (e.target.type === \"email\") {//   validate = validateEmail(val);\n      //   setvalidation(!validate);\n    }\n\n    onChange(e, val, validate);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-element-group\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"blue-underLine\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IonInput, {\n    name: name,\n    type: type,\n    value: value,\n    spellCheck: false,\n    autocapitalize: \"off\",\n    onKeyDown: checkKey,\n    onIonChange: onInpChange,\n    clearInput: true,\n    required: required,\n    autocomplete: \"off\",\n    pattern: pattern,\n    placeholder: placeholder,\n    className: \"textInputWithBlueBorder\",\n    onIonBlur: function onIonBlur(e) {\n      if (onBlur) onBlur(e);\n    },\n    readonly: readonly ? readonly : false,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }\n  }, errors && /*#__PURE__*/React.createElement(IonText, {\n    color: \"danger\",\n    className: \"validation-message\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    className: \"ion-padding-start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }\n  }, errors))), validation && description && /*#__PURE__*/React.createElement(IonText, {\n    color: \"danger\",\n    className: \"validation-message\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonLabel, {\n    className: \"ion-padding-start\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, description)));\n};\n\nexport default UnderLinedInput;","map":{"version":3,"sources":["D:/SVN-folder/New-BRANCH-PUSH/New folder/src/components/txtinput/UnderLinedInput.tsx"],"names":["IonInput","IonLabel","IonText","React","useState","UnderLinedInput","label","name","type","value","onChange","required","errors","pattern","datatype","description","placeholder","icon","onBlur","readonly","validation","setvalidation","checkKey","e","key","length","onInpChange","val","target","validate"],"mappings":"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","sourcesContent":["import { IonInput, IonLabel, IonText } from \"@ionic/react\";\r\nimport React, { useState } from \"react\";\r\nimport { TextInputType } from \"../../util/DataTypes\";\r\nimport \"./TxtInput.scss\";\r\n\r\ninterface TxtInputProps {\r\n  label?: string;\r\n  name: any;\r\n  type: any;\r\n  value?: any;\r\n  onChange?: any;\r\n  required?: any;\r\n  errors?: any;\r\n  pattern?: any;\r\n  datatype?: TextInputType;\r\n  description?: string;\r\n  placeholder: string;\r\n  icon?: any;\r\n  onBlur?: any;\r\n  readonly?: boolean;\r\n}\r\nconst UnderLinedInput: React.FC<TxtInputProps> = ({\r\n  label,\r\n  name,\r\n  type,\r\n  value,\r\n  onChange,\r\n  required,\r\n  errors,\r\n  pattern,\r\n  datatype,\r\n  description,\r\n  placeholder,\r\n  icon,\r\n  onBlur,\r\n  readonly,\r\n}) => {\r\n  const [validation, setvalidation] = useState(false);\r\n  const checkKey = (e) => {\r\n    if (e.key.length > 1) return true;\r\n    // setvalidation(!isValid(datatype, e.key));\r\n    // if (!isValid(datatype, e.key)) {\r\n    //   e.preventDefault();\r\n    //   return false;\r\n    // }\r\n  };\r\n\r\n  const onInpChange = (e) => {\r\n    let val = e.target.value;\r\n    let validate;\r\n    if (e.target.pattern) {\r\n      // val = getPatternValue(val, e.target.pattern, \"-\");\r\n    }\r\n    if (e.target.type === \"email\") {\r\n      //   validate = validateEmail(val);\r\n      //   setvalidation(!validate);\r\n    }\r\n    onChange(e, val, validate);\r\n  };\r\n  return (\r\n    <div className=\"form-element-group\">\r\n      <div className=\"blue-underLine\">\r\n        {/* <legend>{label}</legend> */}\r\n        <IonInput\r\n          name={name}\r\n          type={type}\r\n          value={value}\r\n          spellCheck={false}\r\n          autocapitalize=\"off\"\r\n          onKeyDown={checkKey}\r\n          onIonChange={onInpChange}\r\n          clearInput={true}\r\n          required={required}\r\n          autocomplete=\"off\"\r\n          pattern={pattern}\r\n          placeholder={placeholder}\r\n          className=\"textInputWithBlueBorder\"\r\n          onIonBlur={(e) => {\r\n            if (onBlur) onBlur(e);\r\n          }}\r\n          readonly={readonly ? readonly : false}\r\n        ></IonInput>\r\n      </div>\r\n\r\n      <div className=\"\">\r\n        {errors && (\r\n          <IonText color=\"danger\" className=\"validation-message\">\r\n            <IonLabel className=\"ion-padding-start\">{errors}</IonLabel>\r\n          </IonText>\r\n        )}\r\n      </div>\r\n      {validation && description && (\r\n        <IonText color=\"danger\" className=\"validation-message\">\r\n          <IonLabel className=\"ion-padding-start\">{description}</IonLabel>\r\n        </IonText>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnderLinedInput;\r\n"]},"metadata":{},"sourceType":"module"}