{"ast":null,"code":"import _toConsumableArray from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\src\\\\pages\\\\address\\\\addressCard\\\\AddressCard.tsx\";\nimport React, { useEffect, useState } from \"react\";\nimport { IonCard, IonCardContent, IonCol, IonIcon, IonRow, IonText } from \"@ionic/react\";\nimport { useHistory } from \"react-router-dom\";\nimport { addCircle } from \"ionicons/icons\";\nimport \"./AddressCard.scss\";\nimport Store from \"../../../redux/Store\";\nimport * as EndPointURL from \"../../../util/EndPointURL\";\nimport { httpGetCallWithoutHeader, httpPostCallWithoutHeaderAndBody } from \"../../../services/EndPointApi\";\nimport * as reduxActions from \"../../../redux/actions/AllActions\";\nimport Alert from \"../../../components/alert/Alert\";\nexport default function AddressCard(props) {\n  var _this = this;\n\n  var history = useHistory();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      address = _useState2[0],\n      setAddress = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      agent = _useState4[0],\n      setAgent = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      alertPopup = _useState6[0],\n      showAlertPopup = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      message = _useState8[0],\n      setMessage = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      item = _useState10[0],\n      setItem = _useState10[1];\n\n  Store.subscribe(function () {\n    setAgent(Store.getState().CheckUserStatus.user.selectedAgent);\n    setAddress(Store.getState().Addresses);\n    console.log(\"calling store\");\n  });\n  useEffect(function () {\n    console.log('addressDB', Store.getState().Addresses);\n    getAddress();\n    console.log(\"add\", address);\n  }, [agent]);\n\n  var getAddress = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, result, addressess, newAddressess;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return httpGetCallWithoutHeader(EndPointURL.getAddress);\n\n            case 2:\n              response = _context.sent;\n              result = response;\n              _context.next = 6;\n              return response === null || response === void 0 ? void 0 : response.success;\n\n            case 6:\n              if (!_context.sent) {\n                _context.next = 18;\n                break;\n              }\n\n              addressess = reduxActions.clearAllAddress();\n              if (addressess) Store.dispatch(addressess);\n              console.log(response.data.addressDtoList.length);\n              response.data.addressDtoList.forEach(function (element) {\n                element.dropZone = element.selectedDropZone;\n              });\n              response.data.addressDtoList.disableHrs = response.data.disableHrs;\n              response.data.addressDtoList[0].isSelected = true;\n              newAddressess = reduxActions.addAddress(response.data.addressDtoList);\n              if (newAddressess) Store.dispatch(newAddressess);\n              setAddress(newAddressess.payLoad);\n              _context.next = 19;\n              break;\n\n            case 18:\n              if (response.data.data.dataItems[0].code == \"168\" || response.data.data.dataItems[0].error == \"No data available.\") {\n                addressess = reduxActions.clearAllAddress();\n                if (addressess) Store.dispatch(addressess);\n                setAddress([]);\n              }\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getAddress() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var updateAddress = function updateAddress(element) {\n    element.createMode = false;\n    console.log(element);\n    history.push(\"/addAddress\", element);\n  };\n\n  function showAlert(item) {\n    showAlertPopup(true);\n    setMessage(item.addressNickname);\n    setItem(item);\n  }\n\n  function deleteAddress(item, actionType) {\n    showAlertPopup(false);\n\n    if (actionType) {\n      var response = httpPostCallWithoutHeaderAndBody(EndPointURL.deleteAddress + item.code);\n      response.then(function (result) {\n        if (result.success) {\n          var newAddressess = reduxActions.deleteAddress(item.code);\n          if (newAddressess) Store.dispatch(newAddressess);\n        }\n      });\n    }\n  }\n\n  var alertProps = {\n    isShow: alertPopup,\n    message: message,\n    alertAction: deleteAddress,\n    item: item,\n    content: \"remove contact of\"\n  };\n\n  var onAddressSelect = function onAddressSelect(e, index) {\n    address.forEach(function (element) {\n      element.isSelected = false;\n    });\n    address[index].isSelected = true;\n    setAddress(_toConsumableArray(address));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"address-card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Alert, {\n    alertProps: alertProps,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(IonIcon, {\n    onClick: function onClick() {\n      return history.push(\"/addAddress\");\n    },\n    icon: addCircle,\n    className: \"addIcon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }), address.length === 0 ? /*#__PURE__*/React.createElement(IonCard, {\n    className: \"card emptyAddressCard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 32\n    }\n  }, /*#__PURE__*/React.createElement(IonCardContent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonText, {\n    className: \"emptyAddressText\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"Add new address\"))) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cardTopMargin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, address.map(function (element, index) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"addressCard\",\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(IonIcon, {\n      src: element.isSelected ? \"/assets/icon/addressBookBlue.svg\" : \"/assets/icon/addressBookGray.svg\",\n      className: \"contactIcon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(IonCard, {\n      className: \"card\",\n      onClick: function onClick(e) {\n        return onAddressSelect(e, index);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(IonCardContent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(IonRow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(IonCol, {\n      size: \"10\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IonRow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 23\n      }\n    }, element.addressNickname), /*#__PURE__*/React.createElement(IonRow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 23\n      }\n    }, element.selectedDropZoneLabel), /*#__PURE__*/React.createElement(IonRow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 23\n      }\n    }, element.dropAddress), /*#__PURE__*/React.createElement(IonRow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 23\n      }\n    }, \"Ph: \", element.consigneeContactNumber)), element.isSelected && /*#__PURE__*/React.createElement(IonCol, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 44\n      }\n    }, /*#__PURE__*/React.createElement(IonRow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IonIcon, {\n      onClick: function onClick() {\n        return updateAddress(element);\n      },\n      src: \"/assets/icon/edit-address.svg\",\n      className: \"editIcon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 25\n      }\n    })), /*#__PURE__*/React.createElement(IonRow, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(IonIcon, {\n      onClick: function onClick() {\n        return showAlert(element);\n      },\n      src: \"/assets/icon/delete-address.svg\",\n      className: \"editIcon\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    })))))));\n  })));\n}","map":{"version":3,"sources":["D:/SVN-folder/New-BRANCH-PUSH/New folder/src/pages/address/addressCard/AddressCard.tsx"],"names":["React","useEffect","useState","IonCard","IonCardContent","IonCol","IonIcon","IonRow","IonText","useHistory","addCircle","Store","EndPointURL","httpGetCallWithoutHeader","httpPostCallWithoutHeaderAndBody","reduxActions","Alert","AddressCard","props","history","address","setAddress","agent","setAgent","alertPopup","showAlertPopup","message","setMessage","item","setItem","subscribe","getState","CheckUserStatus","user","selectedAgent","Addresses","console","log","getAddress","response","result","success","addressess","clearAllAddress","dispatch","data","addressDtoList","length","forEach","element","dropZone","selectedDropZone","disableHrs","isSelected","newAddressess","addAddress","payLoad","dataItems","code","error","updateAddress","createMode","push","showAlert","addressNickname","deleteAddress","actionType","then","alertProps","isShow","alertAction","content","onAddressSelect","e","index","map","selectedDropZoneLabel","dropAddress","consigneeContactNumber"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { IonCard, IonCardContent, IonCol, IonIcon, IonRow, IonText } from \"@ionic/react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { addCircle } from \"ionicons/icons\";\r\nimport \"./AddressCard.scss\";\r\nimport Store from \"../../../redux/Store\";\r\nimport * as EndPointURL from \"../../../util/EndPointURL\";\r\nimport { httpGetCallWithoutHeader, httpPostCallWithoutHeaderAndBody } from \"../../../services/EndPointApi\";\r\nimport * as reduxActions from \"../../../redux/actions/AllActions\";\r\nimport Alert from \"../../../components/alert/Alert\";\r\n\r\nexport default function AddressCard(props: any) {\r\n  let history = useHistory();\r\n  const [address, setAddress] = useState([]);\r\n  const [agent, setAgent] = useState();\r\n  const [alertPopup, showAlertPopup] = useState(false);\r\n  const [message, setMessage] = useState(\"\");\r\n  const [item, setItem] = useState({});\r\n\r\n  Store.subscribe(() => {\r\n    setAgent(Store.getState().CheckUserStatus.user.selectedAgent);\r\n    setAddress(Store.getState().Addresses);\r\n    console.log(\"calling store\");\r\n  });\r\n\r\n  useEffect(() => {\r\n    console.log('addressDB', Store.getState().Addresses);\r\n    getAddress();\r\n    console.log(\"add\", address)\r\n  }, [agent]);\r\n\r\n  const getAddress = async () => {\r\n    var response = await httpGetCallWithoutHeader(EndPointURL.getAddress);\r\n    var result = response;\r\n    if (await response?.success) {\r\n      var addressess = reduxActions.clearAllAddress();\r\n      if (addressess) Store.dispatch(addressess);\r\n\r\n      console.log(response.data.addressDtoList.length);\r\n\r\n      response.data.addressDtoList.forEach((element) => {\r\n        element.dropZone = element.selectedDropZone;\r\n      });\r\n      response.data.addressDtoList.disableHrs = response.data.disableHrs;\r\n      response.data.addressDtoList[0].isSelected = true;\r\n\r\n      var newAddressess = reduxActions.addAddress(response.data.addressDtoList);\r\n      if (newAddressess) Store.dispatch(newAddressess);\r\n      setAddress(newAddressess.payLoad);\r\n    } else if (response.data.data.dataItems[0].code == \"168\" || response.data.data.dataItems[0].error == \"No data available.\") {\r\n      var addressess = reduxActions.clearAllAddress();\r\n      if (addressess) Store.dispatch(addressess);\r\n      setAddress([]);\r\n\r\n    }\r\n  }\r\n\r\n  const updateAddress = (element) => {\r\n    element.createMode = false;\r\n    console.log(element);\r\n    history.push(\"/addAddress\", element);\r\n  }\r\n\r\n  function showAlert(item) {\r\n    showAlertPopup(true);\r\n    setMessage(item.addressNickname);\r\n    setItem(item);\r\n  }\r\n\r\n  function deleteAddress(item, actionType) {\r\n    showAlertPopup(false);\r\n    if (actionType) {\r\n      var response = httpPostCallWithoutHeaderAndBody(EndPointURL.deleteAddress + item.code);\r\n      response.then((result) => {\r\n        if (result.success) {\r\n          var newAddressess = reduxActions.deleteAddress(item.code);\r\n          if (newAddressess) Store.dispatch(newAddressess);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  const alertProps = {\r\n    isShow: alertPopup,\r\n    message: message,\r\n    alertAction: deleteAddress,\r\n    item: item,\r\n    content: \"remove contact of\",\r\n  };\r\n\r\n  const onAddressSelect = (e, index) => {\r\n    address.forEach(element => {\r\n      element.isSelected = false;\r\n    });\r\n    address[index].isSelected = true;\r\n    setAddress([...address]);\r\n  }\r\n\r\n  return (\r\n    <div id=\"address-card\">\r\n      <Alert alertProps={alertProps} />\r\n      <IonIcon\r\n        onClick={() =>\r\n          history.push(\"/addAddress\")\r\n        }\r\n        icon={addCircle}\r\n        className=\"addIcon\"\r\n      />\r\n      {address.length === 0 ? (<IonCard className=\"card emptyAddressCard\">\r\n        <IonCardContent>\r\n          <IonText className=\"emptyAddressText\">\r\n            Add new address\r\n          </IonText>\r\n        </IonCardContent>\r\n      </IonCard>) : (\r\n        <div className=\"cardTopMargin\">\r\n          {address.map((element: any, index: any) => (\r\n            <div className=\"addressCard\" key={index}>\r\n              <IonIcon\r\n                src={element.isSelected ? \"/assets/icon/addressBookBlue.svg\" : \"/assets/icon/addressBookGray.svg\"}\r\n                className=\"contactIcon\"\r\n              />\r\n              <IonCard className=\"card\" onClick={(e) => onAddressSelect(e, index)}>\r\n                <IonCardContent>\r\n                  <IonRow>\r\n                    <IonCol size=\"10\">\r\n                      <IonRow>\r\n                        {element.addressNickname}\r\n                      </IonRow>\r\n                      <IonRow>\r\n                        {element.selectedDropZoneLabel}\r\n                      </IonRow>\r\n                      <IonRow>\r\n                        {element.dropAddress}\r\n                      </IonRow>\r\n                      <IonRow>\r\n                        Ph: {element.consigneeContactNumber}\r\n                      </IonRow>\r\n                    </IonCol>\r\n                    {element.isSelected && <IonCol>\r\n                      <IonRow>\r\n                        <IonIcon\r\n                          onClick={() => updateAddress(element)}\r\n                          src=\"/assets/icon/edit-address.svg\"\r\n                          className=\"editIcon\"\r\n                        />\r\n                      </IonRow>\r\n                      <IonRow>\r\n                        <IonIcon\r\n                          onClick={() => showAlert(element)}\r\n                          src=\"/assets/icon/delete-address.svg\"\r\n                          className=\"editIcon\"\r\n                        />\r\n                      </IonRow>\r\n                    </IonCol>}\r\n                  </IonRow>\r\n                </IonCardContent>\r\n              </IonCard>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"]},"metadata":{},"sourceType":"module"}