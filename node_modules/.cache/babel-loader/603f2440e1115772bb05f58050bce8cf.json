{"ast":null,"code":"import _defineProperty from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\SVN-folder\\\\New-BRANCH-PUSH\\\\New folder\\\\src\\\\components\\\\PopUp\\\\SearchBoeByDate.tsx\";\n\nimport { IonButton, IonIcon } from \"@ionic/react\";\nimport moment from \"moment\";\nimport React, { useState } from \"react\";\nimport { lastYear, todayDate } from \"../../services/Common\";\nimport Calendar from \"../calendar/Calendar\";\n\nvar SearchBoeByDate = function SearchBoeByDate(_ref) {\n  var openOrCloseModal = _ref.openOrCloseModal,\n      headerName = _ref.headerName;\n\n  var _useState = useState({\n    fromDate: {\n      value: \"\",\n      minDate: \"\",\n      maxdate: \"\"\n    },\n    toDate: {\n      value: todayDate,\n      minDate: \"\",\n      maxdate: \"\"\n    }\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      form = _useState2[0],\n      setForm = _useState2[1];\n\n  var handleChange = function handleChange(e, value) {\n    if (e.target.name === \"fromDate\") {\n      setForm(_objectSpread(_objectSpread({}, form), {}, {\n        toDate: {\n          value: value,\n          minDate: moment(new Date(value)).format(\"YYYY-MM-DD\"),\n          paramDate: moment(new Date(value)).format(\"DD/MM/yyyy\")\n        }\n      }));\n    }\n\n    setForm(function (prevState) {\n      return _objectSpread(_objectSpread({}, prevState), {}, _defineProperty({}, e.target.name, _objectSpread(_objectSpread({}, form[e.target.name]), {}, {\n        paramDate: moment(new Date(value)).format(\"DD/MM/yyyy\"),\n        value: value\n      })));\n    });\n  };\n\n  var calenderIcon = {\n    name: \"calendar\",\n    slot: \"end\",\n    class: \"calenderMargin\"\n  };\n\n  function reset() {\n    setForm({\n      fromDate: {\n        value: todayDate,\n        minDate: \"\",\n        maxdate: \"\"\n      },\n      toDate: {\n        value: \"\",\n        minDate: \"\",\n        maxdate: \"\"\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-header\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, headerName)), /*#__PURE__*/React.createElement(\"div\", {\n    onClick: function onClick() {\n      return openOrCloseModal(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonIcon, {\n    class: \"blueCloseIc menuClose blueClose\",\n    src: \"assets/icon/close.svg\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"popup-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \" twoItems\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Calendar, {\n    name: \"fromDate\",\n    value: form.fromDate.value,\n    label: \"Date\" // errors={errors.dateAndTime}\n    ,\n    type: \"text\",\n    required: true,\n    onChange: handleChange,\n    placeholder: \"--/--/----\",\n    minDate: lastYear,\n    icon: calenderIcon,\n    className: \"leftCalendar\",\n    displayFormat: \"DD/MMM/YYYY\",\n    max: todayDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Calendar, {\n    name: \"toDate\",\n    value: form.toDate.value //{form.toDate.value}\n    ,\n    label: \"Date\" //errors={errors.dateAndTime}\n    ,\n    type: \"text\",\n    required: true,\n    onChange: handleChange,\n    placeholder: \"--/--/----\",\n    minDate: form.toDate.minDate,\n    icon: calenderIcon,\n    className: \"rightCalendar\",\n    displayFormat: \"DD/MMM/YYYY\",\n    max: todayDate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"twoItems\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IonButton, {\n    className: \"reset\",\n    fill: \"clear\",\n    onClick: function onClick() {\n      return reset();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, \"Reset\"), /*#__PURE__*/React.createElement(IonButton, {\n    className: \"apply-filter\",\n    fill: \"clear\",\n    onClick: function onClick() {\n      return openOrCloseModal(false, form.fromDate.paramDate, form.toDate.paramDate);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, \"Apply Filter\"))));\n};\n\nexport default SearchBoeByDate;","map":{"version":3,"sources":["D:/SVN-folder/New-BRANCH-PUSH/New folder/src/components/PopUp/SearchBoeByDate.tsx"],"names":["IonButton","IonIcon","moment","React","useState","lastYear","todayDate","Calendar","SearchBoeByDate","openOrCloseModal","headerName","fromDate","value","minDate","maxdate","toDate","form","setForm","handleChange","e","target","name","Date","format","paramDate","prevState","calenderIcon","slot","class","reset"],"mappings":"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","sourcesContent":["import {\r\n  IonButton,\r\n  IonIcon,\r\n  IonLabel,\r\n  IonListHeader,\r\n  IonModal,\r\n} from \"@ionic/react\";\r\nimport moment from \"moment\";\r\nimport React, { useState } from \"react\";\r\nimport { lastYear, todayDate } from \"../../services/Common\";\r\nimport Calendar from \"../calendar/Calendar\";\r\n\r\ninterface searchBoeByDateProps {\r\n  openOrCloseModal?: (modalStatus, param1?, param2?) => any;\r\n  headerName: string;\r\n}\r\n\r\nconst SearchBoeByDate: React.FC<searchBoeByDateProps> = ({\r\n  openOrCloseModal,\r\n  headerName,\r\n}) => {\r\n  const [form, setForm] = useState<any>({\r\n    fromDate: { value: \"\", minDate: \"\", maxdate: \"\" },\r\n    toDate: { value: todayDate, minDate: \"\", maxdate: \"\" },\r\n  });\r\n  const handleChange = (e: any, value: any) => {\r\n    if (e.target.name === \"fromDate\") {\r\n      setForm({\r\n        ...form,\r\n        toDate: {\r\n          value: value,\r\n          minDate: moment(new Date(value)).format(\"YYYY-MM-DD\"),\r\n          paramDate: moment(new Date(value)).format(\"DD/MM/yyyy\"),\r\n        },\r\n      });\r\n    }\r\n\r\n    setForm((prevState) => ({\r\n      ...prevState,\r\n      [e.target.name]: {\r\n        ...form[e.target.name],\r\n        paramDate: moment(new Date(value)).format(\"DD/MM/yyyy\"),\r\n        value: value,\r\n      },\r\n    }));\r\n  };\r\n\r\n  const calenderIcon = {\r\n    name: \"calendar\",\r\n    slot: \"end\",\r\n    class: \"calenderMargin\",\r\n  };\r\n\r\n  function reset() {\r\n    setForm({\r\n      fromDate: { value: todayDate, minDate: \"\", maxdate: \"\" },\r\n      toDate: { value: \"\", minDate: \"\", maxdate: \"\" },\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"popup-header\">\r\n        <div className=\"header-title\">\r\n          <span>{headerName}</span>\r\n        </div>\r\n        <div onClick={() => openOrCloseModal(false)}>\r\n          <IonIcon\r\n            class=\"blueCloseIc menuClose blueClose\"\r\n            src=\"assets/icon/close.svg\"\r\n          ></IonIcon>\r\n        </div>\r\n      </div>\r\n      <div className=\"popup-content\">\r\n        <div className=\" twoItems\">\r\n          <Calendar\r\n            name={\"fromDate\"}\r\n            value={form.fromDate.value}\r\n            label=\"Date\"\r\n            // errors={errors.dateAndTime}\r\n            type=\"text\"\r\n            required={true}\r\n            onChange={handleChange}\r\n            placeholder=\"--/--/----\"\r\n            minDate={lastYear}\r\n            icon={calenderIcon}\r\n            className=\"leftCalendar\"\r\n            displayFormat=\"DD/MMM/YYYY\"\r\n            max={todayDate}\r\n          />\r\n          <Calendar\r\n            name={\"toDate\"}\r\n            value={form.toDate.value} //{form.toDate.value}\r\n            label=\"Date\"\r\n            //errors={errors.dateAndTime}\r\n            type=\"text\"\r\n            required={true}\r\n            onChange={handleChange}\r\n            placeholder=\"--/--/----\"\r\n            minDate={form.toDate.minDate}\r\n            icon={calenderIcon}\r\n            className=\"rightCalendar\"\r\n            displayFormat=\"DD/MMM/YYYY\"\r\n            max={todayDate}\r\n          />\r\n        </div>\r\n        <div className=\"twoItems\">\r\n          <IonButton className=\"reset\" fill=\"clear\" onClick={() => reset()}>\r\n            Reset\r\n          </IonButton>\r\n          <IonButton\r\n            className=\"apply-filter\"\r\n            fill=\"clear\"\r\n            onClick={() =>\r\n              openOrCloseModal(\r\n                false,\r\n                form.fromDate.paramDate,\r\n                form.toDate.paramDate\r\n              )\r\n            }\r\n          >\r\n            Apply Filter\r\n          </IonButton>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nexport default SearchBoeByDate;\r\n"]},"metadata":{},"sourceType":"module"}