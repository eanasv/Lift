{"ast":null,"code":"import { REGEX_MAP } from \"./Constants\";\n\nvar milliseconds = function milliseconds(h, m, s) {\n  return (h * 60 * 60 + m * 60 + s) * 1000;\n};\n\nvar disabledHr;\nexport var isEmpty = function isEmpty(data) {\n  if (data === null) {\n    data = \"\";\n  }\n\n  return data.trim() === \"\";\n};\nexport var isValid = function isValid(dataType, data, delimiter) {\n  if (delimiter) {\n    data = data.replaceAll(delimiter, \"\");\n  }\n\n  return new RegExp(REGEX_MAP[dataType]).test(data);\n};\nexport var getPatternValue = function getPatternValue(data, pattern, delimiter) {\n  if (!data || !pattern || !delimiter) {\n    return data;\n  }\n\n  var cleaned = data.replaceAll(\" \", \"\").replaceAll(delimiter, \"\");\n  var finalstr = \"\";\n  var ctr = 0;\n\n  for (var i = 0; i < pattern.length && ctr < cleaned.length; i++) {\n    if (pattern[i] != delimiter) {\n      finalstr = finalstr + cleaned[ctr];\n      ctr = ctr + 1;\n    } else {\n      finalstr = finalstr + delimiter;\n    }\n  }\n\n  return finalstr;\n};\nexport var stringToColour = function stringToColour(str) {\n  var hash = 0;\n\n  for (var i = 0; i < str.length; i++) {\n    hash = str.charCodeAt(i) + ((hash << 5) - hash);\n  }\n\n  var colour = '#';\n\n  for (var i = 0; i < 3; i++) {\n    var value = hash >> i * 8 & 0xFF;\n    colour += ('00' + value.toString(16)).substr(-2);\n  }\n\n  return colour;\n};\nexport var validateEmail = function validateEmail(mail) {\n  return new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$/i).test(mail);\n};\nexport var validatePhone = function validatePhone(number) {\n  var regexp = new RegExp(\"^\\\\d{8}$\");\n  var nameTest = regexp.test(number);\n  return nameTest;\n};\nexport var validateMobile = function validateMobile(number) {\n  var regexp = new RegExp(\"^\\\\d{9}$\");\n  var nameTest = regexp.test(number);\n  return nameTest;\n};\nexport function addTimeToDateTime(date, timeToAdd) {\n  var d2 = new Date(date);\n  return new Date(d2.setMinutes(date.getMinutes() + timeToAdd)); //return updatedDate;\n}\nexport function setDisabledMinHr(disableHr) {\n  //testFun(testContent);\n  var disabledTime = addTimeToDateTime(new Date(), 1 * disableHr * 60 || 1);\n  disabledHr = disabledTime.toISOString();\n  return disabledHr;\n}\nexport function getDisabledMinHr() {\n  return disabledHr;\n}\nexport var convertToMillSeconds = function convertToMillSeconds(interval) {\n  var timeParts = interval.split(\":\");\n  var result = milliseconds(timeParts[0], timeParts[1], 0); // days\n\n  return result;\n};","map":{"version":3,"sources":["D:/SVN-folder/New-BRANCH-PUSH/New folder/src/util/Utilities.ts"],"names":["REGEX_MAP","milliseconds","h","m","s","disabledHr","isEmpty","data","trim","isValid","dataType","delimiter","replaceAll","RegExp","test","getPatternValue","pattern","cleaned","finalstr","ctr","i","length","stringToColour","str","hash","charCodeAt","colour","value","toString","substr","validateEmail","mail","validatePhone","number","regexp","nameTest","validateMobile","addTimeToDateTime","date","timeToAdd","d2","Date","setMinutes","getMinutes","setDisabledMinHr","disableHr","disabledTime","toISOString","getDisabledMinHr","convertToMillSeconds","interval","timeParts","split","result"],"mappings":"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","sourcesContent":["import { REGEX_MAP } from \"./Constants\";\r\nimport moment from \"moment\";\r\nconst milliseconds = (h, m, s) => ((h * 60 * 60 + m * 60 + s) * 1000);\r\n\r\nvar disabledHr;\r\nexport const isEmpty = (data: any) => {\r\n  if(data===null){\r\n  data=\"\"}\r\n  return data.trim() === \"\";\r\n};\r\n\r\nexport const isValid = (dataType: any, data: any, delimiter?: string) => {\r\n  if (delimiter) {\r\n    data = data.replaceAll(delimiter, \"\");\r\n  }\r\n  return new RegExp(REGEX_MAP[dataType]).test(data);\r\n};\r\n\r\nexport const getPatternValue = (data: any, pattern: any, delimiter: any) => {\r\n  if (!data || !pattern || !delimiter) {\r\n    return data;\r\n  }\r\n  var cleaned = data.replaceAll(\" \", \"\").replaceAll(delimiter, \"\");\r\n  let finalstr = \"\";\r\n  let ctr = 0;\r\n\r\n  for (let i = 0; i < pattern.length && ctr < cleaned.length; i++) {\r\n    if (pattern[i] != delimiter) {\r\n      finalstr = finalstr + cleaned[ctr];\r\n      ctr = ctr + 1;\r\n    } else {\r\n      finalstr = finalstr + delimiter;\r\n    }\r\n  }\r\n  return finalstr;\r\n};\r\n\r\nexport const stringToColour = function(str) {\r\n  var hash = 0;\r\n  for (var i = 0; i < str.length; i++) {\r\n      hash = str.charCodeAt(i) + ((hash << 5) - hash);\r\n  }\r\n  var colour = '#';\r\n  for (var i = 0; i < 3; i++) {\r\n      var value = (hash >> (i * 8)) & 0xFF;\r\n      colour += ('00' + value.toString(16)).substr(-2);\r\n  }\r\n  return colour;\r\n}\r\n\r\nexport const validateEmail=(mail) =>{\r\n  return new RegExp(/^[A-Z0-9._%+-]+@[A-Z0-9.-]+.[A-Z]{2,4}$/i).test(mail);\r\n}\r\n\r\nexport const validatePhone=(number) =>{\r\n  let regexp =  new RegExp(\"^\\\\d{8}$\");\r\n  var nameTest = regexp.test(number);\r\n  return nameTest;\r\n}\r\n\r\nexport const validateMobile=(number) =>{\r\n  let regexp =  new RegExp(\"^\\\\d{9}$\");\r\n  var nameTest = regexp.test(number);\r\n  return nameTest;\r\n}\r\n\r\nexport function addTimeToDateTime(date: any, timeToAdd: any) {\r\n  var d2 = new Date(date);\r\n  return new Date(d2.setMinutes(date.getMinutes() + timeToAdd));\r\n  //return updatedDate;\r\n}\r\n\r\nexport function setDisabledMinHr(disableHr) {\r\n  //testFun(testContent);\r\n  var disabledTime = addTimeToDateTime(new Date(), 1 * disableHr * 60 || 1);\r\n  disabledHr = disabledTime.toISOString();\r\n  return disabledHr;\r\n}\r\n\r\nexport function getDisabledMinHr() {\r\n  return disabledHr;\r\n}\r\n\r\nexport const convertToMillSeconds = (interval: string) => {\r\n  let timeParts = interval.split(\":\");\r\n  let result = milliseconds(timeParts[0], timeParts[1], 0);\r\n  // days\r\n  return result;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}